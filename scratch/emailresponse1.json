{
  "id": "18c94bf7755b8ad3",
  "threadId": "18c94bf7755b8ad3",
  "labelIds": ["UNREAD", "CATEGORY_UPDATES", "INBOX"],
  "snippet": "Hi Ynab, Welcome to Google. Your new account comes with access to Google products, apps, and services. Here are a few tips to get you started. Get the most out of your Google Account We&#39;ll send you",
  "payload": {
    "partId": "",
    "mimeType": "multipart/alternative",
    "filename": "",
    "headers": [
      {
        "name": "Delivered-To",
        "value": "ynabvenmo@gmail.com"
      },
      {
        "name": "Received",
        "value": "by 2002:a05:6f02:4283:b0:61:ec55:ec8f with SMTP id n3csp1403637rcf;        Fri, 22 Dec 2023 19:37:05 -0800 (PST)"
      },
      {
        "name": "X-Received",
        "value": "by 2002:a05:6870:b250:b0:1fb:75c:4016 with SMTP id b16-20020a056870b25000b001fb075c4016mr3110215oam.118.1703302624843;        Fri, 22 Dec 2023 19:37:04 -0800 (PST)"
      },
      {
        "name": "ARC-Seal",
        "value": "i=1; a=rsa-sha256; t=1703302624; cv=none;        d=google.com; s=arc-20160816;        b=iooQtoSdSvYdhtk4M0fuLPWqAMKieruhQKeXMLn6Oo95PgJ2XeiMbU2D38GsjAm203         EtPRKtEkhCM71eNgnMeDHl5hwR1+ZSgy5H5jBZRwGLAwtebVGmA2bdQPSDwuGQG0M0XU         2OGkXAzqd5U6MljYkbYtL8W9gV0IMEQ/4PSJnxxcpqj/dyTg8VmqjQethuc8p5NwbjlV         5dl08Fr+bq9V78RQXgf5+yCqon81To8xCZdwDKRG9e3qi68NK0afEoXIXVyIzkXzSWRi         plWfrASX+jUaPZi6boSSevWYqCse8h1HRAwe/7QuSC/dZmvDq4PMplXf3M6ip37JlYDl         +cZA=="
      },
      {
        "name": "ARC-Message-Signature",
        "value": "i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;        h=to:from:subject:message-id:feedback-id:reply-to:date:mime-version         :dkim-signature;        bh=NtSOQWqAanuJwgUfHVTPKbB0M67HpZ0j91jVoTNC6eQ=;        fh=andwcFIuA96jATpCNebKBI1x/GalENNSZsF4WupzSYY=;        b=dDIQbGF8k7AYFo+xOJkIoE1RoAS/QHmnMd3TbvwefHvPcBMr+l3+mEQwjNkU9/Q7ti         YYFfjScLP4bMGbT0jvlTW3fKu3lL6NanD1zM6Szm0aCMK/Z5Om/blLTSeFxd6QdS6aUI         42Ye0Md1HJ4li2OXXhLHi16IiT5b3uzZiHuHawuTtsTR78FdXH/++N4d6D9gFu8CFrD9         D+yMj67xnpidE0w84sSl+FJtMTyYpdg6TvZ5LB0pzcm+VGdZPslVmrd5PrGhueqLh1b3         /2zavoAZRaACt56SZjoK5YQIzK4NlypLFCSTqN+6FDpk+JSl7SyxL5v6JTbXbPO+5kKB         13PQ=="
      },
      {
        "name": "ARC-Authentication-Results",
        "value": "i=1; mx.google.com;       dkim=pass header.i=@google.com header.s=20230601 header.b=bViYeTvX;       spf=pass (google.com: domain of 3evsgzrskag4saasxqoayygzufkfqmy-zadqbxksaasxq.oay@scoutcamp.bounces.google.com designates 209.85.220.69 as permitted sender) smtp.mailfrom=3eVSGZRsKAG4SaaSXQOaYYgZUfkfQMY-ZadQbXkSaaSXQ.OaY@scoutcamp.bounces.google.com;       dmarc=pass (p=REJECT sp=REJECT dis=NONE) header.from=google.com"
      },
      {
        "name": "Return-Path",
        "value": "\u003c3eVSGZRsKAG4SaaSXQOaYYgZUfkfQMY-ZadQbXkSaaSXQ.OaY@scoutcamp.bounces.google.com\u003e"
      },
      {
        "name": "Received",
        "value": "from mail-sor-f69.google.com (mail-sor-f69.google.com. [209.85.220.69])        by mx.google.com with SMTPS id an19-20020a056871b19300b00203b204e7dasor2354614oac.6.2023.12.22.19.37.04        for \u003cynabvenmo@gmail.com\u003e        (Google Transport Security);        Fri, 22 Dec 2023 19:37:04 -0800 (PST)"
      },
      {
        "name": "Received-SPF",
        "value": "pass (google.com: domain of 3evsgzrskag4saasxqoayygzufkfqmy-zadqbxksaasxq.oay@scoutcamp.bounces.google.com designates 209.85.220.69 as permitted sender) client-ip=209.85.220.69;"
      },
      {
        "name": "Authentication-Results",
        "value": "mx.google.com;       dkim=pass header.i=@google.com header.s=20230601 header.b=bViYeTvX;       spf=pass (google.com: domain of 3evsgzrskag4saasxqoayygzufkfqmy-zadqbxksaasxq.oay@scoutcamp.bounces.google.com designates 209.85.220.69 as permitted sender) smtp.mailfrom=3eVSGZRsKAG4SaaSXQOaYYgZUfkfQMY-ZadQbXkSaaSXQ.OaY@scoutcamp.bounces.google.com;       dmarc=pass (p=REJECT sp=REJECT dis=NONE) header.from=google.com"
      },
      {
        "name": "DKIM-Signature",
        "value": "v=1; a=rsa-sha256; c=relaxed/relaxed;        d=google.com; s=20230601; t=1703302624; x=1703907424; dara=google.com;        h=to:from:subject:message-id:feedback-id:reply-to:date:mime-version         :from:to:cc:subject:date:message-id:reply-to;        bh=NtSOQWqAanuJwgUfHVTPKbB0M67HpZ0j91jVoTNC6eQ=;        b=bViYeTvXC+3jz6cAzuxJDdB+EMOrlqa9CkmqpOJOn72Y0FJh/WQ1i0jeQJ9nCYYIy4         xpgLOQn/nzSakRfnGnJQzBbP8tz2PPCM2ZmcTQJsMnADcm7bLU9DdPLgg6oC/DzbXm5N         9rRXGVJZBxGq8G1ckn9PXZdIBCJaEkHeKz5BorbowltcCynpaJhFVMCrzmMorfPQzAYm         /rnHPbTZz7x2F793W77hcOV4l/OT0dxsx1iK4cETWiKeb/NzyvwE78+EHDmyxmbGAU37         S5ARLCL9Gx4/yLVMOwhcHNXAK1RuJtk2ERO+MfdUPzwvsdau3uTlUvXdIe0tqZM7gFzu         wORQ=="
      },
      {
        "name": "X-Google-DKIM-Signature",
        "value": "v=1; a=rsa-sha256; c=relaxed/relaxed;        d=1e100.net; s=20230601; t=1703302624; x=1703907424;        h=to:from:subject:message-id:feedback-id:reply-to:date:mime-version         :x-gm-message-state:from:to:cc:subject:date:message-id:reply-to;        bh=NtSOQWqAanuJwgUfHVTPKbB0M67HpZ0j91jVoTNC6eQ=;        b=hpyIghgJG3OlsaJvmGzNLPVPr3p3Xri5mAV1RZuEqraKeVQCej/OznMMe6c3FgM+8Q         RA8zYkSwpp5dldXZr6kHze1zGTApSmOKTnoOU2ohK5laDmI3CEzXf3Nc2wZITv3CvGzr         HuP9dwdFuMSR26GfqzAnjwWDnyn/Dto1zt9zWOtZWEEBSeHBgr6E8AR9LaFjXZETrM/X         QutgPYqnr/wUztRj1Ac01//T4xth6cReBBo3Az2ju8NPYrcyoxygmLlntQaCrFpe51J/         h1r89I49l+yXYwYAKEMoStURE3i2e1D82CZxn8xcVahBrSJK4ah4DADpZ4sQehGq+ova         Z0Pw=="
      },
      {
        "name": "X-Gm-Message-State",
        "value": "AOJu0Yz3dTUiWiujPfVvyqjxVJ1oMYgJr9noyrqfZUe7lI8qwCVNZu+d t9XCv7RFsncBIBSC9b8WaBjq"
      },
      {
        "name": "X-Google-Smtp-Source",
        "value": "AGHT+IE1yKGKKWCtQuqgsacdVBFRFkSJc7PzMMEGc+1MRRstOh+yP3nrwkw8RNI4tF+hLib5Z0U5kRk="
      },
      {
        "name": "MIME-Version",
        "value": "1.0"
      },
      {
        "name": "X-Received",
        "value": "by 2002:ac8:7f84:0:b0:423:9887:cd3e with SMTP id z4-20020ac87f84000000b004239887cd3emr3735616qtj.32.1703302265487; Fri, 22 Dec 2023 19:31:05 -0800 (PST)"
      },
      {
        "name": "Date",
        "value": "Fri, 22 Dec 2023 19:31:05 -0800"
      },
      {
        "name": "Reply-To",
        "value": "Google Community Team \u003cgooglecommunityteam-noreply@google.com\u003e"
      },
      {
        "name": "X-Google-Id",
        "value": "4170663"
      },
      {
        "name": "Feedback-ID",
        "value": "P-232-0:C20113407:M110506633-en:gamma"
      },
      {
        "name": "X-Notifications",
        "value": "f90126df64d40000"
      },
      {
        "name": "X-Notifications-Bounce-Info",
        "value": "AaJ7rEpVJZUgSjsFJt_8j2sAdtGd-duFO4ZC4QGiHxQtDPXHqwFAtzBX8HPjFCK8-czDA_Lr20Q86jsoF2pp9bAIfwxCqWPFChbeQdohXKWeKAcGMFyAuoiZ8nXfrZvZJ-cl0ZuiOYxi5I3oMZWANFvHNcg9QCFV7-rBQ1XjlLppW-7YTT9fanREvdCJlmJr_XjuhG8kmH_UZUXdZ4fXLfsPZ3n8nq4tXJ2aWs3UleMILhBnJzw5Y2q8ubS4eSPbSCxHsCXG8n1sdqPCB0zoFFU_ypGL_Dsv-5JL6wFCrXz7FGzgEVg4cUSUmBtcT556cPdxKSOhrac-DeyWWn2qU0C_v1WK2ZSMCDZTZgc2F54SNVLpWgILRUEpIQLlNjAwNjA0MDQxNTM1NTk2OTMzMg"
      },
      {
        "name": "Message-ID",
        "value": "\u003cbb9ab03c6e9e4e2b34e0a91a1013eda85d1b7668-20113407-111435305@google.com\u003e"
      },
      {
        "name": "Subject",
        "value": "Ynab, finish setting up your new Google Account"
      },
      {
        "name": "From",
        "value": "Google Community Team \u003cgooglecommunityteam-noreply@google.com\u003e"
      },
      {
        "name": "To",
        "value": "ynabvenmo@gmail.com"
      },
      {
        "name": "Content-Type",
        "value": "multipart/alternative; boundary=\"0000000000007ac009060d24f6ee\""
      }
    ],
    "body": {
      "size": 0
    },
    "parts": [
      {
        "partId": "0",
        "mimeType": "text/plain",
        "filename": "",
        "headers": [
          {
            "name": "Content-Type",
            "value": "text/plain; charset=\"UTF-8\"; format=flowed; delsp=yes"
          },
          {
            "name": "Content-Transfer-Encoding",
            "value": "base64"
          }
        ],
        "body": {
          "size": 4350,
          "data": "DQoNCkhpIFluYWIsDQoNCldlbGNvbWUgdG8gR29vZ2xlLiBZb3VyIG5ldyBhY2NvdW50IGNvbWVzIHdpdGggYWNjZXNzIHRvIEdvb2dsZSBwcm9kdWN0cywgIA0KYXBwcywgYW5kIHNlcnZpY2VzLg0KDQpIZXJlIGFyZSBhIGZldyB0aXBzIHRvIGdldCB5b3Ugc3RhcnRlZC4NCg0KDQpHZXQgdGhlIG1vc3Qgb3V0IG9mIHlvdXIgR29vZ2xlIEFjY291bnQNCg0KV2UnbGwgc2VuZCB5b3UgcGVyc29uYWxpemVkIHRpcHMsIG5ld3MgYW5kIHJlY29tbWVuZGF0aW9ucyBmcm9tIEdvb2dsZS4NCg0KWWVzLCBrZWVwIG1lIHVwZGF0ZWQgIA0KPGh0dHBzOi8vbm90aWZpY2F0aW9ucy5nb29nbGUuY29tL2cvcC9BTmlhbzVwU2NrSW9aNjNQbEtjamVwR3o0YXdMcmtDMUxwTmlXbi1IanZSbDY3QXBlRFp1S0ZiRjVUMFlONlRPWFQtbE4wTWFPNEwwNGtibWY0Tko1ZDdmVVdLSnNzQkQycnFiVkNvZzZHbkI1V29wb1psdHloaDB5dnlVT1B6bFQtOXhYZk9yMmp3OXZtMkFDbTlFTGhaSTBDalRRa0p3YTJfeWpOZlM2YUdtRExxYTJBak5qdTFKWEtjMEp3VkY5LVhrNWpCSlFfdGFiTTM5Uzg2blJPa25RZm52RjM2ZzNSOXF1bTJZYnV4d3dWU2lzM3V0VUNRQUdqekllekdBZnlOdnFOLTNKbW5NUDJCYnp5MFNTV25QWUNaQTBEWkRuNFh6akF5OXBhM1N5YkhXX1dQVy1TeFczallCNWlWTEJkcFhZNlpobjVnWEQ5Yi1xTG9kLWc1WkpaSU9HT3hsalY3eV9Fc2RHWHpMSmVfZVhCdFNkU2d5TXBwMzIyNy1zdGtFSFd5VVZyc3pHUVFnTm1pQkkycVgtNENabW9DcnV2RTJieHI3Sm9GQWRsVEdfRVUwMmlXXzVhSTd1cTJKTXZxc1l3cWNZX3BuakJKSWk1d2tNTmFHZndrb1JpbzZscktyWHJld2JhMXRkVnVXNGxRNTV0SldRRkxKT3NtanFHa0VtZlIwZ2JhQjFtWlM5bVlmN2w1dEl4X0ZWYjd4Y3NFeGxkTlExNjg3VWM2OElTNGFSZFBxQTRfNUk3UTZjRE9mSE96M1RYQzI0NS1ld3RDSFUyTFhaZ3llM2k2U0Z4VUJ6Y0NFPg0KDQpTdGF5IGluIHRoZSBrbm93IHdpdGggdGhlIEdvb2dsZSBhcHANCg0KRmluZCBxdWljayBhbnN3ZXJzLCBleHBsb3JlIHlvdXIgaW50ZXJlc3RzLCBhbmQgc3RheSB1cCB0byBkYXRlLg0KDQpUcnkgaXQgIA0KPGh0dHBzOi8vbm90aWZpY2F0aW9ucy5nb29nbGUuY29tL2cvcC9BTmlhbzVybUZBVVZsV21HUHM3SlVXNTRJbnBiQm41Wm5oVG11alVkTG9XSXBrb2VoRjI1c09yekNkTEdQTXRIOUJOdzVCRnNqS2YzLUQyRHhMVy1VTDdNenF2Z3VIcDhJNEhXWG4xYVpQM19kQkpqcjgySTcxRW5EYUlwNC1WcklSNVFrcDY0ZjU2T0NWb2lZZVJ5WWZUZTd4VjVuajNESXR2RVNGdndKYlVhaDEzWUdxZEJYTVlIaDRiM2dtcGVVSWpLcUxhMHdldnBjamgzblhjallfX0tzNXNzczBvemF4cExOME9walh2SWxWb3RpTlkxT2YtNC1OcktsZHlEQzVubXNDSWU0MC1XRDRQRVhrdUNIZGk5bVNGR25wdWJsX0pmQkpGN2hnMGZpMktEQnloU0paLXQ5dVYwcG55N0ZEZkstSmREQ3NKd2licTBadXZBS0dycDVuTTlvOEU5bjFnZ0ZGZmxlUVN0OTY0WTRVbnZsRXNEYWc-DQoNCk1vcmUgZnJvbSBHb29nbGUNCg0KRGlzY292ZXIgdGhlIGxhdGVzdCBhcHBzIGZyb20gR29vZ2xlLg0KDQpGb3IgQW5kcm9pZCAgDQo8aHR0cHM6Ly9ub3RpZmljYXRpb25zLmdvb2dsZS5jb20vZy9wL0FOaWFvNXI0aGE4MDg5WThpMndabFFpb3hMQXRSTW81d09yMnNSdXdXcDZ2RTg4d1lBbjA0VktRTkhXY3pmc1RBa0VwY05ySFVSSHc4czNTNDJtQkVWeEZHVGY0d3ZlTzlqYm5fdWZwemExZFlVYkQ1WGc1ZG1mVC1RUk5faTJMZlBoNlU1VWY2RUlwWmFEMnUyM1pjMm9GUlA2VEpVVGtRZ0lsUW1iNVFUdlVpVW5INTdPTjNKQW1RaVpnYmJPeFhJVnNUMm9xa2s1SDR3aUY5S2diY1ZPbE9jSW5YaG9sMHM1NW1URF9nc3BzRzE2czQ5bWVreTc4LTkwSnZnX1k0b2hRdXRmUzlXZmR2ZXlBX0xlUlY4ei1BLW54WDNwemRlRF92LW0wOGROSWZERk9QRXFmT3FKeVMwemp1RWJ4eUw2T290LTA0VjNpMUJCdW9lQWVGV05RbVZ3eXgzWlJ4WnlFX19xcERQa09qeVA0akF3MFk2eEk0aVZlZjhLTW0tZFdnWTVGeEgyT1I2NVZsRnNjMnY0LWVfYmp5NkRpZTRVV05ZWWlLbE9ncWpGT3hNWTR2dnN1ZHNMZmVZS3N0a0xzRlVadS05TWZMZGdBaUtYN1lMV18xLTQ5LTN2bWoyN3JmdTZ2dkZhR21wazRGUU1MZ25GVHNsZ21VdGI0TDhiM1RXN1dPcWlMTENacnRsX21mSlpGZnBfTUN0SXNaNWxWeHNKUEtVRlAzLW9RUXBSWno3c0xqTnQwVXE5WVVGdGZnalY1eU9ZczlHMVhmaWR1ODROR3BraUhUbkQ3QUdZbmQzdGcwT0phdl9WbTdtMlpQalZtbnpmeWZTX2lnMGxKZGxZNTE4dFFzRS05UkJpdmQ4SzkzRE0-DQoNCkZvciBpT1MgIA0KPGh0dHBzOi8vbm90aWZpY2F0aW9ucy5nb29nbGUuY29tL2cvcC9BTmlhbzVybTYwOW02cjhMOUpHWTVpcTh3NkV3ZEdXSEVyeXVuMEEyamd3eUJlWHZqWTF0VW5iOWxWU2NDWlRLckZ5UDY5eTV6OTQ0R3Z4QUZXZ0ZaNDgyMU5OcjAxS1k4VmdaWERFVjMzVFV5NDBFMTR0RklYQlhieEFWRDhHMUhpT0dhTHV4VmtGdmg3WFZiaVM0dXdzR3FNZFNZSUtxbk1IYVB3SHRycDRZTGNubWpnR0piYmt3bm9aYno3R3Q2UVVfckxpS25fUnhubkptaFpIWWk3SDVnVHZYV241MmwwSjMySlZCRkdiVnZGTkdNbnFtN09vSjNuSFVrNGZmUi1HX1diYWIyM3NFRGVMcFNWUzFtY0k5UEJIeXV0Skg3bGRnZWdfeW5jZWRRazE2RGVBWlJEQUlNek9sTkRVMDdsaU0wT29jSFFJSEQwYXNwWVhZT0RxSXFyV21Zck1JSzFyVGJQdFJ5UXZGek5lcmRLRTdORDNqejNzQnRyUFcxUWFwb2xSOWJzVGt0UT4NCg0KQ29uZmlybSB5b3VyIG9wdGlvbnMgYXJlIHJpZ2h0IGZvciB5b3UNCg0KUmV2aWV3IGFuZCBjaGFuZ2UgeW91ciBwcml2YWN5IGFuZCBzZWN1cml0eSBvcHRpb25zIHRvIG1ha2UgR29vZ2xlIHdvcmsgIA0KYmV0dGVyIGZvciB5b3UuDQoNCkNvbmZpcm0gIA0KPGh0dHBzOi8vbm90aWZpY2F0aW9ucy5nb29nbGUuY29tL2cvcC9BTmlhbzVxR3BpSmt4ODlMalY4X05nU1BHYjBlRkUxWXNCcC1JVXZoSENoZEFUVHRUMWFfWGx3QzAybTVxMXEyY2I3Y1lmQl9JWHFXdnVKN3U0Qm1qbUl0WUQ0ZjVfT2g0T1gyTkJkaTlFUjE5cUY1RlFiT2tVeGZpdmltVlR0N054RGZUS1FoQnQ0R0QtQW1WRVlfX3o3eWJvYW9vN1ppSC1sUEFXYWZYcDlTX0FlZTBxNmhrbVptUEl3WXhoMGhWS0N3RlZHSXBQYXN3RldrWlVjRkktdVVMUXEtazNHXzYwQVp5N3oxa2l5dkdVelFJbjBULXUxcHNpMThQSWlTZGJrcEFsUThZUnJIbW1LbTZMOW55alFnd3FYV0hPNWQ5N2JvaURHZDRKeGN4QXRYUjJzaEJ1VWtYWDMtelNQUlBFeFZCdF9pcHotQ3Y1ZkVoMklXPg0KDQpGaW5kIGFuc3dlcnMNCg0KVmlzaXQgdGhlIEhlbHAgQ2VudGVyICANCjxodHRwczovL25vdGlmaWNhdGlvbnMuZ29vZ2xlLmNvbS9nL3AvQU5pYW81clI1b25BcXZVNmxFZUwxRkxGTUJLdy0ybjF3cHg0aGR2OE95X0VnUHdrZFhJWkVUejNyUXBKMlFSRXE5X3dtY0dSTjhDdGJlRnpUejdPWG5vRHZTTzVxc0tZb3h4QnZueU9GYU1xZ2FWQ1NocjU1bll6cVZRZlRGTUo1ZXFlN3g5YTJHT2U4VFF0LTR2WElqaFF6bTZOZm9kbDEzZ0RKU2kyY1ZpUmdHZW5XS09QM3l1U0hObkJoOGpwMldxTkppTVNtb3JXdGtSSzhuTTlyQkZFN21SbTJGWEhuVkVZUmxsM3VLUVJTYm90d2N1SmJFTG1TczJRSVdVbWh6bEIwbGFHME9vRGpjdURtZDFCcm1kTjZ3WnViMm5nMGpVRWw0VlV6cjBGX3ZOTT4gIA0KdG8gbGVhcm4gYWxsIGFib3V0IHlvdXIgbmV3IEdvb2dsZSBBY2NvdW50Lg0KDQoNClJlcGxpZXMgdG8gdGhpcyBlbWFpbCBhcmVuJ3QgbW9uaXRvcmVkLiBJZiB5b3UgaGF2ZSBhIHF1ZXN0aW9uIGFib3V0IHlvdXIgIA0KbmV3IGFjY291bnQsIHRoZSBIZWxwIENlbnRlciAgDQo8aHR0cHM6Ly9ub3RpZmljYXRpb25zLmdvb2dsZS5jb20vZy9wL0FOaWFvNXFjc0UyYXdMNmhJTGFkaUZwTTJuNzVteFdtZXExdTlRZE1BZ1ZYU2FYOFJDNzVNVEZ1a2J2dVZScVpSbGxLYUFfVnBpS3AwWGhJLUVKNVRqNEUyaFpWZkRtWjRfLXhoUFhpZGU3M1RveGJGaF9odkcza21UbVBZLURTS01sS2REc21tUWxoUUNJbkZXMUY0eElvRnNXR2NWRXM2UWNJNGgzNEtKQTRlZVZCdzRSbndQQnJrbEk2Nk5JNC1oQTk2bHVSU2lSSXFKRTIxOWRTVEhhV1BVUmlueTFFSXY0RG1hYVphb044aTJFLXpjRGpZeDVsWDRTNDBUOS1aVWpQbnZkLXZsS3BmTHppSU85Nlh5MUFyVXJkRkpmY1hqWHdUcWlBYUtGMldmd1JuR3g2aE4yNT4gIA0KbGlrZWx5IGhhcyB0aGUgYW5zd2VyIHlvdSdyZSBsb29raW5nIGZvci4NCg0KDQoNCkdvb2dsZSBMTEMgMTYwMCBBbXBoaXRoZWF0cmUgUGFya3dheSwgTW91bnRhaW4gVmlldywgQ0EgOTQwNDMNCg0KVGhpcyBlbWFpbCB3YXMgc2VudCB0byB5b3UgYmVjYXVzZSB5b3UgY3JlYXRlZCBhIEdvb2dsZSBBY2NvdW50Lg0K"
        }
      },
      {
        "partId": "1",
        "mimeType": "text/x-amp-html",
        "filename": "",
        "headers": [
          {
            "name": "Content-Type",
            "value": "text/x-amp-html; charset=\"UTF-8\""
          },
          {
            "name": "Content-Transfer-Encoding",
            "value": "quoted-printable"
          }
        ],
        "body": {
          "size": 33701,
          "data": "PCFkb2N0eXBlIGh0bWw-DQo8aHRtbCDimqE0ZW1haWwgZGF0YS1jc3Mtc3RyaWN0IGxhbmc9ZW4-DQo8aGVhZD4NCjxtZXRhIGNoYXJzZXQ9dXRmLTg-DQo8c2NyaXB0IGFzeW5jIHNyYz1odHRwczovL2Nkbi5hbXBwcm9qZWN0Lm9yZy92MC5qcz48L3NjcmlwdD4NCjxzY3JpcHQgY3VzdG9tLWVsZW1lbnQ9YW1wLWJpbmQgc3JjPWh0dHBzOi8vY2RuLmFtcHByb2plY3Qub3JnL3YwL2FtcC1iaW5kLTAuMS5qcyBhc3luYz48L3NjcmlwdD4NCjxzY3JpcHQgYXN5bmMgY3VzdG9tLWVsZW1lbnQ9YW1wLWZvcm0gc3JjPWh0dHBzOi8vY2RuLmFtcHByb2plY3Qub3JnL3YwL2FtcC1mb3JtLTAuMS5qcz48L3NjcmlwdD4NCjxzdHlsZSBhbXA0ZW1haWwtYm9pbGVycGxhdGU-Ym9keXt2aXNpYmlsaXR5OmhpZGRlbn08L3N0eWxlPg0KPHN0eWxlIGFtcC1jdXN0b20-DQpib2R5e3RleHQtZGVjb3JhdGlvbjpub25lO30NCnRkLnRhYmxlLWNlbGwuc3ViaGVhZGxpbmUuc3BhY2U2Lm1vZHVsZV9wYXJhIHsNCnBhZGRpbmc6IDAgNTBweDsNCn0NCi5wZG5ncnRse3BhZGRpbmc6N3B4IDI0cHggN3B4IDI0cHh9DQoubG9jYWxlcGFkaW5ne3BhZGRpbmc6OHB4IDI2cHggN3B4IDI2cHg7IGZvbnQtc2l6ZToxNnB4O30NCi5zcGFjZTZ7cGFkZGluZzowIDgwcHggMCA4MHB4O30NCi5zcGFjZTJ7cGFkZGluZzowIDcwcHggMCA3MHB4O30NCi53aWR0aG1pbnttaW4td2lkdGg6MTE1cHg7fQ0KLmFkZGluZ3NwYWNle3dpZHRoOjZweDsgZGlzcGxheTogaW5saW5lLWJsb2NrO30NCkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpew0KLmJ0bl9tb2QyX21vYmlsZTF7cGFkZGluZzo5cHggMjRweCAxMXB4IDI0cHggOyBib3JkZXItcmFkaXVzOiA0cHggO30NCi5idG5fbW9kMl9tb2JpbGUye3BhZGRpbmc6OXB4IDI0cHggMTFweCAyNHB4IDsgYm9yZGVyLXJhZGl1czogNHB4IDt9DQouYnRuX21vZDNfbW9iaWxle3BhZGRpbmc6OXB4IDI0cHggMTFweCAyNHB4IDsgYm9yZGVyLXJhZGl1czogNHB4IDt9DQouYnRuX21vZDRfbW9iaWxle3BhZGRpbmc6OXB4IDI0cHggMTFweCAyNHB4IDsgYm9yZGVyLXJhZGl1czogNHB4IDt9DQoucGRuZ3J0bHtwYWRkaW5nOjdweCAxMXB4IDdweCAxMXB4fQ0KLnNwYWNlMXtoZWlnaHQ6MTlweCA7fQ0KLnNwYWNlMntwYWRkaW5nOjNweCAzNXB4IDAgMzVweCA7fQ0KLnNwYWNlM3twYWRkaW5nLXRvcDogMjJweCA7fQ0KLnNwYWNlNHtwYWRkaW5nOiA2cHggMCAwIDAgO30NCi5zcGFjZTV7cGFkZGluZy10b3A6IDE3cHggO30NCi5zcGFjZTZ7cGFkZGluZzowIDM1cHggMCAzNXB4IDt9DQouc3BhY2U3e3BhZGRpbmctcmlnaHQ6IDBweCA7fQ0KfQ0KQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi1yZXNvbHV0aW9uOiAyODhkcGkpIHsNCi5kZXZpY2VfdHh0e2ZvbnQtc2l6ZToyNnB4O30NCn0NCi8qIFBvdHJhaXQgZm9yIGlQaG9uZSAqLw0KQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAoZGV2aWNlLXdpZHRoOiAzNzVweCkgYW5kIChvcmllbnRhdGlvbjpwb3J0cmFpdCl7DQouZm1kX21vYmlsZSB7cGFkZGluZy10b3A6NXB4IDtjb2xvcjpyZWQgO30NCn0NCmJvZHl7dGV4dC1kZWNvcmF0aW9uOm5vbmU7fQ0KPC9zdHlsZT4NCjwhLS1baWYgZ3RlIG1zbyA5XT4NCjx4bWw-DQo8bzpPZmZpY2VEb2N1bWVudFNldHRpbmdzPg0KPG86QWxsb3dQTkcvPg0KPG86UGl4ZWxzUGVySW5jaD45NjwvbzpQaXhlbHNQZXJJbmNoPg0KPC9vOk9mZmljZURvY3VtZW50U2V0dGluZ3M-DQo8L3htbD4NCjwhW2VuZGlmXS0tPg0KPCEtLVtpZiBtc29dPg0KPHN0eWxlPmF7Y29sb3I6NDI4NWY0OyB0ZXh0LWRlY29yYXRpb246bm9uZTt9PC9zdHlsZT4NCjwhW2VuZGlmXS0tPg0KPC9oZWFkPg0KPGJvZHkgY2xhc3M9Ym9keV93cmFwcGVyIHN0eWxlPSJwYWRkaW5nOiAwIDZweDsiPg0KPGRpdiBzdHlsZT0iZm9udC1zaXplOiAwcHg7IGxpbmUtaGVpZ2h0OjBweDsgY29sb3I6ICNmZmZmZmY7IGRpc3BsYXk6IG5vbmU7Ij7CoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoMKgIMKgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqDCoCDCoCA8L2Rpdj4NCjx0YWJsZSByb2xlPXByZXNlbnRhdGlvbiBjbGFzcz1ib2R5X3NpemUgYm9yZGVyPTAgY2VsbHNwYWNpbmc9MCBjZWxscGFkZGluZz0wIGFsaWduPWNlbnRlciB3aWR0aD0xMDAlIGJnY29sb3I9I2ZmZmZmZiBzdHlsZT0iYmFja2dyb3VuZDogI2ZmZmZmZjsgd2lkdGg6MTAwJTttYXgtd2lkdGg6IDUyMHB4OyI-DQo8dHI-PHRkIGFsaWduPWNlbnRlciBzdHlsZT0icGFkZGluZy10b3A6IDIwcHg7Ij4gPGFtcC1pbWcgcm9sZT1wcmVzZW50YXRpb24gY2xhc3M9Z29vZ2xlX21vYmlsZSB3aWR0aD04MiBoZWlnaHQ9MjYgc3JjPWh0dHBzOi8vd3d3LmdzdGF0aWMuY29tL2d1bWRyb3AvZmlsZXMvZ29vZ2xlLWxvZ28taGVhZGVyLnBuZyBzdHlsZT0id2lkdGg6IDgycHg7IGhlaWdodDoyNnB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGJvcmRlcjogbm9uZTsiPg0KPC90ZD48L3RyPg0KPHRyPjx0ZCBjbGFzcz1zcGFjZTEgaGVpZ2h0PTE1PjwvdGQ-PC90cj4NCjx0cj4NCjx0ZCB3aWR0aD0xMDAlIHN0eWxlPSJ3aWR0aDoxMDAlOyBtYXgtd2lkdGg6NDgwcHg7IGJvcmRlcjogMnB4IHNvbGlkICNERkUxRTU7IGJvcmRlci1yYWRpdXM6IDhweDsiPg0KPHRhYmxlIHJvbGU9cHJlc2VudGF0aW9uIGJvcmRlcj0wIGNlbGxzcGFjaW5nPTAgY2VsbHBhZGRpbmc9MCB3aWR0aD0xMDAlPg0KPHRyPg0KPHRkIGFsaWduPWNlbnRlcj4NCjxhbXAtaW1nIHJvbGU9cHJlc2VudGF0aW9uIGNsYXNzPXRvcF9pbWcgd2lkdGg9NTE2IGhlaWdodD0xMDkgc3JjPWh0dHBzOi8vd3d3LmdzdGF0aWMuY29tL2d1bWRyb3AvZmlsZXMvYmFubmVyLnBuZyBzdHlsZT0id2lkdGg6IDEwMCU7IHRleHQtYWxpZ246IGNlbnRlcjsgYm9yZGVyOiBub25lOyIgbGF5b3V0PXJlc3BvbnNpdmU-DQo8L3RkPg0KPC90cj4NCjx0cj4NCjx0ZD4NCjx0YWJsZSByb2xlPXByZXNlbnRhdGlvbiBib3JkZXI9MCBjZWxsc3BhY2luZz0wIGNlbGxwYWRkaW5nPTAgYWxpZ249Y2VudGVyIHdpZHRoPTEwMCU-DQo8dHI-DQo8IS0tW2lmIG1zb10-DQo8dGQgYWxpZ249ImNlbnRlciIgY2xhc3M9ImdyZWV0aW5nX25hbWUgc3BhY2U2IiBzdHlsZT0nY29sb3I6IzIwMjEyNDsgZm9udC1mYW1pbHk6R29vZ2xlIFNhbnMsIFJvYm90bywgQXJpYWw7IGZvbnQtc2l6ZToyOHB4OyBmb250LXdlaWdodDpub3JtYWw7IGxpbmUtaGVpZ2h0OjQ0cHg7IG1hcmdpbjowOyBwYWRkaW5nOjAgODBweCAyMHB4IDgwcHg7IHRleHQtYWxpZ246Y2VudGVyO3dvcmQtYnJlYWs6bm9ybWFsO2RpcmVjdGlvbjpsdHI7JyBkaXI9Imx0ciI-DQpIaSBZbmFiLA0KPC90ZD4NCjwhW2VuZGlmXS0tPg0KPCEtLVtpZiAhbXNvXT48IS0tPg0KPHRkIGFsaWduPWNlbnRlciBjbGFzcz0iZ3JlZXRpbmdfbmFtZSBzcGFjZTYiIHN0eWxlPSJjb2xvcjojMjAyMTI0OyBmb250LWZhbWlseTpHb29nbGUgU2FucywgUm9ib3RvLCBBcmlhbDsgZm9udC1zaXplOjI4cHg7IGZvbnQtd2VpZ2h0Om5vcm1hbDsgbGluZS1oZWlnaHQ6NDRweDsgbWFyZ2luOjA7IHRleHQtYWxpZ246Y2VudGVyOyB3b3JkLWJyZWFrOm5vcm1hbDtkaXJlY3Rpb246bHRyOyIgZGlyPWx0cj4NCkhpIFluYWIsDQo8L3RkPg0KPCEtLTwhW2VuZGlmXS0tPg0KPC90cj4NCjwhLS1baWYgIW1zb10-PCEtLT4NCjx0cj4NCjx0ZCBoZWlnaHQ9MTUgc3R5bGU9ImxpbmUtaGVpZ2h0OiA0cHg7IGZvbnQtc2l6ZTogNHB4OyI-PC90ZD4NCjwvdHI-DQo8IS0tPCFbZW5kaWZdLS0-DQo8dHI-DQo8dGQgY2xhc3M9InN1YmhlYWRsaW5lIHNwYWNlMiIgYWxpZ249Y2VudGVyIHN0eWxlPSJjb2xvcjojM0M0MDQzOyBmb250LWZhbWlseTomcXVvdDtSb2JvdG8mcXVvdDssIE9wZW5TYW5zLCAmcXVvdDtPcGVuIFNhbnMmcXVvdDssIEFyaWFsLCBzYW5zLXNlcmlmOyBmb250LXNpemU6MTZweDsgZm9udC13ZWlnaHQ6bm9ybWFsOyBsaW5lLWhlaWdodDoyNHB4OyBtYXJnaW46MDsgdGV4dC1hbGlnbjpjZW50ZXI7IHdvcmQtYnJlYWs6bm9ybWFsO2RpcmVjdGlvbjpsdHI7IiBkaXI9bHRyPiBXZWxjb21lIHRvIEdvb2dsZS4gWW91ciBuZXcgYWNjb3VudCBjb21lcyB3aXRoIGFjY2VzcyB0byBHb29nbGUgcHJvZHVjdHMsIGFwcHMsIGFuZCBzZXJ2aWNlcy48L3RkPg0KPC90cj4NCjx0cj4NCjx0ZCBjbGFzcz0ic3ViaGVhZGxpbmUgc3BhY2U2IiBhbGlnbj1jZW50ZXIgc3R5bGU9ImNvbG9yOiMzQzQwNDM7IGZvbnQtZmFtaWx5OiZxdW90O1JvYm90byZxdW90OywgT3BlblNhbnMsICZxdW90O09wZW4gU2FucyZxdW90OywgQXJpYWwsIHNhbnMtc2VyaWY7IGZvbnQtc2l6ZToxNnB4OyBmb250LXdlaWdodDpub3JtYWw7IGxpbmUtaGVpZ2h0OjI0cHg7IG1hcmdpbjowOyB0ZXh0LWFsaWduOmNlbnRlcjsgd29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsiIGRpcj1sdHI-IEhlcmUgYXJlIGEgZmV3IHRpcHMgdG8gZ2V0IHlvdSBzdGFydGVkLjwvdGQ-DQo8L3RyPg0KPHRyPjx0ZCBoZWlnaHQ9NDU-PC90ZD48L3RyPg0KPC90YWJsZT4NCjwvdGQ-DQo8L3RyPg0KPC90YWJsZT4NCjwvdGQ-DQo8L3RyPg0KPHRyPjx0ZCBoZWlnaHQ9MjQ-PC90ZD48L3RyPg0KPHRyPg0KPHRkIHdpZHRoPTEwMCUgc3R5bGU9IndpZHRoOjEwMCU7IG1heC13aWR0aDo0ODBweDsgYm9yZGVyOiAycHggc29saWQgI0RGRTFFNTsgYm9yZGVyLXJhZGl1czogOHB4OyI-DQo8dGFibGUgcm9sZT1wcmVzZW50YXRpb24gYm9yZGVyPTAgY2VsbHNwYWNpbmc9MCBjZWxscGFkZGluZz0wIHdpZHRoPTEwMCU-DQo8dHI-DQo8dGQgc3R5bGU9cGFkZGluZy1ib3R0b206NTBweDs-DQo8dGFibGUgcm9sZT1wcmVzZW50YXRpb24gY2xhc3M9dGFibGUgYWxpZ249Y2VudGVyIGNlbGxwYWRkaW5nPTAgY2VsbHNwYWNpbmc9MCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW46IDAgYXV0bzsiPg0KPHRyIGNsYXNzPXRhYmxlLXJvdz4NCjx0ZCBjbGFzcz10YWJsZS1jZWxsIHN0eWxlPWhlaWdodDo1MHB4PjwvdGQ-DQo8L3RyPg0KPHRyIGNsYXNzPXRhYmxlLXJvdz4NCjx0ZCBjbGFzcz10YWJsZS1jZWxsIGFsaWduPWNlbnRlcj4NCjxhbXAtaW1nIHJvbGU9cHJlc2VudGF0aW9uIHdpZHRoPTQ4IGhlaWdodD00OCBzcmM9aHR0cHM6Ly93d3cuZ3N0YXRpYy5jb20vaW1hZ2VzL2JyYW5kaW5nL3Byb2R1Y3QvMngvZW1haWxfNjRkcC5wbmcgc3R5bGU9d2lkdGg6NDhweDtoZWlnaHQ6NDhweDt0ZXh0LWFsaWduOmNlbnRlcjtib3JkZXI6bm9uZTtmb250LXNpemU6OXB4IGNsYXNzPUNUb1dVZD48L2FtcC1pbWc-DQo8L3RkPg0KPC90cj4NCjx0ciBjbGFzcz10YWJsZS1yb3c-DQo8dGQgY2xhc3M9dGFibGUtY2VsbCBzdHlsZT1oZWlnaHQ6MTVweD48L3RkPg0KPC90cj4NCjx0ciBjbGFzcz10YWJsZS1yb3c-DQo8dGQgY2xhc3M9dGFibGUtY2VsbCBzdHlsZT0iY29sb3I6IzIwMjEyNDsgZm9udC1mYW1pbHk6R29vZ2xlIFNhbnMsIFJvYm90bywgQXJpYWw7IGZvbnQtc2l6ZToxOHB4OyBmb250LXdlaWdodDpub3JtYWw7IGxpbmUtaGVpZ2h0OjMzcHg7IG1hcmdpbjowOyBwYWRkaW5nOjAgMzBweCAwIDMwcHg7IHRleHQtYWxpZ246Y2VudGVyOyB3b3JkLWJyZWFrOm5vcm1hbDsgZGlyZWN0aW9uOmx0cjsiIGRpcj1sdHI-R2V0IHRoZSBtb3N0IG91dCBvZiB5b3VyIEdvb2dsZSBBY2NvdW50PC90ZD4NCjwvdHI-DQo8dHIgY2xhc3M9dGFibGUtcm93Pg0KPHRkIGNsYXNzPXRhYmxlLWNlbGwgc3R5bGU9aGVpZ2h0OjE1cHg7bGluZS1oZWlnaHQ6NHB4O2ZvbnQtc2l6ZTo0cHg-PC90ZD4NCjwvdHI-DQo8dHIgY2xhc3M9dGFibGUtcm93Pg0KPHRkIGNsYXNzPSJ0YWJsZS1jZWxsIHN1YmhlYWRsaW5lIHNwYWNlNiBtb2R1bGVfcGFyYSIgc3R5bGU9ImNvbG9yOiM1ZjYzNjg7IGZvbnQtZmFtaWx5OlJvYm90bywgT3BlblNhbnMsIE9wZW4gU2FucywgQXJpYWwsIHNhbnMtc2VyaWY7IGZvbnQtc2l6ZToxNnB4OyBmb250LXdlaWdodDpub3JtYWw7IGxpbmUtaGVpZ2h0OjI0cHg7IG1hcmdpbjowOyB0ZXh0LWFsaWduOmNlbnRlcjsgd29yZC1icmVhazpub3JtYWw7IGRpcmVjdGlvbjpsdHI7IiBkaXI9bHRyPldlJiMzOTtsbCBzZW5kIHlvdSBwZXJzb25hbGl6ZWQgdGlwcywgbmV3cyBhbmQgcmVjb21tZW5kYXRpb25zIGZyb20gR29vZ2xlLjwvdGQ-DQo8L3RyPg0KPHRyIGNsYXNzPXRhYmxlLXJvdz4NCjx0ZCBjbGFzcz10YWJsZS1jZWxsIHN0eWxlPWhlaWdodDozMHB4Oz48L3RkPg0KPC90cj4NCjx0ciBjbGFzcz10YWJsZS1yb3c-DQo8dGQgY2xhc3M9dGFibGUtY2VsbCBzdHlsZT10ZXh0LWFsaWduOmNlbnRlcjtwYWRkaW5nOjA-DQo8dGFibGUgcm9sZT1wcmVzZW50YXRpb24gY2xhc3M9dGFibGUgYWxpZ249Y2VudGVyIGNlbGxwYWRkaW5nPTAgY2VsbHNwYWNpbmc9MCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW46IDAgYXV0bzsiPg0KPHRyIHN0eWxlPSJwYWRkaW5nOiAwOyBtYXJnaW46IDA7IGZvbnQtc2l6ZTogMDsgbGluZS1oZWlnaHQ6IDA7Ij4NCjx0ZCBzdHlsZT0iYm9yZGVyLXRvcDogNHB4OyBoZWlnaHQ6NHB4O2JvcmRlci10b3AtbGVmdC1yYWRpdXM6IDRweDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNHB4O2Rpc3BsYXk6aW5saW5lLWJsb2NrOyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij48L3RkPg0KPC90cj4NCjx0ciBjbGFzcz10YWJsZS1yb3c-DQo8dGQgY2xhc3M9dGFibGUtY2VsbCBzdHlsZT10ZXh0LWFsaWduOmNlbnRlcjtwYWRkaW5nOjA-DQo8Zm9ybSBjbGFzcz0ic2FtcGxlLWZvcm0gaGlkZS1pbnB1dHMiIG1ldGhvZD1wb3N0IGFjdGlvbi14aHI9aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9keW5hbWljbWFpbC9vcHRpbj90b2s9QU1rQ3Zscy1lVHVEZEpKc281am1wQl9BTFZMWkw2a3dxcUtYV2QzUUl5MFpZRTh3aWhneWhhaERCNjhQaHd2TFJPUlZuaGtUR1E9PSZhbXA7Y3Ryaz1odHRwczovL25vdGlmaWNhdGlvbnMuZ29vZ2xlLmNvbS9nL3AvQU5pYW81b0owczc0OEw3ZFJiNE1sSUNKUTljNlRfb0ZNX1Mxd2lkUXVyVG0zamV6SDY3ZHpacThJVkJPZzJtNk04UEZ4WUM2TXplTkYtMS1HeFNIaV8xR1lkLWNQRkRSbGVxWlo1XzlXWHk4Mm1sallDZUxHZFpubUZOcURrTU91XzlmQTFZNW1vakNKTGJpX0FPWjJSNzFVVWZKWkhFUk5RRWJOc3N1Mk9QVzBad3ROSFYwNmxuUUk3Y2tzQmVWOGxKbmpXVlN3dUZiSVFpM0o1NHhRcUYzNS01TG5fTldTMzF2STR0RjE1RHZiQT4NCjxidXR0b24gW2hpZGRlbl09Y3RhX3N1Ym1pdCByb2xlPSIiIHRhYmluZGV4PSIiIG9uPSJ0YXA6QU1QLnNldFN0YXRlKHtzaWduX3VwOiB0cnVlLCBjdGFfc3VibWl0OiB0cnVlfSkiIHR5cGU9c3VibWl0IHZhbHVlPSIiIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiMxYTczZTg7IGJvcmRlcjoxcHggc29saWQgIzFhNzNlODsgYm9yZGVyLXJhZGl1czo0cHg7IGNvbG9yOiNGRkZGRkY7IGZvbnQtZmFtaWx5Okdvb2dsZSBTYW5zLCBSb2JvdG8sIEFyaWFsOyBsaW5lLWhlaWdodDoyNHB4OyB0ZXh0LWRlY29yYXRpb246bm9uZTsgbWluLXdpZHRoOjE4MHB4OyBmb250LXdlaWdodDo1MDA7IHRleHQtYWxpZ246Y2VudGVyOyB3b3JkLWJyZWFrOm5vcm1hbDsgZGlyZWN0aW9uOmx0cjsiIGNsYXNzPWxvY2FsZXBhZGluZz5ZZXMsIGtlZXAgbWUgdXBkYXRlZDwvYnV0dG9uPg0KPGRpdiBzdWJtaXR0aW5nPg0KPGEgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6IzVGNjM2ODsgYm9yZGVyOjFweCBzb2xpZCAjNUY2MzY4OyBib3JkZXItcmFkaXVzOjRweDsgY29sb3I6I0ZGRkZGRjsgZGlzcGxheTppbmxpbmUtYmxvY2s7IGZvbnQtZmFtaWx5Okdvb2dsZSBTYW5zLCBSb2JvdG8sIEFyaWFsOyBmb250LXNpemU6MTZweDsgbGluZS1oZWlnaHQ6MjVweDsgdGV4dC1kZWNvcmF0aW9uOm5vbmU7IG1pbi13aWR0aDoxODBweDsgcGFkZGluZzo4cHggMThweCA3cHggMTdweDsgZm9udC13ZWlnaHQ6NTAwOyB0ZXh0LWFsaWduOmNlbnRlcjsgd29yZC1icmVhazpub3JtYWw7IGRpcmVjdGlvbjpsdHIiIGRpcj1sdHIgdGFyZ2V0PV9ibGFuaz5PbmUgbW9tZW50Li4uPC9hPg0KPC9kaXY-DQo8ZGl2IHN1Ym1pdC1zdWNjZXNzPg0KPGEgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6IzE4ODAzODsgYm9yZGVyOjFweCBzb2xpZCAjMTg4MDM4OyBib3JkZXItcmFkaXVzOjRweDsgY29sb3I6I0ZGRkZGRjsgZGlzcGxheTppbmxpbmUtYmxvY2s7IGZvbnQtZmFtaWx5Okdvb2dsZSBTYW5zLCBSb2JvdG8sIEFyaWFsOyBmb250LXNpemU6MTZweDsgbGluZS1oZWlnaHQ6MjVweDsgdGV4dC1kZWNvcmF0aW9uOm5vbmU7IG1pbi13aWR0aDoxODBweDsgcGFkZGluZzo4cHggMThweCA3cHggMTdweDsgZm9udC13ZWlnaHQ6NTAwOyB0ZXh0LWFsaWduOmNlbnRlcjsgd29yZC1icmVhazpub3JtYWw7IGRpcmVjdGlvbjpsdHIiIGRpcj1sdHIgdGFyZ2V0PV9ibGFuaz5Zb3UmIzM5O3ZlIHNpZ25lZCB1cDwvYT4NCjxkaXYgY2xhc3M9dGFibGUtcm93Pg0KPGRpdiBjbGFzcz10YWJsZS1jZWxsIHN0eWxlPWhlaWdodDoyMHB4PjwvZGl2Pg0KPC9kaXY-DQo8dGFibGUgd2lkdGg9ODAlIHJvbGU9cHJlc2VudGF0aW9uIGFsaWduPWNlbnRlciBjZWxscGFkZGluZz0wIGNlbGxzcGFjaW5nPTAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luOiAwIGF1dG87IHdpZHRoOiA4MCU7Ij4NCjx0ciBjbGFzcz10YWJsZS1yb3c-DQo8dGQgYWxpZ249Y2VudGVyIGNsYXNzPXRhYmxlLWNlbGwgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7IGNvbG9yOiAjNUY2MzY4OyBmb250LWZhbWlseTpSb2JvdG8sIE9wZW5TYW5zLCBPcGVuIFNhbnMsIEFyaWFsLCBzYW5zLXNlcmlmOyBmb250LXNpemU6IDE0cHg7IGxpbmUtaGVpZ2h0OiAyMXB4OyB0ZXh0LWFsaWduOmNlbnRlcjsgbWFyZ2luOiAwIGF1dG87IHBhZGRpbmc6MHB4OyI-WW91IGNhbiB1bnN1YnNjcmliZSBhdCBhbnkgdGltZSBpbiB0aGUgbWVzc2FnZXMgeW91IHJlY2VpdmUuIFlvdSBjYW4gYWxzbyA8YSBocmVmPWh0dHBzOi8vbm90aWZpY2F0aW9ucy5nb29nbGUuY29tL2cvcC9BTmlhbzVvN0lxVkZHcjl1dFlLaGRiMC1XUlhwcFdsSHFnb0JNUEZ0YW1fcmlkN2pNeVRBQXBJTkZiTjd6dFJERTJVTm5zb0REbmdSVFFYUC1aV0RFNU9KVjhFN2xRYXh0M2ptLWgwbTBiU3pWWUstMVVNWXJUREM5cmdIOUViRy0ydzFSVG5seFZjZ3ZtVjZ3VmFtUG5XX2dDWHNUMnU2eHBFb2NpZ1hCMXR4OXVzckgtVnFmM29IbGVPRlAtcC0zVllIazJwdmN6WFloME5udTVQcnZTQkduaEJfdHAxbzFpTTdmelBxYkw4bHBTUFR0YTNndkQ1UlI4MTgyY25hUEZtZnhlWTEtRUlaUjRkeEZ0WEVHWHM3bDJYazBBeEFFMFQ2blpJLUZQVUYyWHJNcFlHVV9Bb1hrM3Z3eDRNYWtsLTVBX2FzRkRvZVJLVE5haVZnQnBBUHNZR3F0M0lTQk5XZXU5UXplSGlKTW5nV1VFaDdhaTJRTmM4SjhiMWxnVmtUYUEtY01pVWVvaGs4Q0ZiMEh4azA5VWdoLWRoSVNJWHJFTGFnWWRQNG8yLTVOYmRBLUhpa2tFeW9EczBFUlNoWnlDZzhJWmY0TDdGbnIzUlhTV18wdXRuRU83VUNBYUpleFpZYTNvV2s3TmhjaXdVT1BpNTFDOGxpMDRHZUhscEdPM1BUSklFSEJFaTZ3dnZ4MzVKcDMtTGdUNDNoRWs3SXdCZFFtMVhXMHdncm5LbVBvenJPYWZ2dmIzczRoUEYtMktkOGhVLWsycjBZYlVhRkY3d2k0ZmZGNTVoMlRyUjBiOGxZeXBkekdNUmticV9VVk5Va2d1T3VTOWZzU193IHRhcmdldD1fYmxhbmsgc3R5bGU9ImNvbG9yOiMxQTczRTg7IHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyBmb250LXdlaWdodDpub3JtYWw7IGJvcmRlcjowOyB3aGl0ZS1zcGFjZTogbm93cmFwOyAiPm1hbmFnZSB5b3VyIHByZWZlcmVuY2VzPC9hPi4NCjwvdGQ-DQo8L3RyPg0KPC90YWJsZT4NCjwvZGl2Pg0KPGRpdiBzdWJtaXQtZXJyb3I-DQo8YSBocmVmPWh0dHBzOi8vbm90aWZpY2F0aW9ucy5nb29nbGUuY29tL2cvcC9BTmlhbzVxRlNfVHNNVE9SWU9VX1NPak84UGVDYW9EZUlGZC1oTFRqLTQxQnh3WEsxYWgyQzVfS1ZwZzdEQzNZdHpaNERDcFBfSmVhVzVXQnNLanNOZ3pDR3RNbUZMbWFMbFNOcFBkekJqYUJ4NjBFVTlmdUFPbkI0RTFtNXJqUF9YMzRpN1BkRkNhVzE2ekstR0NSZUJmMzdtSmRMNGYxeE9XYTB3dVh2OTZLblBCdjk0dzZNSElsbXp5TU05NzkzWGNza21LM0RTUXdra0lVaXR5S0FDU1k1U1ZhRVAzdUZmdHZzMkFiMWg0bmQzckZla29mMDJUejZVVk9JNWFIRTdEZHRoanA2NEkzeXNoazlTY1FsXzJYRnd5YkRGMWQwb1AzODE0MEtHTGdral8yNXFYdmozdjNHT3ZLVW5KajQxNldxUlVRUWZVc3VHdmNKd3hUVmdLR0NKUXNpcmhOem5wUjJQeElLZ1IxZVpVRkZUR1ZVMXdwc0lPb25rVHJwMmtqcHRZTnhjWkM0NnZLNW9JU0hjcDBDU2lFcnQzMGlVbTdGX0RRSGJGYmpiMHV6Ri1CdnhXNmk3TW5GOFF1VHNvQ0ZPX25hcGw2QjF5bFhfMmliS09uU3dBRk1wTEhPZFNYdjZWc2hEWmZYQ1BMNEdQQ2NrZG9FaElZdmdSSE93R0laMUtubEtQRE1EdzFzTURKN0ROWWNZd01pd2gwSk5xSDhNREFpRFZzekIxX1pyUkRzSjlLM0lNajZERDRyVTlzaHE1S2VKRTVXZ1hKNU9fS1VOb2xXdk5CVUJZMGhidHFGclcxUktIOG9BIHRhcmdldD1fYmxhbms-DQo8dGFibGUgcm9sZT1wcmVzZW50YXRpb24gY2VsbHNwYWNpbmc9MCBjZWxscGFkZGluZz0wPg0KPHRib2R5Pg0KPHRyPg0KPHRkIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IGJhY2tncm91bmQtY29sb3I6IzFBNzNFODsgYm9yZGVyOjFweCBzb2xpZCAjMUE3M0U4OyBib3JkZXItcmFkaXVzOjRweDsgY29sb3I6I2ZmZmZmZjsgZGlzcGxheTppbmxpbmUtYmxvY2s7IGZvbnQtZmFtaWx5Okdvb2dsZSBTYW5zLCBSb2JvdG8sIEFyaWFsOyBsaW5lLWhlaWdodDoyNHB4OyB0ZXh0LWRlY29yYXRpb246bm9uZTsgbWluLXdpZHRoOjE2N3B4OyBwYWRkaW5nOjhweCAyNHB4IDdweCAyNHB4OyBmb250LXdlaWdodDo1MDA7IHRleHQtYWxpZ246IGNlbnRlcjsgd29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsiIGRpcj1sdHIgY2xhc3M9Y3RhX2dsPlRyeSBhZ2Fpbi4uLjwvdGQ-DQo8L3RyPg0KPC90Ym9keT48L3RhYmxlPg0KPC9hPg0KPC9kaXY-DQo8L2Zvcm0-DQo8L3RkPg0KPC90cj4NCjx0ciBzdHlsZT0icGFkZGluZzogMDsgbWFyZ2luOiAwOyBmb250LXNpemU6IDA7IGxpbmUtaGVpZ2h0OiAwOyI-DQo8dGQgc3R5bGU9ImJvcmRlci10b3A6IDNweDsgaGVpZ2h0OjNweDsgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogNHB4OyBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNHB4OyBkaXNwbGF5OmlubGluZS1ibG9jazsgdGV4dC1hbGlnbjogY2VudGVyOyI-PC90ZD4NCjwvdHI-DQo8L3RhYmxlPg0KPC90YWJsZT4NCjwvdGQ-DQo8L3RyPg0KPC90ZD4NCjwvdHI-DQo8L3RhYmxlPg0KPC90ZD4NCjwvdHI-DQo8dHI-PHRkIGhlaWdodD0yND48L3RkPjwvdHI-DQo8dHI-DQo8dGQgd2lkdGg9MTAwJSBzdHlsZT0id2lkdGg6MTAwJTsgbWF4LXdpZHRoOjQ4MHB4OyBib3JkZXI6IDJweCBzb2xpZCAjREZFMUU1OyBib3JkZXItcmFkaXVzOiA4cHg7Ij4NCjx0YWJsZSByb2xlPXByZXNlbnRhdGlvbiBib3JkZXI9MCBjZWxsc3BhY2luZz0wIGNlbGxwYWRkaW5nPTAgd2lkdGg9MTAwJT4NCjx0cj4NCjx0ZD4NCjx0YWJsZSByb2xlPXByZXNlbnRhdGlvbiBib3JkZXI9MCBjZWxsc3BhY2luZz0wIGNlbGxwYWRkaW5nPTAgYWxpZ249Y2VudGVyIHdpZHRoPTEwMCU-DQo8dHI-PHRkIGhlaWdodD01MD48L3RkPjwvdHI-DQo8dHI-DQo8dGQgYWxpZ249Y2VudGVyPiA8YW1wLWltZyByb2xlPXByZXNlbnRhdGlvbiBjbGFzcz1tb2R1bGVfbW9iaWxlIHdpZHRoPTQ4IGhlaWdodD00OCBzcmM9aHR0cHM6Ly93d3cuZ3N0YXRpYy5jb20vZ3VtZHJvcC9maWxlcy9nb29nbGUtbG9nby5wbmcgc3R5bGU9IndpZHRoOiA0OHB4OyBoZWlnaHQ6NDhweDsgdGV4dC1hbGlnbjogY2VudGVyOyBib3JkZXI6IG5vbmU7IGZvbnQtc2l6ZTo5cHg7Ij4NCjwvdGQ-DQo8L3RyPg0KPHRyPjx0ZCBoZWlnaHQ9MTU-PC90ZD48L3RyPg0KPHRyPg0KPCEtLVtpZiBtc29dPg0KPHRkIGFsaWduPSJjZW50ZXIiIGNsYXNzPSJkZXZpY2VfdHh0IHNwYWNlNiIgc3R5bGU9J2NvbG9yOiMyMDIxMjQ7IGZvbnQtZmFtaWx5Okdvb2dsZSBTYW5zLCBSb2JvdG8sIEFyaWFsOyBmb250LXNpemU6MThweDsgZm9udC13ZWlnaHQ6bm9ybWFsOyBsaW5lLWhlaWdodDozM3B4OyBtYXJnaW46MDsgcGFkZGluZzowIDgwcHggMjBweCA4MHB4OyB0ZXh0LWFsaWduOmNlbnRlcjsgd29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsnIGRpcj0ibHRyIj5TdGF5IGluIHRoZSBrbm93IHdpdGggdGhlIEdvb2dsZSBhcHA8L3RkPg0KPCFbZW5kaWZdLS0-DQo8IS0tW2lmICFtc29dPjwhLS0-DQo8dGQgYWxpZ249Y2VudGVyIGNsYXNzPSJkZXZpY2VfdHh0IHNwYWNlNiIgc3R5bGU9ImNvbG9yOiMyMDIxMjQ7IGZvbnQtZmFtaWx5Okdvb2dsZSBTYW5zLCBSb2JvdG8sIEFyaWFsOyBmb250LXNpemU6MThweDsgZm9udC13ZWlnaHQ6bm9ybWFsOyBsaW5lLWhlaWdodDozM3B4OyBtYXJnaW46MDsgdGV4dC1hbGlnbjpjZW50ZXI7IHdvcmQtYnJlYWs6bm9ybWFsO2RpcmVjdGlvbjpsdHI7IiBkaXI9bHRyPlN0YXkgaW4gdGhlIGtub3cgd2l0aCB0aGUgR29vZ2xlIGFwcDwvdGQ-DQo8IS0tPCFbZW5kaWZdLS0-DQo8L3RyPg0KPCEtLVtpZiAhbXNvXT48IS0tPg0KPHRyPg0KPHRkIGhlaWdodD0xNSBzdHlsZT0ibGluZS1oZWlnaHQ6IDRweDsgZm9udC1zaXplOiA0cHg7Ij48L3RkPg0KPC90cj4NCjwhLS08IVtlbmRpZl0tLT4NCjx0cj4NCjx0ZCBjbGFzcz0ic3ViaGVhZGxpbmUgc3BhY2U2IiBhbGlnbj1jZW50ZXIgc3R5bGU9ImNvbG9yOiM1RjYzNjg7IGZvbnQtZmFtaWx5OiZxdW90O1JvYm90byZxdW90OywgT3BlblNhbnMsICZxdW90O09wZW4gU2FucyZxdW90OywgQXJpYWwsIHNhbnMtc2VyaWY7IGZvbnQtc2l6ZToxNnB4OyBmb250LXdlaWdodDpub3JtYWw7IGxpbmUtaGVpZ2h0OjI0cHg7IG1hcmdpbjowOyB0ZXh0LWFsaWduOmNlbnRlcjsgd29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsiIGRpcj1sdHI-RmluZCBxdWljayBhbnN3ZXJzLCBleHBsb3JlIHlvdXIgaW50ZXJlc3RzLCBhbmQgc3RheSB1cCB0byBkYXRlLjwvdGQ-DQo8L3RyPg0KPHRyPjx0ZCBoZWlnaHQ9MzA-PC90ZD48L3RyPg0KPHRyPg0KPHRkIGNsYXNzPXNwYWNlNCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBwYWRkaW5nOiAwOyI-DQo8ZGl2Pg0KPCEtLVtpZiBtc29dPg0KPHY6cm91bmRyZWN0IHhtbG5zOnY9InVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206dm1sIiB4bWxuczp3PSJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOm9mZmljZTp3b3JkIiBocmVmPSJodHRwczovL25vdGlmaWNhdGlvbnMuZ29vZ2xlLmNvbS9nL3AvQU5pYW81cWRVS0U0R0VseFZvUkxoa3JIaTh0LWUzWGY0NzBYT2E1NTVhWnZoUEYxTm0yZHJURDBnMFJxalpaWDdlX090X1RjbXd0VDk5SlJGR09Zd29lS084ZUktdHdRT1Q5ajJGdjlzdGZ0cHhiUEkxbFhLd0NEVGpTZV9pc013Y2loNmFXMndDQjQ3Q2RJTHktVVpsdGpEaTd6VWplVk5zOEp4UXdxSlYxX3BOaWo1WmtBelpGVndKdF90V0pCSVNKOHJoMnVxY0gzSEJhdncwOWtYWUJYTWNPTlRDcndDZW9wQ0dPUnZnMmgyR2d2enJub3VaY3FFdzJta3A3RDQ1emJCNW1lNXVhUnVlVzBVOFZiQWFLLVl2cTcyYUs0enRsdlNMc19BeUkyNnhWNFJKb1ZBRFJwOTVSYkl2SWw3amNSTk5jdUZYYm9MbUsteEE1NlpQQlRLUXk5eGJVQUVzQnpzT1FDM1ROS3Y3V1lvekRpdGZ0bDF0RGsiIHN0eWxlPSJoZWlnaHQ6NDhweDsgdi10ZXh0LWFuY2hvcjptaWRkbGU7IHdpZHRoOjE1MHB4OyIgYXJjc2l6ZT0iMTAlIiBzdHJva2Vjb2xvcj0iIzFBNzNFOCIgZmlsbGNvbG9yPSIjMUE3M0U4OyI-DQo8dzphbmNob3Jsb2NrLz4NCjxjZW50ZXIgc3R5bGU9ImNvbG9yOiNmZmZmZmY7Zm9udC1mYW1pbHk6R29vZ2xlIFNhbnMsIFJvYm90bywgQXJpYWw7IGZvbnQtc2l6ZToxNnB4OyBmb250LXdlaWdodDpub3JtYWw7IHdvcmQtYnJlYWs6bm9ybWFsO2RpcmVjdGlvbjpsdHI7IiBkaXI9Imx0ciI-VHJ5IGl0PC9jZW50ZXI-DQo8L3Y6cm91bmRyZWN0Pg0KPCFbZW5kaWZdLS0-DQo8IS0tW2lmICFtc29dPjwhLS0-DQo8YSBocmVmPWh0dHBzOi8vbm90aWZpY2F0aW9ucy5nb29nbGUuY29tL2cvcC9BTmlhbzVxZFVLRTRHRWx4Vm9STGhrckhpOHQtZTNYZjQ3MFhPYTU1NWFadmhQRjFObTJkclREMGcwUnFqWlpYN2VfT3RfVGNtd3RUOTlKUkZHT1l3b2VLTzhlSS10d1FPVDlqMkZ2OXN0ZnRweGJQSTFsWEt3Q0RUalNlX2lzTXdjaWg2YVcyd0NCNDdDZElMeS1VWmx0akRpN3pVamVWTnM4SnhRd3FKVjFfcE5pajVaa0F6WkZWd0p0X3RXSkJJU0o4cmgydXFjSDNIQmF2dzA5a1hZQlhNY09OVENyd0Nlb3BDR09SdmcyaDJHZ3Z6cm5vdVpjcUV3Mm1rcDdENDV6YkI1bWU1dWFSdWVXMFU4VmJBYUstWXZxNzJhSzR6dGx2U0xzX0F5STI2eFY0UkpvVkFEUnA5NVJiSXZJbDdqY1JOTmN1Rlhib0xtSy14QTU2WlBCVEtReTl4YlVBRXNCenNPUUMzVE5LdjdXWW96RGl0ZnRsMXREayB0YXJnZXQ9X2JsYW5rIGRpcj1sdHIgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgZGlzcGxheTogaW5saW5lLWJsb2NrOyI-DQo8dGFibGUgcm9sZT1wcmVzZW50YXRpb24gY2VsbHNwYWNpbmc9MCBjZWxscGFkZGluZz0wIGFsaWduPWNlbnRlcj4NCjx0ciBzdHlsZT0icGFkZGluZzogMDsgbWFyZ2luOiAwOyBmb250LXNpemU6IDA7IGxpbmUtaGVpZ2h0OiAwOyI-PHRkIHN0eWxlPSJib3JkZXItdG9wOiAzcHggc29saWQgI2ZmZmZmZjtib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA0cHg7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDRweDtkaXNwbGF5OmlubGluZS1ibG9jazsgdGV4dC1hbGlnbjogY2VudGVyOyI-PC90ZD48L3RyPg0KPHRyPjx0ZCBjbGFzcz0ic3ViaGVhZGxpbmUgYnRuX21vZDJfbW9iaWxlMiBlbndpZCIgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6IzFBNzNFODsgYm9yZGVyOjFweCBzb2xpZCAjMUE3M0U4OyBib3JkZXItcmFkaXVzOjRweDsgY29sb3I6I2ZmZmZmZjsgZGlzcGxheTppbmxpbmUtYmxvY2s7IGZvbnQtZmFtaWx5Okdvb2dsZSBTYW5zLCBSb2JvdG8sIEFyaWFsOyBmb250LXNpemU6MTZweDsgbGluZS1oZWlnaHQ6MjVweDsgdGV4dC1kZWNvcmF0aW9uOm5vbmU7IHBhZGRpbmc6N3B4IDI0cHggN3B4IDI0cHg7IGZvbnQtd2VpZ2h0OjUwMDsgdGV4dC1hbGlnbjogY2VudGVyOyB3b3JkLWJyZWFrOm5vcm1hbDsgZGlyZWN0aW9uOmx0cjsgIj4NClRyeSBpdA0KPC90ZD48L3RyPg0KPHRyIHN0eWxlPSJwYWRkaW5nOiAwOyBtYXJnaW46IDA7IGZvbnQtc2l6ZTogMDsgbGluZS1oZWlnaHQ6IDA7Ij48dGQgc3R5bGU9ImJvcmRlci10b3A6IDRweCBzb2xpZCAjZmZmZmZmO2Rpc3BsYXk6aW5saW5lLWJsb2NrO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDRweDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij48L3RkPjwvdHI-DQo8L3RhYmxlPjwvYT4NCjwhLS08IVtlbmRpZl0tLT4NCjwvZGl2Pg0KPC90ZD4NCjwvdHI-DQo8dHI-PHRkIGhlaWdodD01MD48L3RkPjwvdHI-DQo8L3RhYmxlPg0KPC90ZD4NCjwvdHI-DQo8L3RhYmxlPg0KPC90ZD4NCjwvdHI-DQo8dHI-PHRkIGhlaWdodD0yND48L3RkPjwvdHI-DQo8dHI-DQo8dGQgd2lkdGg9MTAwJSBzdHlsZT0iYm9yZGVyOiAycHggc29saWQgI0RGRTFFNTsgYm9yZGVyLXJhZGl1czogOHB4O3BhZGRpbmctYm90dG9tOjUwcHg7d2lkdGg6MTAwJTttYXgtd2lkdGg6NDgwcHg7Ij4NCjx0YWJsZSByb2xlPXByZXNlbnRhdGlvbiBib3JkZXI9MCBjZWxsc3BhY2luZz0wIGNlbGxwYWRkaW5nPTAgYWxpZ249Y2VudGVyIHdpZHRoPTEwMCU-DQo8dHI-DQo8dGQgYWxpZ249Y2VudGVyPg0KPGFtcC1pbWcgcm9sZT1wcmVzZW50YXRpb24gY2xhc3M9dG9wX2ltZyB3aWR0aD01MTQgaGVpZ2h0PTIwNyBzcmM9aHR0cHM6Ly93d3cuZ3N0YXRpYy5jb20vZ3VtZHJvcC9maWxlcy9hcHBzLWljb25zLWltYWdlLTJ4LXdkOTcycHgtaHQzOTBweC5wbmcgc3R5bGU9IndpZHRoOiAxMDAlOyB0ZXh0LWFsaWduOiBjZW50ZXI7IGJvcmRlcjogbm9uZTsgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogOHB4OyBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogOHB4OyIgbGF5b3V0PXJlc3BvbnNpdmU-DQo8L3RkPg0KPC90cj4NCjx0cj48dGQgaGVpZ2h0PTc-PC90ZD48L3RyPg0KPHRyPg0KPCEtLVtpZiBtc29dPg0KPHRkIGFsaWduPSJjZW50ZXIiIGNsYXNzPSJkZXZpY2VfdHh0IHNwYWNlNiIgc3R5bGU9J2NvbG9yOiMyMDIxMjQ7IGZvbnQtZmFtaWx5Okdvb2dsZSBTYW5zLCBSb2JvdG8sIEFyaWFsOyBmb250LXNpemU6MThweDsgZm9udC13ZWlnaHQ6bm9ybWFsOyBsaW5lLWhlaWdodDozM3B4OyBtYXJnaW46MDsgcGFkZGluZzowIDgwcHggMjBweCA4MHB4OyB0ZXh0LWFsaWduOmNlbnRlcjsgd29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsnIGRpcj0ibHRyIj5Nb3JlIGZyb20gR29vZ2xlPC90ZD4NCjwhW2VuZGlmXS0tPg0KPCEtLVtpZiAhbXNvXT48IS0tPg0KPHRkIGFsaWduPWNlbnRlciBjbGFzcz0iZGV2aWNlX3R4dCBzcGFjZTYiIHN0eWxlPSJjb2xvcjojMjAyMTI0OyBmb250LWZhbWlseTpHb29nbGUgU2FucywgUm9ib3RvLCBBcmlhbDsgZm9udC1zaXplOjE4cHg7IGZvbnQtd2VpZ2h0Om5vcm1hbDsgbGluZS1oZWlnaHQ6MzNweDsgbWFyZ2luOjA7IHRleHQtYWxpZ246Y2VudGVyOyB3b3JkLWJyZWFrOm5vcm1hbDtkaXJlY3Rpb246bHRyOyIgZGlyPWx0cj5Nb3JlIGZyb20gR29vZ2xlPC90ZD4NCjwhLS08IVtlbmRpZl0tLT4NCjwvdHI-DQo8IS0tW2lmICFtc29dPjwhLS0-DQo8dHI-DQo8dGQgaGVpZ2h0PTE1IHN0eWxlPSJsaW5lLWhlaWdodDogNHB4OyBmb250LXNpemU6IDRweDsiPjwvdGQ-DQo8L3RyPg0KPCEtLTwhW2VuZGlmXS0tPg0KPHRyPg0KPHRkIGNsYXNzPSJzdWJoZWFkbGluZSBzcGFjZTYiIGFsaWduPWNlbnRlciBzdHlsZT0iY29sb3I6IzVGNjM2ODsgZm9udC1mYW1pbHk6JnF1b3Q7Um9ib3RvJnF1b3Q7LCBPcGVuU2FucywgJnF1b3Q7T3BlbiBTYW5zJnF1b3Q7LCBBcmlhbCwgc2Fucy1zZXJpZjsgZm9udC1zaXplOjE2cHg7IGZvbnQtd2VpZ2h0Om5vcm1hbDsgbGluZS1oZWlnaHQ6MjRweDsgbWFyZ2luOjA7IHRleHQtYWxpZ246Y2VudGVyOyB3b3JkLWJyZWFrOm5vcm1hbDtkaXJlY3Rpb246bHRyOyIgZGlyPWx0cj5EaXNjb3ZlciB0aGUgbGF0ZXN0IGFwcHMgZnJvbSBHb29nbGUuPC90ZD4NCjwvdHI-DQo8dHI-PHRkIGhlaWdodD0zMD48L3RkPjwvdHI-DQo8dHI-DQo8dGQgYWxpZ249Y2VudGVyIHZhbGlnbj10b3A-DQo8dGFibGUgcm9sZT1wcmVzZW50YXRpb24-DQo8dHI-DQo8dGQgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgcGFkZGluZzogMDsiPg0KPGRpdj4NCjwhLS1baWYgbXNvXT4NCjx2OnJvdW5kcmVjdCB4bWxuczp2PSJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOnZtbCIgeG1sbnM6dz0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTpvZmZpY2U6d29yZCIgaHJlZj0iaHR0cHM6Ly9ub3RpZmljYXRpb25zLmdvb2dsZS5jb20vZy9wL0FOaWFvNW9sWFIzU0NoMng3MVVYOVVuc0pFbFFMT2NhYlpoTmVhVlk2ZWlFNHNsNjRXeGlnVXdDY0hjT1JteTBJbzVBMThpcWhveFZmTER5Q2o2R3JwX1haOHN5dEZ1eEw2elZOU2hQU0s5QWM4TWwySC1Eajg2dWdaRFp6N1hyTHVRUGgwM0pkZnhJc3h4eUo1a29mQVBkNHB5Q1dTczg4VW9LamhpcWh1bExIdHA0OFNDQmZ1WHdONU5JUjJBdVF4UjllRkxFUlNuck0tMkpqcUQyS090VTh3R28zbnFZdWRzc2FudVV5bmlxWFZkQnZaV29VMXJXc1FWcWxmOUtDQ28zMk5uY3BkNEtLaDRHdmFsbjlpaUg4Ti1zcXlNaERpcDdSRFd5clJCOXQ0ZjVLOXpuUlNBRUR1MmViWHpMLWhmUk5uemVkSlZUZHNMM3prQW5IcW44aDdJbG1qcVQza19VNVJlcW5BVGFDcVpQSzB6Um42TGRHMHFqbU9NY3NYQjNkYWlaZ3lmVEJrUDlGU2Y0eDJwbDR4Nk9IcnhhQUctTWZDZU5kdmU3eDM4eGlSY2FZWkRmSW9ET2Y3bzJyU3V6RWVoYWtnSWdNVjZleEk4RllSNU1mOEVadDBDUDRFTkNVVXpUb011YWN5NUJDY1ctTldBaE9xQXZaR2U0c3ljbWlHTXFhSjRXeTBZUzBOdl9DMUxiZWxEdDFsRVBnaldYSDdiYzIxWEVRZHBaVTFDWkpGSGtNdF95YVFVZ0JTd2oyTmFZZVB0cUw2emk3ay1xcDh2NEdEWTc1bzB4MVNhTEttaGpNWEk0S1FwWEZWbDEwTm42c0M2TUZRZXNaX1pzdkNOOEd0MVJEREllbHk2X2haTnVYQWxhUnciIHN0eWxlPSJoZWlnaHQ6NDhweDsgdi10ZXh0LWFuY2hvcjptaWRkbGU7IHdpZHRoOjE2MHB4OyIgYXJjc2l6ZT0iMTAlIiBzdHJva2Vjb2xvcj0iIzFBNzNFOCIgZmlsbGNvbG9yPSIjMUE3M0U4OyI-DQo8dzphbmNob3Jsb2NrLz4NCjxjZW50ZXIgc3R5bGU9ImNvbG9yOiNmZmZmZmY7Zm9udC1mYW1pbHk6R29vZ2xlIFNhbnMsIFJvYm90bywgQXJpYWw7IGZvbnQtc2l6ZToxNnB4OyBmb250LXdlaWdodDpub3JtYWw7IHdvcmQtYnJlYWs6bm9ybWFsO2RpcmVjdGlvbjpsdHI7IiBkaXI9Imx0ciI-Rm9yIEFuZHJvaWQ8L2NlbnRlcj4NCjwvdjpyb3VuZHJlY3Q-DQo8IVtlbmRpZl0tLT4NCjwhLS1baWYgIW1zb10-PCEtLT4NCjxhIGhyZWY9aHR0cHM6Ly9ub3RpZmljYXRpb25zLmdvb2dsZS5jb20vZy9wL0FOaWFvNW9sWFIzU0NoMng3MVVYOVVuc0pFbFFMT2NhYlpoTmVhVlk2ZWlFNHNsNjRXeGlnVXdDY0hjT1JteTBJbzVBMThpcWhveFZmTER5Q2o2R3JwX1haOHN5dEZ1eEw2elZOU2hQU0s5QWM4TWwySC1Eajg2dWdaRFp6N1hyTHVRUGgwM0pkZnhJc3h4eUo1a29mQVBkNHB5Q1dTczg4VW9LamhpcWh1bExIdHA0OFNDQmZ1WHdONU5JUjJBdVF4UjllRkxFUlNuck0tMkpqcUQyS090VTh3R28zbnFZdWRzc2FudVV5bmlxWFZkQnZaV29VMXJXc1FWcWxmOUtDQ28zMk5uY3BkNEtLaDRHdmFsbjlpaUg4Ti1zcXlNaERpcDdSRFd5clJCOXQ0ZjVLOXpuUlNBRUR1MmViWHpMLWhmUk5uemVkSlZUZHNMM3prQW5IcW44aDdJbG1qcVQza19VNVJlcW5BVGFDcVpQSzB6Um42TGRHMHFqbU9NY3NYQjNkYWlaZ3lmVEJrUDlGU2Y0eDJwbDR4Nk9IcnhhQUctTWZDZU5kdmU3eDM4eGlSY2FZWkRmSW9ET2Y3bzJyU3V6RWVoYWtnSWdNVjZleEk4RllSNU1mOEVadDBDUDRFTkNVVXpUb011YWN5NUJDY1ctTldBaE9xQXZaR2U0c3ljbWlHTXFhSjRXeTBZUzBOdl9DMUxiZWxEdDFsRVBnaldYSDdiYzIxWEVRZHBaVTFDWkpGSGtNdF95YVFVZ0JTd2oyTmFZZVB0cUw2emk3ay1xcDh2NEdEWTc1bzB4MVNhTEttaGpNWEk0S1FwWEZWbDEwTm42c0M2TUZRZXNaX1pzdkNOOEd0MVJEREllbHk2X2haTnVYQWxhUncgdGFyZ2V0PV9ibGFuayBkaXI9bHRyIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IGRpc3BsYXk6IGlubGluZS1ibG9jazsiPg0KPHRhYmxlIHJvbGU9cHJlc2VudGF0aW9uIGNlbGxzcGFjaW5nPTAgY2VsbHBhZGRpbmc9MCBhbGlnbj1jZW50ZXI-DQo8dHIgc3R5bGU9InBhZGRpbmc6IDA7IG1hcmdpbjogMDsgZm9udC1zaXplOiAwOyBsaW5lLWhlaWdodDogMDsiPjx0ZCBzdHlsZT0iYm9yZGVyLXRvcDogM3B4IHNvbGlkICNmZmZmZmY7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czogNHB4O2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA0cHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7IHRleHQtYWxpZ246IGNlbnRlcjsiPjwvdGQ-PC90cj4NCjx0cj48dGQgY2xhc3M9InN1YmhlYWRsaW5lIGJ0bl9tb2QzX21vYmlsZSBlbndpZCBwZG5ncnRsIHdpZHRobWluIiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjojMUE3M0U4OyBib3JkZXI6MXB4IHNvbGlkICMxQTczRTg7IGJvcmRlci1yYWRpdXM6NHB4OyBjb2xvcjojZmZmZmZmOyBkaXNwbGF5OmlubGluZS1ibG9jazsgZm9udC1mYW1pbHk6R29vZ2xlIFNhbnMsIFJvYm90bywgQXJpYWw7IGZvbnQtc2l6ZToxNnB4OyBsaW5lLWhlaWdodDoyNXB4OyB0ZXh0LWRlY29yYXRpb246bm9uZTsgZm9udC13ZWlnaHQ6NTAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHdvcmQtYnJlYWs6bm9ybWFsOyBkaXJlY3Rpb246bHRyOyI-DQpGb3IgQW5kcm9pZA0KPC90ZD48L3RyPg0KPHRyIHN0eWxlPSJwYWRkaW5nOiAwOyBtYXJnaW46IDA7IGZvbnQtc2l6ZTogMDsgbGluZS1oZWlnaHQ6IDA7Ij48dGQgc3R5bGU9ImJvcmRlci10b3A6IDRweCBzb2xpZCAjZmZmZmZmO2Rpc3BsYXk6aW5saW5lLWJsb2NrO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDRweDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij48L3RkPjwvdHI-DQo8L3RhYmxlPjwvYT4NCjwhLS08IVtlbmRpZl0tLT4NCjxzcGFuIHN0eWxlPSIiIGNsYXNzPWFkZGluZ3NwYWNlPsKgwqA8L3NwYW4-DQo8IS0tW2lmIG1zb10-DQo8djpyb3VuZHJlY3QgeG1sbnM6dj0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTp2bWwiIHhtbG5zOnc9InVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206b2ZmaWNlOndvcmQiIGhyZWY9Imh0dHBzOi8vbm90aWZpY2F0aW9ucy5nb29nbGUuY29tL2cvcC9BTmlhbzVyV0l1b2JFSS1GTnZQSTNTQV90MDNPd09LYW5Hb0liN1hFSlB0OGZBaENzRWYxRlA2YnFDN0ctRk0yQzNONDBIaWs2ZTdheWNGMkFVUHY2VldOY2xoU2pJWkMwYlRkMFJhejkxZWtudHpUODdEY2Y1YXg1b1FiN0ZYbWJvaGhVQWZpcWxBUE01cURGazRYNTBRcWluSmZfTG8wa2VuWDdLbkFKTXBNbG9uY3otOXNKZTFiSVpYcTVoeHBNTnpSZXV4WkdwRWR2NlhodXFIdlBaVkJJQ254YXMzMnM2MFZvbDZVWDNxZjFwT2Y5QkYwOEZDRjZFN0w2T1ozWHdCSVd5bmUxQy1NeFBwMGMxRTdXcnIyX0VCeS04d1N2ZDRMMkRUanVHUmsydTRaWW9DMGNPYVpuZThaRU0wV0w3ZTBOM2d4R1NpbEtJcjIyQkF0RGY0WWdWc2hWTmZZUWo4LXV6dlBFNGNXbEFvdWhRQ1JOd0o1SENkeWhnMThodk5jWHZBcXBYcWJZY1V1IiBzdHlsZT0iaGVpZ2h0OjQ4cHg7IHYtdGV4dC1hbmNob3I6bWlkZGxlOyB3aWR0aDoxMzBweDsiIGFyY3NpemU9IjEwJSIgc3Ryb2tlY29sb3I9IiMxQTczRTgiIGZpbGxjb2xvcj0iIzFBNzNFODsiPg0KPHc6YW5jaG9ybG9jay8-DQo8Y2VudGVyIHN0eWxlPSJjb2xvcjojZmZmZmZmO2ZvbnQtZmFtaWx5Okdvb2dsZSBTYW5zLCBSb2JvdG8sIEFyaWFsOyBmb250LXNpemU6MTZweDsgZm9udC13ZWlnaHQ6bm9ybWFsOyB3b3JkLWJyZWFrOm5vcm1hbDtkaXJlY3Rpb246bHRyOyIgZGlyPSJsdHIiPkZvciBpT1M8L2NlbnRlcj4NCjwvdjpyb3VuZHJlY3Q-DQo8IVtlbmRpZl0tLT4NCjwhLS1baWYgIW1zb10-PCEtLT4NCjxhIGhyZWY9aHR0cHM6Ly9ub3RpZmljYXRpb25zLmdvb2dsZS5jb20vZy9wL0FOaWFvNXJXSXVvYkVJLUZOdlBJM1NBX3QwM093T0thbkdvSWI3WEVKUHQ4ZkFoQ3NFZjFGUDZicUM3Ry1GTTJDM040MEhpazZlN2F5Y0YyQVVQdjZWV05jbGhTaklaQzBiVGQwUmF6OTFla250elQ4N0RjZjVheDVvUWI3RlhtYm9oaFVBZmlxbEFQTTVxREZrNFg1MFFxaW5KZl9MbzBrZW5YN0tuQUpNcE1sb25jei05c0plMWJJWlhxNWh4cE1OelJldXhaR3BFZHY2WGh1cUh2UFpWQklDbnhhczMyczYwVm9sNlVYM3FmMXBPZjlCRjA4RkNGNkU3TDZPWjNYd0JJV3luZTFDLU14UHAwYzFFN1dycjJfRUJ5LTh3U3ZkNEwyRFRqdUdSazJ1NFpZb0MwY09hWm5lOFpFTTBXTDdlME4zZ3hHU2lsS0lyMjJCQXREZjRZZ1ZzaFZOZllRajgtdXp2UEU0Y1dsQW91aFFDUk53SjVIQ2R5aGcxOGh2TmNYdkFxcFhxYlljVXUgdGFyZ2V0PV9ibGFuayBkaXI9bHRyIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IGRpc3BsYXk6IGlubGluZS1ibG9jazsiPg0KPHRhYmxlIHJvbGU9cHJlc2VudGF0aW9uIGNlbGxzcGFjaW5nPTAgY2VsbHBhZGRpbmc9MCBhbGlnbj1jZW50ZXI-DQo8dHIgc3R5bGU9InBhZGRpbmc6IDA7IG1hcmdpbjogMDsgZm9udC1zaXplOiAwOyBsaW5lLWhlaWdodDogMDsiPjx0ZCBzdHlsZT0iYm9yZGVyLXRvcDogM3B4IHNvbGlkICNmZmZmZmY7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czogNHB4O2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA0cHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7IHRleHQtYWxpZ246IGNlbnRlcjsiPjwvdGQ-PC90cj4NCjx0cj48dGQgY2xhc3M9InN1YmhlYWRsaW5lIGJ0bl9tb2QzX21vYmlsZSBlbndpZCBwZG5ncnRsIHdpZHRobWluIiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjojMUE3M0U4OzsgYm9yZGVyOjFweCBzb2xpZCAjMUE3M0U4OyBib3JkZXItcmFkaXVzOjRweDsgY29sb3I6I2ZmZmZmZjsgZGlzcGxheTppbmxpbmUtYmxvY2s7IGZvbnQtZmFtaWx5Okdvb2dsZSBTYW5zLCBSb2JvdG8sIEFyaWFsOyBmb250LXNpemU6MTZweDsgbGluZS1oZWlnaHQ6MjVweDsgdGV4dC1kZWNvcmF0aW9uOm5vbmU7IGZvbnQtd2VpZ2h0OjUwMDsgdGV4dC1hbGlnbjogY2VudGVyOyB3b3JkLWJyZWFrOm5vcm1hbDsgd2hpdGUtc3BhY2U6bm9ybWFsOyBkaXJlY3Rpb246bHRyOyI-DQpGb3IgaU9TDQo8L3RkPjwvdHI-DQo8dHIgc3R5bGU9InBhZGRpbmc6IDA7IG1hcmdpbjogMDsgZm9udC1zaXplOiAwOyBsaW5lLWhlaWdodDogMDsiPjx0ZCBzdHlsZT0iYm9yZGVyLXRvcDogNHB4IHNvbGlkICNmZmZmZmY7ZGlzcGxheTppbmxpbmUtYmxvY2s7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogNHB4O2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiA0cHg7IHRleHQtYWxpZ246IGNlbnRlcjsiPjwvdGQ-PC90cj4NCjwvdGFibGU-PC9hPg0KPCEtLTwhW2VuZGlmXS0tPg0KPC9kaXY-DQo8L3RkPg0KPC90cj4NCjwvdGFibGU-DQo8L3RkPg0KPC90cj4NCjwvdGFibGU-DQo8L3RkPg0KPC90cj4NCjx0cj48dGQgaGVpZ2h0PTI0PjwvdGQ-PC90cj4NCjx0cj4NCjx0ZCB3aWR0aD0xMDAlIHN0eWxlPSJib3JkZXI6IDJweCBzb2xpZCAjREZFMUU1OyBib3JkZXItcmFkaXVzOiA4cHg7cGFkZGluZy1ib3R0b206NTBweDt3aWR0aDoxMDAlO21heC13aWR0aDo0ODBweDsiPg0KPHRhYmxlIHJvbGU9cHJlc2VudGF0aW9uIGJvcmRlcj0wIGNlbGxzcGFjaW5nPTAgY2VsbHBhZGRpbmc9MCBhbGlnbj1jZW50ZXIgd2lkdGg9MTAwJT4NCjx0cj48dGQgaGVpZ2h0PTUwPjwvdGQ-PC90cj4NCjx0cj4NCjx0ZCBhbGlnbj1jZW50ZXI-IDxhbXAtaW1nIHJvbGU9cHJlc2VudGF0aW9uIGNsYXNzPW1vZHVsZV9tb2JpbGUgd2lkdGg9NDggaGVpZ2h0PTQ4IHNyYz1odHRwczovL3d3dy5nc3RhdGljLmNvbS9ndW1kcm9wL2ZpbGVzL3NlY3VyaXR5LWxvZ28ucG5nIHN0eWxlPSJ3aWR0aDogNDhweDsgaGVpZ2h0OjQ4cHg7IHRleHQtYWxpZ246IGNlbnRlcjsgYm9yZGVyOiBub25lOyI-DQo8L3RkPg0KPC90cj4NCjx0cj48dGQgaGVpZ2h0PTE1PjwvdGQ-PC90cj4NCjx0cj4NCjwhLS1baWYgbXNvXT4NCjx0ZCBhbGlnbj0iY2VudGVyIiBjbGFzcz0iZGV2aWNlX3R4dCBzcGFjZTYiIHN0eWxlPSdjb2xvcjojMjAyMTI0OyBmb250LWZhbWlseTpHb29nbGUgU2FucywgUm9ib3RvLCBBcmlhbDsgZm9udC1zaXplOjE4cHg7IGZvbnQtd2VpZ2h0Om5vcm1hbDsgbGluZS1oZWlnaHQ6MzNweDsgbWFyZ2luOjA7IHBhZGRpbmc6MCA4MHB4IDIwcHggODBweDsgdGV4dC1hbGlnbjpjZW50ZXI7IHdvcmQtYnJlYWs6bm9ybWFsO2RpcmVjdGlvbjpsdHI7JyBkaXI9Imx0ciI-Q29uZmlybSB5b3VyIG9wdGlvbnMgYXJlIHJpZ2h0IDxzcGFuIHN0eWxlPSJ3aGl0ZS1zcGFjZTpub3dyYXA7ICIgY2xhc3M9IiI-Zm9yIHlvdTwvc3Bhbj48L3RkPg0KPCFbZW5kaWZdLS0-DQo8IS0tW2lmICFtc29dPjwhLS0-DQo8dGQgYWxpZ249Y2VudGVyIGNsYXNzPSJkZXZpY2VfdHh0IHNwYWNlNiIgc3R5bGU9ImNvbG9yOiMyMDIxMjQ7IGZvbnQtZmFtaWx5Okdvb2dsZSBTYW5zLCBSb2JvdG8sIEFyaWFsOyBmb250LXNpemU6MThweDsgZm9udC13ZWlnaHQ6bm9ybWFsOyBsaW5lLWhlaWdodDozM3B4OyBtYXJnaW46MDsgdGV4dC1hbGlnbjpjZW50ZXI7IHdvcmQtYnJlYWs6bm9ybWFsO2RpcmVjdGlvbjpsdHI7IiBkaXI9bHRyPkNvbmZpcm0geW91ciBvcHRpb25zIGFyZSByaWdodCA8c3BhbiBzdHlsZT0id2hpdGUtc3BhY2U6bm93cmFwOyAiIGNsYXNzPSIiPmZvciB5b3U8L3NwYW4-PC90ZD4NCjwhLS08IVtlbmRpZl0tLT4NCjwvdHI-DQo8IS0tW2lmICFtc29dPjwhLS0-DQo8dHI-DQo8dGQgaGVpZ2h0PTE1IHN0eWxlPSJsaW5lLWhlaWdodDogNHB4OyBmb250LXNpemU6IDRweDsiPjwvdGQ-DQo8L3RyPg0KPCEtLTwhW2VuZGlmXS0tPg0KPHRyPg0KPHRkIGNsYXNzPSJzdWJoZWFkbGluZSBzcGFjZTYiIGFsaWduPWNlbnRlciBzdHlsZT0iY29sb3I6IzVGNjM2ODsgZm9udC1mYW1pbHk6JnF1b3Q7Um9ib3RvJnF1b3Q7LCBPcGVuU2FucywgJnF1b3Q7T3BlbiBTYW5zJnF1b3Q7LCBBcmlhbCwgc2Fucy1zZXJpZjsgZm9udC1zaXplOjE2cHg7IGZvbnQtd2VpZ2h0Om5vcm1hbDsgbGluZS1oZWlnaHQ6MjRweDsgbWFyZ2luOjA7IHRleHQtYWxpZ246Y2VudGVyOyB3b3JkLWJyZWFrOm5vcm1hbDtkaXJlY3Rpb246bHRyOyIgZGlyPWx0cj5SZXZpZXcgYW5kIGNoYW5nZSB5b3VyIHByaXZhY3kgYW5kIHNlY3VyaXR5IG9wdGlvbnMgdG8gbWFrZSA8c3BhbiBzdHlsZT0id2hpdGUtc3BhY2U6bm93cmFwOyAiIGNsYXNzPSIiPkdvb2dsZTwvc3Bhbj4gd29yayBiZXR0ZXIgPHNwYW4gc3R5bGU9IndoaXRlLXNwYWNlOm5vd3JhcDsgIiBjbGFzcz0iIj5mb3IgeW91Ljwvc3Bhbj48L3RkPg0KPC90cj4NCjx0cj48dGQgaGVpZ2h0PTMwPjwvdGQ-PC90cj4NCjx0cj4NCjx0ZCBhbGlnbj1jZW50ZXIgdmFsaWduPXRvcD4NCjx0YWJsZSByb2xlPXByZXNlbnRhdGlvbj4NCjx0cj4NCjx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBwYWRkaW5nLXRvcDogMDsiPg0KPGRpdj4NCjwhLS1baWYgbXNvXT4NCjx2OnJvdW5kcmVjdCB4bWxuczp2PSJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOnZtbCIgeG1sbnM6dz0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTpvZmZpY2U6d29yZCIgaHJlZj0iaHR0cHM6Ly9ub3RpZmljYXRpb25zLmdvb2dsZS5jb20vZy9wL0FOaWFvNXFocUpQUGQ4eEUwcGRpb0JQbUM1U0hOVWplWHUyTFBCTzhvN3RaVE1SMVJrV3ZzNlJfZDNXV0ZyT18xWGpya3piRlZOZXo5RFB5bzdmVWZFaUV3MjZNMS1zbFlIa0dRMEVfZ1EwbHVqc2NQb29NdDlVelRPczBiWWlkQmhEVTRaaWJWM2JpTVdHMmRWTWVBUVR5SU1jaE1PUnNpcXVZWHBlMVJudzl3akVHMm8tTVBENU00bTlCckNFejB2eTNNaUI1am95MFhTSzhjeTBtNFVVWjJWS0s2eV9JWExXWi00S2Y3eEUtd1hGczcxU3p1ZU9xNFFzR1FuZDREbDM2TEVUSHJLUWZuTTZsNVJvbWtKV3AxWTNsQjRSS2VDZlRNRk5IeXZ0SU1SQmx0VFBRYXZFN09QdDR6emo1VzhSU2tYQkptM1pURHhmTlRjMlJ3TTgiIHN0eWxlPSJoZWlnaHQ6NDhweDsgdi10ZXh0LWFuY2hvcjptaWRkbGU7IHdpZHRoOjE4MHB4OyIgYXJjc2l6ZT0iMTAlIiBzdHJva2Vjb2xvcj0iIzFBNzNFOCIgZmlsbGNvbG9yPSIjMUE3M0U4OyI-DQo8dzphbmNob3Jsb2NrLz4NCjxjZW50ZXIgc3R5bGU9ImNvbG9yOiNmZmZmZmY7Zm9udC1mYW1pbHk6R29vZ2xlIFNhbnMsIFJvYm90bywgQXJpYWw7IGZvbnQtc2l6ZToxNnB4OyBmb250LXdlaWdodDpub3JtYWw7IHdvcmQtYnJlYWs6bm9ybWFsO2RpcmVjdGlvbjpsdHI7IiBkaXI9Imx0ciI-Q29uZmlybTwvY2VudGVyPg0KPC92OnJvdW5kcmVjdD4NCjwhW2VuZGlmXS0tPg0KPCEtLVtpZiAhbXNvXT48IS0tPg0KPGEgaHJlZj1odHRwczovL25vdGlmaWNhdGlvbnMuZ29vZ2xlLmNvbS9nL3AvQU5pYW81cWhxSlBQZDh4RTBwZGlvQlBtQzVTSE5VamVYdTJMUEJPOG83dFpUTVIxUmtXdnM2Ul9kM1dXRnJPXzFYanJremJGVk5lejlEUHlvN2ZVZkVpRXcyNk0xLXNsWUhrR1EwRV9nUTBsdWpzY1Bvb010OVV6VE9zMGJZaWRCaERVNFppYlYzYmlNV0cyZFZNZUFRVHlJTWNoTU9Sc2lxdVlYcGUxUm53OXdqRUcyby1NUEQ1TTRtOUJyQ0V6MHZ5M01pQjVqb3kwWFNLOGN5MG00VVVaMlZLSzZ5X0lYTFdaLTRLZjd4RS13WEZzNzFTenVlT3E0UXNHUW5kNERsMzZMRVRIcktRZm5NNmw1Um9ta0pXcDFZM2xCNFJLZUNmVE1GTkh5dnRJTVJCbHRUUFFhdkU3T1B0NHp6ajVXOFJTa1hCSm0zWlREeGZOVGMyUndNOCB0YXJnZXQ9X2JsYW5rIGRpcj1sdHIgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgZGlzcGxheTogaW5saW5lLWJsb2NrOyI-DQo8dGFibGUgcm9sZT1wcmVzZW50YXRpb24gY2VsbHNwYWNpbmc9MCBjZWxscGFkZGluZz0wIGFsaWduPWNlbnRlcj4NCjx0ciBzdHlsZT0icGFkZGluZzogMDsgbWFyZ2luOiAwOyBmb250LXNpemU6IDA7IGxpbmUtaGVpZ2h0OiAwOyI-PHRkIHN0eWxlPSJib3JkZXItdG9wOiAzcHggc29saWQgI2ZmZmZmZjtib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA0cHg7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDRweDtkaXNwbGF5OmlubGluZS1ibG9jazsgdGV4dC1hbGlnbjogY2VudGVyOyI-PC90ZD48L3RyPg0KPHRyPjx0ZCBjbGFzcz0ic3ViaGVhZGxpbmUgYnRuX21vZDRfbW9iaWxlIGVud2lkIiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjojMUE3M0U4OyBib3JkZXI6MXB4IHNvbGlkICMxQTczRTg7IGJvcmRlci1yYWRpdXM6NHB4OyBjb2xvcjojZmZmZmZmOyBkaXNwbGF5OmlubGluZS1ibG9jazsgZm9udC1mYW1pbHk6R29vZ2xlIFNhbnMsIFJvYm90bywgQXJpYWw7IGZvbnQtc2l6ZToxNnB4OyBsaW5lLWhlaWdodDoyNXB4OyB0ZXh0LWRlY29yYXRpb246bm9uZTsgcGFkZGluZzo3cHggMjRweCA3cHggMjRweDsgZm9udC13ZWlnaHQ6NTAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHdvcmQtYnJlYWs6bm9ybWFsOyBkaXJlY3Rpb246bHRyOyAiPg0KQ29uZmlybQ0KPC90ZD48L3RyPg0KPHRyIHN0eWxlPSJwYWRkaW5nOiAwOyBtYXJnaW46IDA7IGZvbnQtc2l6ZTogMDsgbGluZS1oZWlnaHQ6IDA7Ij48dGQgc3R5bGU9ImJvcmRlci10b3A6IDRweCBzb2xpZCAjZmZmZmZmO2Rpc3BsYXk6aW5saW5lLWJsb2NrO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDRweDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij48L3RkPjwvdHI-DQo8L3RhYmxlPjwvYT4NCjwhLS08IVtlbmRpZl0tLT4NCjwvZGl2Pg0KPC90ZD4NCjwvdHI-DQo8L3RhYmxlPg0KPC90ZD4NCjwvdHI-DQo8L3RhYmxlPg0KPC90ZD4NCjwvdHI-DQo8dHI-PHRkIGhlaWdodD0yND48L3RkPjwvdHI-DQo8dHI-DQo8dGQgd2lkdGg9NDgwIHN0eWxlPSJib3JkZXI6IDJweCBzb2xpZCAjREZFMUU1OyBib3JkZXItcmFkaXVzOiA4cHg7Ij4NCjx0YWJsZSByb2xlPXByZXNlbnRhdGlvbiBib3JkZXI9MCBjZWxsc3BhY2luZz0wIGNlbGxwYWRkaW5nPTAgd2lkdGg9MTAwJT4NCjx0cj4NCjx0ZCBzdHlsZT0iZm9udC1zaXplOjBwdDsgbGluZS1oZWlnaHQ6MHB0OyBwYWRkaW5nOjA7IG1hcmdpbjowOyIgd2lkdGg9MjQ-PC90ZD4NCjwhLS1baWYgbXNvXT4NCjx0ZCBzdHlsZT0ibWFyZ2luLWJvdHRvbTo2N3B4OyBwYWRkaW5nOiAyMXB4IDEwcHggMzVweCAyMHB4OyI-IDxhbXAtaW1nIHJvbGU9InByZXNlbnRhdGlvbiIgY2xhc3M9ImZhX21vYmlsZSIgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiBzcmM9Imh0dHBzOi8vd3d3LmdzdGF0aWMuY29tL2d1bWRyb3AvZmlsZXMvaGVscC1vdXRsaW5lLnBuZyIgc3R5bGU9IndpZHRoOiAyNHB4OyBoZWlnaHQ6MjRweDsgdGV4dC1hbGlnbjogY2VudGVyOyBib3JkZXI6IG5vbmU7IGZvbnQtc2l6ZTozcHg7Ij4NCjwvdGQ-DQo8IVtlbmRpZl0tLT4NCjwhLS1baWYgIW1zb10-PCEtLT4NCjx0ZCBzdHlsZT0icGFkZGluZzogNDdweCAxMHB4IDQwcHggMjBweDsiIHZhbGlnbj10b3A-IDxhbXAtaW1nIHJvbGU9cHJlc2VudGF0aW9uIGNsYXNzPWZhX21vYmlsZSB3aWR0aD0yNCBoZWlnaHQ9MjQgc3JjPWh0dHBzOi8vd3d3LmdzdGF0aWMuY29tL2d1bWRyb3AvZmlsZXMvaGVscC1vdXRsaW5lLnBuZyBzdHlsZT0id2lkdGg6IDI0cHg7IGhlaWdodDoyNHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGJvcmRlcjogbm9uZTsgZm9udC1zaXplOjNweDsiPg0KPC90ZD4NCjwhLS08IVtlbmRpZl0tLT4NCjx0ZCB2YWxpZ249dG9wPg0KPCEtLVtpZiBtc29dPg0KPGRpdiBjbGFzcz0iZGV2aWNlX3R4dCIgc3R5bGU9Im1hcmdpbi1ib3R0b206MTVweDsgcGFkZGluZy1sZWZ0OiAyMHB4OyBjb2xvcjojMjAyMTI0OyBmb250LWZhbWlseTpHb29nbGUgU2FucywgUm9ib3RvLCBBcmlhbDsgZm9udC1zaXplOjE4cHg7IGxpbmUtaGVpZ2h0OjI4cHg7IHRleHQtYWxpZ246bGVmdDsgcGFkZGluZy10b3A6MThweDsgcGFkZGluZy1ib3R0b206MTJweDsgd29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsiIGRpcj0ibHRyIiB2YWxpZ249InRvcCI-RmluZCBhbnN3ZXJzPC9kaXY-DQo8IVtlbmRpZl0tLT4NCjwhLS1baWYgIW1zb10-PCEtLT4NCjxkaXYgY2xhc3M9ZGV2aWNlX3R4dCBzdHlsZT0icGFkZGluZy1sZWZ0OiAyMHB4OyBjb2xvcjojMjAyMTI0OyBmb250LWZhbWlseTpHb29nbGUgU2FucywgUm9ib3RvLCBBcmlhbDsgZm9udC1zaXplOjE4cHg7IGxpbmUtaGVpZ2h0OjI4cHg7IHRleHQtYWxpZ246bGVmdDsgcGFkZGluZy10b3A6NDVweDsgcGFkZGluZy1ib3R0b206MTJweDsgd29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsiIGRpcj1sdHI-RmluZCBhbnN3ZXJzPC9kaXY-DQo8IS0tPCFbZW5kaWZdLS0-DQo8IS0tW2lmIG1zb10-DQo8ZGl2IGNsYXNzPSJzdWJoZWFkbGluZSBzcGFjZTciIHN0eWxlPSJtYXJnaW4tYm90dG9tOjIwcHg7IHBhZGRpbmctbGVmdDogMjBweDsgcGFkZGluZy1yaWdodDogMjBweDsgY29sb3I6IzVGNjM2ODsgZm9udC1mYW1pbHk6Um9ib3RvLCBPcGVuU2FucywgQXJpYWwsIHNhbnMtc2VyaWY7IGZvbnQtd2VpZ2h0OiBub3JtYWw7IGZvbnQtc2l6ZToxNnB4OyBsaW5lLWhlaWdodDoyNHB4OyB0ZXh0LWFsaWduOmxlZnQ7IHBhZGRpbmctYm90dG9tOjM1cHg7IHdvcmQtYnJlYWs6bm9ybWFsO2RpcmVjdGlvbjpsdHI7IiBkaXI9Imx0ciIgdmFsaWduPSJ0b3AiPlZpc2l0IHRoZSA8YSBocmVmPSJodHRwczovL25vdGlmaWNhdGlvbnMuZ29vZ2xlLmNvbS9nL3AvQU5pYW81cHZybFlaUEp6bEVYeTl6SExpWVlPa0I4M0wzbjNkQWlfMmpsbjF6cjBzN1lWa3I4MDV0NllENnZEREhOM1pQdXVyNDFsOWJ4SjFId1QyTG5ObDZQaUU5WWc2aEd1UzRMa1VoaDZia3RqRDJiM0VadVJKU1AtQjJTTlJEUjlMMnRVdjhCUEEzMXptdjE3dTVJVWVMbE05cnpNckdBYk1IZHBQUzJ5d0d1YThweVNKVVVBUTQ4b24tdTRoQlRzVldMRzBQQkpqN2hGc3l2TGZqMmlyOERweU1pNU5kZEpaXzZMdndNVXVPYkNBNzVJS3RXSGw0eEowTl9IOWluWFRMUDB5SzMwZDZJMmFMRThuUGI0Mnl2RHhDRnlUQ3JvY0RiWmJsSE54RkxXbnllWSIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjb2xvcjojMUE3M0U4OyB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgZm9udC13ZWlnaHQ6bm9ybWFsOyBib3JkZXI6MDsgd2hpdGUtc3BhY2U6IG5vd3JhcDsgIj5IZWxwIENlbnRlcjwvYT4gdG8gbGVhcm4gYWxsIGFib3V0IHlvdXIgbmV3IEdvb2dsZSBBY2NvdW50LjwvZGl2Pg0KPCFbZW5kaWZdLS0-DQo8IS0tW2lmICFtc29dPjwhLS0-DQo8ZGl2IGNsYXNzPSJzdWJoZWFkbGluZSBzcGFjZTciIHN0eWxlPSJwYWRkaW5nLWxlZnQ6IDIwcHg7IHBhZGRpbmctcmlnaHQ6IDIwcHg7IGNvbG9yOiM1RjYzNjg7IGZvbnQtZmFtaWx5OlJvYm90bywgT3BlblNhbnMsIEFyaWFsLCBzYW5zLXNlcmlmOyBmb250LXdlaWdodDogbm9ybWFsOyBmb250LXNpemU6MTZweDsgbGluZS1oZWlnaHQ6MjRweDsgdGV4dC1hbGlnbjpsZWZ0OyBwYWRkaW5nLWJvdHRvbTo1MHB4OyB3b3JkLWJyZWFrOm5vcm1hbDtkaXJlY3Rpb246bHRyOyIgZGlyPWx0cj5WaXNpdCB0aGUgPGEgaHJlZj1odHRwczovL25vdGlmaWNhdGlvbnMuZ29vZ2xlLmNvbS9nL3AvQU5pYW81cHZybFlaUEp6bEVYeTl6SExpWVlPa0I4M0wzbjNkQWlfMmpsbjF6cjBzN1lWa3I4MDV0NllENnZEREhOM1pQdXVyNDFsOWJ4SjFId1QyTG5ObDZQaUU5WWc2aEd1UzRMa1VoaDZia3RqRDJiM0VadVJKU1AtQjJTTlJEUjlMMnRVdjhCUEEzMXptdjE3dTVJVWVMbE05cnpNckdBYk1IZHBQUzJ5d0d1YThweVNKVVVBUTQ4b24tdTRoQlRzVldMRzBQQkpqN2hGc3l2TGZqMmlyOERweU1pNU5kZEpaXzZMdndNVXVPYkNBNzVJS3RXSGw0eEowTl9IOWluWFRMUDB5SzMwZDZJMmFMRThuUGI0Mnl2RHhDRnlUQ3JvY0RiWmJsSE54RkxXbnllWSB0YXJnZXQ9X2JsYW5rIHN0eWxlPSJjb2xvcjojMUE3M0U4OyB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgZm9udC13ZWlnaHQ6bm9ybWFsOyBib3JkZXI6MDsgd2hpdGUtc3BhY2U6IG5vd3JhcDsgIj5IZWxwIENlbnRlcjwvYT4gdG8gbGVhcm4gYWxsIGFib3V0IHlvdXIgbmV3IEdvb2dsZSBBY2NvdW50LjwvZGl2Pg0KPCEtLTwhW2VuZGlmXS0tPg0KPC90ZD4NCjx0ZCBzdHlsZT0iZm9udC1zaXplOjBwdDsgbGluZS1oZWlnaHQ6MHB0OyBwYWRkaW5nOjA7IG1hcmdpbjowOyIgd2lkdGg9MjQ-PC90ZD4NCjwvdHI-DQo8L3RhYmxlPg0KPC90ZD4NCjwvdHI-DQo8dHI-DQo8dGQ-DQo8dGFibGUgcm9sZT1wcmVzZW50YXRpb24gYm9yZGVyPTAgY2VsbHNwYWNpbmc9MCBjZWxscGFkZGluZz0wIGFsaWduPWNlbnRlciB3aWR0aD0xMDAlPg0KPHRyPjx0ZCBoZWlnaHQ9MzA-PC90ZD48L3RyPg0KPHRyPg0KPHRkIHdpZHRoPTEzNCBoZWlnaHQ9NDYgYWxpZ249Y2VudGVyIHN0eWxlPSJmb250LXNpemU6OHB4OyB3b3JkLWJyZWFrOm5vcm1hbDtkaXJlY3Rpb246bHRyOyIgZGlyPWx0cj4gPGFtcC1pbWcgcm9sZT1wcmVzZW50YXRpb24gY2xhc3M9Z29vZ2xlX21vYmlsZSB3aWR0aD04MiBoZWlnaHQ9MjYgc3JjPWh0dHBzOi8vd3d3LmdzdGF0aWMuY29tL2d1bWRyb3AvZmlsZXMvZ29vZ2xlLWxvZ28tZm9vdGVyLnBuZyBzdHlsZT0id2lkdGg6IDgycHg7IGhlaWdodDoyNnB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGJvcmRlcjogbm9uZTsiPg0KPC90ZD4NCjwvdHI-DQo8dHI-PHRkIGhlaWdodD0xOT48L3RkPjwvdHI-DQo8dHI-DQo8dGQgY2xhc3M9c3BhY2U2IGFsaWduPWNlbnRlciBzdHlsZT0iY29sb3I6IzVGNjM2ODsgZm9udC1mYW1pbHk6JnF1b3Q7Um9ib3RvJnF1b3Q7LCBPcGVuU2FucywgJnF1b3Q7T3BlbiBTYW5zJnF1b3Q7LCBBcmlhbCwgc2Fucy1zZXJpZjsgZm9udC1zaXplOjEycHg7IGxpbmUtaGVpZ2h0OjE4cHg7IG1hcmdpbjowOyB0ZXh0LWFsaWduOmNlbnRlcjsgd29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsiIGRpcj1sdHI-UmVwbGllcyB0byB0aGlzIGVtYWlsIGFyZW4mIzM5O3QgbW9uaXRvcmVkLiBJZiB5b3UgaGF2ZSBhIHF1ZXN0aW9uIGFib3V0IHlvdXIgbmV3IGFjY291bnQsIHRoZSA8YSBocmVmPWh0dHBzOi8vbm90aWZpY2F0aW9ucy5nb29nbGUuY29tL2cvcC9BTmlhbzVxX1pGRHQyZ0xSc0N2U3daYnZ2YXBmLUZqS1R5c3JDSGdhMlVtZzZqXzJGMFVqWVZ5NXZQZ2pXMEg2Q3M1ZGNoYlpUNjZ0d3BmNlFYNXVFLXdiWElCeGVXRVVyNWtRT3dlejlOOXA4QklCT1JJLUw2M2U0LWZabWsteWxtNVQySDN4YVVjNkVZLTljTlZQclRmaUNLbE1FemFBcTF5dlIwVU9HTjNuSGd5UlZKcWFMcXJGUHlSSm5fZ3RSRllFWmdxOWtwQV9ITEF3ZkNvOWtsTURnYjV6M1ZfM29EWEF5NmtmUE9HSktrbVBCQUY3WmdGYlJ5X0RrLW5zWWR1UE5CTVNJZ1FSYkgxNTlGS2VaUmoxSDdsRE5CNFJ4N0MtdE1MMU03UWhGa1ZhaHRGcnJiaG5yVGsgdGFyZ2V0PV9ibGFuayBzdHlsZT0iY29sb3I6IzFBNzNFODsgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IGZvbnQtd2VpZ2h0Om5vcm1hbDsgYm9yZGVyOjA7IHdoaXRlLXNwYWNlOiBub3dyYXA7ICI-SGVscCBDZW50ZXI8L2E-IGxpa2VseSBoYXMgdGhlIGFuc3dlciB5b3UmIzM5O3JlIGxvb2tpbmcgZm9yLjwvdGQ-DQo8L3RyPg0KPHRyPjx0ZCBoZWlnaHQ9MTk-PC90ZD48L3RyPg0KPHRyPg0KPHRkIGNsYXNzPXNwYWNlNiB2YWxpZ249bWlkZGxlIHN0eWxlPSJjb2xvcjojNUY2MzY4OyBmb250LWZhbWlseTomcXVvdDtSb2JvdG8mcXVvdDssIE9wZW5TYW5zLCAmcXVvdDtPcGVuIFNhbnMmcXVvdDssIEFyaWFsLCBzYW5zLXNlcmlmOyBmb250LXNpemU6MTBweDsgbGluZS1oZWlnaHQ6MTVweDsgbWFyZ2luOjA7IHRleHQtYWxpZ246Y2VudGVyIiBhbGlnbj1jZW50ZXI-DQo8c3BhbiBzdHlsZT0iZm9udC1zaXplOmluaGVyaXQ7IGNvbG9yOmluaGVyaXQ7IGZvbnQtd2VpZ2h0OmluaGVyaXQ7IGxpbmUtaGVpZ2h0OmluaGVyaXQ7IGZvbnQtZmFtaWx5OmluaGVyaXQ7Ij5Hb29nbGUgTExDPGJyPjE2MDAgQW1waGl0aGVhdHJlIFBhcmt3YXksPGJyPk1vdW50YWluIFZpZXcsIENBIDk0MDQzPC9zcGFuPg0KPGJyPjxicj48c3BhbiBzdHlsZT13b3JkLWJyZWFrOm5vcm1hbDtkaXJlY3Rpb246bHRyOyBkaXI9bHRyPlRoaXMgZW1haWwgd2FzIHNlbnQgdG8geW91IGJlY2F1c2UgeW91IGNyZWF0ZWQgYSBHb29nbGUgQWNjb3VudC48L3NwYW4-PC90ZD4NCjwvdHI-DQo8L3RhYmxlPg0KPC90ZD4NCjwvdHI-DQo8dHI-PHRkIGhlaWdodD0xOD48L3RkPjwvdHI-DQo8L3RhYmxlPg0KPGRpdiBzdHlsZT0iZGlzcGxheTpub25lOyB3aGl0ZS1zcGFjZTpub3dyYXA7IGZvbnQ6MTVweCBjb3VyaWVyOyBsaW5lLWhlaWdodDowOyI-DQrCoCDCoCDCoCDCoCDCoCDCoMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgDQrCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoA0KPC9kaXY-DQo8YW1wLWltZyBhbHQ9IiIgaGVpZ2h0PTEgd2lkdGg9MyBzcmM9aHR0cHM6Ly9ub3RpZmljYXRpb25zLmdvb2dsZS5jb20vZy9pbWcvQU5pYW81cFIxMS1Ya2VzTFJLY0wzYy1NcTJUT3BIVC1LdHFwcnBSUVQ0ODFqQTd3NnZJYktZdEE4WnZOS2p4VllRamJETTR3Vmk4OTZVQWVlRFhEdnRJLVFUUUh3OW53Ui1NVlhCUkZoekQzTlNMQlVDMTJ2SEdEMlVJVmtTQmp3bndLaU5tR0tybktCbXpTT1N3a2F4LWV6eG9qcjNmM2hEMVBUWEkuZ2lmPjwvYm9keT4NCjwvaHRtbD4="
        }
      },
      {
        "partId": "2",
        "mimeType": "text/html",
        "filename": "",
        "headers": [
          {
            "name": "Content-Type",
            "value": "text/html; charset=\"UTF-8\""
          },
          {
            "name": "Content-Transfer-Encoding",
            "value": "quoted-printable"
          }
        ],
        "body": {
          "size": 45697,
          "data": "IA0KPCFkb2N0eXBlIGh0bWwgcHVibGljICItIC8gL3czYyAvIC9kdGQgeGh0bWwgMS4wIHRyYW5zaXRpb25hbCAvIC9lbiIgImh0dHA6IC8gL3d3dy53My5vcmcgL3RyIC94aHRtbDEgL2R0ZCAveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPg0KDQogIDxodG1sIHhtbG5zPWh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwgeG1sbnM6dj11cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOnZtbCB4bWxuczpvPXVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206b2ZmaWNlOm9mZmljZSBsYW5nPWVuPg0KICAgIDxoZWFkPg0KCSAgPHRpdGxlPldlbGNvbWUgdG8geW91ciBHb29nbGUgQWNjb3VudDwvdGl0bGU-DQogICAgICA8bWV0YSBuYW1lPWZvcm1hdC1kZXRlY3Rpb24gY29udGVudD1hZGRyZXNzPW5vPg0KICAgICAgPG1ldGEgbmFtZT1mb3JtYXQtZGV0ZWN0aW9uIGNvbnRlbnQ9dGVsZXBob25lPW5vPg0KICAgICAgPG1ldGEgbmFtZT14LWFwcGxlLWRpc2FibGUtbWVzc2FnZS1yZWZvcm1hdHRpbmc-DQogICAgICA8bWV0YSBodHRwLWVxdWl2PUNvbnRlbnQtVHlwZSBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgiPg0KICAgICAgPG1ldGEgbmFtZT12aWV3cG9ydCBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSwgbWF4aW11bS1zY2FsZT0xIj4NCiAgICAgIDxsaW5rIGhyZWY9Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M_ZmFtaWx5PUdvb2dsZStTYW5zIHJlbD1zdHlsZXNoZWV0IHR5cGU9dGV4dC9jc3M-DQogICAgICA8c3R5bGUgdHlwZT10ZXh0L2Nzcz4NCiAgICAgIGJvZHl7dGV4dC1kZWNvcmF0aW9uOm5vbmU7fQ0KICAgICAgPC9zdHlsZT4NCiAgICAgIDxzdHlsZSB0eXBlPXRleHQvY3NzPg0KICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KXsNCiAgICAgICAgICAgICAuYm9keV93cmFwcGVye21pbi13aWR0aDo1NDBweCAhaW1wb3J0YW50O30NCiAgICAgICAgICAgICAuYm9keV9zaXple3dpZHRoOiAxMDAlICFpbXBvcnRhbnQ7fQ0KICAgICAgICAgICAgIC5zdWJoZWFkbGluZXtmb250LXNpemU6MjJweCFpbXBvcnRhbnQ7bGluZS1oZWlnaHQ6IDM1cHggIWltcG9ydGFudDt9DQogICAgICAgICAgICAgLmRldmljZV90eHR7Zm9udC1zaXplOjI2cHghaW1wb3J0YW50O30NCiAgICAgICAgICAgICAuZ29vZ2xlX21vYmlsZXt3aWR0aDoxMzVweCAhaW1wb3J0YW50OyBoZWlnaHQ6NDNweCAhaW1wb3J0YW50O30NCiAgICAgICAgICAgICAuYnVsYl9tb2JpbGV7d2lkdGg6MjJweCAhaW1wb3J0YW50OyBoZWlnaHQ6MzFweCAhaW1wb3J0YW50O3BhZGRpbmctdG9wOjIwcHggIWltcG9ydGFudDt9DQogICAgICAgICAgICAgLnNoaWVsZF9tb2JpbGV7d2lkdGg6MjRweCAhaW1wb3J0YW50OyBoZWlnaHQ6MzFweCAhaW1wb3J0YW50O30NCiAgICAgICAgICAgICAuZm1kX21vYmlsZXt3aWR0aDozMHB4ICFpbXBvcnRhbnQ7IGhlaWdodDoyNHB4ICFpbXBvcnRhbnQ7fQ0KICAgICAgICAgICAgIC5mYV9tb2JpbGV7d2lkdGg6MzBweCAhaW1wb3J0YW50OyBoZWlnaHQ6MzBweCAhaW1wb3J0YW50O30NCiAgICAgICAgICAgICAuYXJtNF9pbWdfaGVpZ2h0e2hlaWdodDogNjBweCAhaW1wb3J0YW50OyB3aWR0aDogMTkwcHggIWltcG9ydGFudDt9DQoNCiAgICAgICAgICAgICAuYnRuX21vZDJfbW9iaWxlMXtwYWRkaW5nOjlweCAyNHB4IDExcHggMjRweCAhaW1wb3J0YW50OyBib3JkZXItcmFkaXVzOiA0cHggIWltcG9ydGFudDt9DQogICAgICAgICAgICAgLmJ0bl9tb2QyX21vYmlsZTJ7cGFkZGluZzo5cHggMjRweCAxMXB4IDI0cHggIWltcG9ydGFudDsgYm9yZGVyLXJhZGl1czogNHB4ICFpbXBvcnRhbnQ7fQ0KICAgICAgICAgICAgIA0KICAgICAgICAgICAgIC5idG5fbW9kM19tb2JpbGV7cGFkZGluZzo5cHggMjRweCAxMXB4IDI0cHggIWltcG9ydGFudDsgYm9yZGVyLXJhZGl1czogNHB4ICFpbXBvcnRhbnQ7fQ0KICAgICAgICAgICAgIC5idG5fbW9kNF9tb2JpbGV7cGFkZGluZzo5cHggMjRweCAxMXB4IDI0cHggIWltcG9ydGFudDsgYm9yZGVyLXJhZGl1czogNHB4ICFpbXBvcnRhbnQ7fQ0KDQogICAgICAgICAgICAgLnNwYWNlMXtoZWlnaHQ6MTlweCAhaW1wb3J0YW50O30NCiAgICAgICAgICAgICAuc3BhY2Uye3BhZGRpbmc6M3B4IDM1cHggMCAzNXB4ICFpbXBvcnRhbnQ7fQ0KICAgICAgICAgICAgIC5zcGFjZTN7cGFkZGluZy10b3A6IDIycHggIWltcG9ydGFudDt9DQogICAgICAgICAgICAgLnNwYWNlNHtwYWRkaW5nOiA2cHggMCAwIDAgIWltcG9ydGFudDt9DQogICAgICAgICAgICAgLnNwYWNlNXtwYWRkaW5nLXRvcDogMTdweCAhaW1wb3J0YW50O30NCiAgICAgICAgICAgICAuc3BhY2U2e3BhZGRpbmc6MCAzNXB4IDAgMzVweCAhaW1wb3J0YW50O30NCiAgICAgICAgICAgICAuc3BhY2U3e3BhZGRpbmctcmlnaHQ6IDEwcHggIWltcG9ydGFudDt9DQogICAgICAgICAgICAgLmVud2lke21pbi13aWR0aDogMjE4cHggIWltcG9ydGFudDt9DQogICAgICAgICAgICAgLmVud2lkMnttaW4td2lkdGg6IDE3NnB4ICFpbXBvcnRhbnQ7fQ0KICAgICAgICAgICB9DQoNCiAgICAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi1yZXNvbHV0aW9uOiAyODhkcGkpIHsNCiAgICAgICAgICAgICAuZGV2aWNlX3R4dHtmb250LXNpemU6MjZweCFpbXBvcnRhbnQ7fQ0KICAgICAgICAgICB9DQogICAgICAgPC9zdHlsZT4NCiAgICAgIDxzdHlsZT4NCiAgICAgICAgQGZvbnQtZmFjZSB7DQogICAgICAgICAgZm9udC1mYW1pbHk6IE5vdG8gTmFza2ggQXJhYmljOw0KICAgICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDsNCiAgICAgICAgICBmb250LXdlaWdodDogNDAwOw0KICAgICAgICAgIHNyYzogdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vZWEvbm90b25hc2toYXJhYmljL3Y0L05vdG9OYXNraEFyYWJpYy1SZWd1bGFyLmVvdCk7DQogICAgICAgICAgc3JjOiB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9lYS9ub3RvbmFza2hhcmFiaWMvdjQvTm90b05hc2toQXJhYmljLVJlZ3VsYXIuZW90PyNpZWZpeCkgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLA0KICAgICAgICAgICAgICAgdXJsKGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vZWEvbm90b25hc2toYXJhYmljL3Y0L05vdG9OYXNraEFyYWJpYy1SZWd1bGFyLndvZmYyKSBmb3JtYXQoJ3dvZmYyJyksDQogICAgICAgICAgICAgICB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9lYS9ub3RvbmFza2hhcmFiaWMvdjQvTm90b05hc2toQXJhYmljLVJlZ3VsYXIud29mZikgZm9ybWF0KCd3b2ZmJyksDQogICAgICAgICAgICAgICB1cmwoaHR0cHM6Ly9mb250cy5nc3RhdGljLmNvbS9lYS9ub3RvbmFza2hhcmFiaWMvdjQvTm90b05hc2toQXJhYmljLVJlZ3VsYXIudHRmKSBmb3JtYXQoJ3RydWV0eXBlJyk7DQogICAgICAgIH0NCgkJPC9zdHlsZT4NCiAgICAgIDxzdHlsZT4NCiAgICA6cm9vdCB7DQogICAgY29sb3Itc2NoZW1lOiBsaWdodCBkYXJrOw0KICAgIHN1cHBvcnRlZC1jb2xvci1zY2hlbWVzOiBsaWdodCBkYXJrOw0KICB9DQogICAgQG1lZGlhIChwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyayApIHsNCiAgLyogQ3VzdG9tIERhcmsgTW9kZSBGb250IENvbG9ycyAqLw0KICB0ZCwgc3BhbiwgaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgaDcsIHAsIGRpdiB7DQogICAgY29sb3I6ICNmZmZmZmYgIWltcG9ydGFudDt9DQogICAgICBkaXYsIHRhYmxlLCB0ZCB7IGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7ICB9DQogICAgICBib2R5IHsgYmFja2dyb3VuZC1jb2xvcjogIzNDNDA0MyAhaW1wb3J0YW50OyB9DQogICAgICBhIHtjb2xvcjogIzFBNzNFOCAhaW1wb3J0YW50O30NCiAgICAgIC5ib2R5X3dyYXBwZXIge2JhY2tncm91bmQtY29sb3I6ICMzQzQwNDMgIWltcG9ydGFudDsgfQ0KICAgIH0NCiAgCTwvc3R5bGU-DQoNCiAgICA8IS0tW2lmIGd0ZSBtc28gOV0-DQo8eG1sPg0KICAgIDxvOk9mZmljZURvY3VtZW50U2V0dGluZ3M-DQogICAgPG86QWxsb3dQTkcvPg0KICAgIDxvOlBpeGVsc1BlckluY2g-OTY8L286UGl4ZWxzUGVySW5jaD4NCiAgICA8L286T2ZmaWNlRG9jdW1lbnRTZXR0aW5ncz4NCjwveG1sPg0KPCFbZW5kaWZdLS0-DQo8IS0tW2lmIG1zb10-DQogPHN0eWxlPmF7Y29sb3I6NDI4NWY0ICFpbXBvcnRhbnQ7IHRleHQtZGVjb3JhdGlvbjpub25lICFpbXBvcnRhbnQ7fTwvc3R5bGU-DQo8IVtlbmRpZl0tLT4NCjxzdHlsZT4NCiAgICA6cm9vdCB7DQogICAgY29sb3Itc2NoZW1lOiBsaWdodCBkYXJrOw0KICAgIHN1cHBvcnRlZC1jb2xvci1zY2hlbWVzOiBsaWdodCBkYXJrOw0KICB9DQogICAgQG1lZGlhIChwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyayApIHsNCiAgLyogQ3VzdG9tIERhcmsgTW9kZSBGb250IENvbG9ycyAqLw0KICB0ZCwgc3BhbiwgaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgaDcsIHAsIGRpdiB7DQogICAgY29sb3I6ICNmZmZmZmYgIWltcG9ydGFudDt9DQogICAgICBkaXYsIHRhYmxlLCB0ZCB7IGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7ICB9DQogICAgICBib2R5IHsgYmFja2dyb3VuZC1jb2xvcjogIzNDNDA0MyAhaW1wb3J0YW50OyB9DQogICAgICBhIHtjb2xvcjogIzFBNzNFOCAhaW1wb3J0YW50O30NCiAgICAgIC5iZ2Mge2JhY2tncm91bmQtY29sb3I6ICMzQzQwNDMgIWltcG9ydGFudDsgfQ0KICAgIH0NCjwvc3R5bGU-DQogICAgPC9oZWFkPg0KICAgICAgICANCiAgICAgICANCiAgICAgIA0KICAgICAgDQogICAgDQogICAgDQogICAgICAgICAgDQogICAgICAgICAgDQogICAgICAgICAgDQoNCg0KDQoNCg0KDQoNCjxib2R5IGJnY29sb3I9I2ZmZmZmZiBjbGFzcz1ib2R5X3dyYXBwZXI-DQogICAgICA8c3R5bGU-DQogICAgICAgICAgQG1lZGlhIHNjcmVlbntAZm9udC1mYWNle2ZvbnQtZmFtaWx5OidPcGVuIFNhbnMnO2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0Om5vcm1hbDtzcmM6bG9jYWwoJ09wZW4gU2FucyBMaWdodCcpLGxvY2FsKCdPcGVuU2Fucy1MaWdodCcpLHVybChodHRwOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9vcGVuc2Fucy92OS9EWEkxT1JIQ3BzUW0zVnA2bVhvYVRSYW1wdTVfN0NqSFc1c3B4b2VOM1ZzLndvZmYyKSBmb3JtYXQoJ3dvZmYyJyksdXJsKGh0dHA6Ly9mb250cy5nc3RhdGljLmNvbS9zL29wZW5zYW5zL3Y5L0RYSTFPUkhDcHNRbTNWcDZtWG9hVGFSRE96amlQY1luRm9vT1VHQ09zUmsud29mZikgZm9ybWF0KCd3b2ZmJyl9fQ0KICAgICAgICAgIC8qYm9keXtwYWRkaW5nOjA7bWFyZ2luOjB9QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjUyMHB4KXstd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6MTAwJX0qLw0KICAgICAgICAgIGJvZHl7dGV4dC1kZWNvcmF0aW9uOm5vbmU7fQ0KICAgICAgPC9zdHlsZT4NCiAgPGRpdiBzdHlsZT0iZm9udC1zaXplOiAwcHg7IGxpbmUtaGVpZ2h0OjBweDsgY29sb3I6ICNmZmZmZmY7IGRpc3BsYXk6IG5vbmU7Ij7CoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoMKgIMKgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgIMKgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqAgwqDCoCDCoCA8L2Rpdj4NCiAgICAgIDxjZW50ZXI-DQogICAgICAgIDx0YWJsZSByb2xlPXByZXNlbnRhdGlvbiBjbGFzcz1ib2R5X3NpemUgYm9yZGVyPTAgY2VsbHNwYWNpbmc9MCBjZWxscGFkZGluZz0wIGFsaWduPWNlbnRlciB3aWR0aD01MjAgYmdjb2xvcj0jZmZmZmZmIHN0eWxlPSJiYWNrZ3JvdW5kOiAjZmZmZmZmOyBtaW4td2lkdGg6IDUyMHB4OyAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOyAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsiPg0KICAgICAgICAgIDx0cj48dGQgYWxpZ249Y2VudGVyIHN0eWxlPSJwYWRkaW5nLXRvcDogMjBweDsiPiAgPGltZyByb2xlPXByZXNlbnRhdGlvbiBjbGFzcz1nb29nbGVfbW9iaWxlIHdpZHRoPTgyIGhlaWdodD0yNiBib3JkZXI9MCBzcmM9aHR0cHM6Ly93d3cuZ3N0YXRpYy5jb20vZ3VtZHJvcC9maWxlcy9nb29nbGUtbG9nby1oZWFkZXIucG5nIHN0eWxlPSJ3aWR0aDogODJweDsgaGVpZ2h0OjI2cHg7IHRleHQtYWxpZ246IGNlbnRlcjsgYm9yZGVyOiBub25lOyI-DQo8L3RkPjwvdHI-DQogICAgICAgICAgPHRyPjx0ZCBjbGFzcz1zcGFjZTEgaGVpZ2h0PTE1PjwvdGQ-PC90cj4NCiAgICAgICAgICA8dHI-DQogICAgICAgICAgICA8dGQgd2lkdGg9NDgwIHN0eWxlPSItd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOyAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgYm9yZGVyOiAycHggc29saWQgI0RGRTFFNTsgYm9yZGVyLXJhZGl1czogOHB4OyI-DQogICAgICAgICAgICAgIDx0YWJsZSByb2xlPXByZXNlbnRhdGlvbiBib3JkZXI9MCBjZWxsc3BhY2luZz0wIGNlbGxwYWRkaW5nPTAgd2lkdGg9MTAwJT4NCiAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICA8dGQgYWxpZ249Y2VudGVyPiAgICAgIAkJPGltZyByb2xlPXByZXNlbnRhdGlvbiBjbGFzcz10b3BfaW1nIHdpZHRoPTUxNiBib3JkZXI9MCBzcmM9aHR0cHM6Ly93d3cuZ3N0YXRpYy5jb20vZ3VtZHJvcC9maWxlcy9iYW5uZXIucG5nIHN0eWxlPSJ3aWR0aDogMTAwJTsgdGV4dC1hbGlnbjogY2VudGVyOyBib3JkZXI6IG5vbmU7Ij4NCiAgICA8L2E-DQo8L3RkPg0KICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgPHRkPg0KICAJCQkJICAgIDx0YWJsZSByb2xlPXByZXNlbnRhdGlvbiBib3JkZXI9MCBjZWxsc3BhY2luZz0wIGNlbGxwYWRkaW5nPTAgYWxpZ249Y2VudGVyIHdpZHRoPTEwMCU-DQogICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVtpZiBtc29dPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJjZW50ZXIiIGNsYXNzPSJncmVldGluZ19uYW1lIHNwYWNlNiIgc3R5bGU9J2NvbG9yOiMyMDIxMjQ7IGZvbnQtZmFtaWx5Okdvb2dsZSBTYW5zLCAiUm9ib3RvIiwgQXJpYWw7IGZvbnQtc2l6ZToyOHB4OyBmb250LXdlaWdodDpub3JtYWw7IGxpbmUtaGVpZ2h0OjQ0cHg7IG1hcmdpbjowOyBwYWRkaW5nOjAgODBweCAyMHB4IDgwcHg7IHRleHQtYWxpZ246Y2VudGVyO3dvcmQtYnJlYWs6bm9ybWFsO2RpcmVjdGlvbjpsdHI7JyBkaXI9Imx0ciI-DQogICAgICAgICAgICAgSGkgWW5hYiwNCjwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICA8IVtlbmRpZl0tLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1baWYgIW1zb10-PCEtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj1jZW50ZXIgY2xhc3M9ImdyZWV0aW5nX25hbWUgc3BhY2U2IiBzdHlsZT0iY29sb3I6IzIwMjEyNDsgZm9udC1mYW1pbHk6R29vZ2xlIFNhbnMsICZxdW90O1JvYm90byZxdW90OywgQXJpYWw7IGZvbnQtc2l6ZToyOHB4OyBmb250LXdlaWdodDpub3JtYWw7IGxpbmUtaGVpZ2h0OjQ0cHg7IG1hcmdpbjowOyBwYWRkaW5nOjAgODBweCAwIDgwcHg7IHRleHQtYWxpZ246Y2VudGVyOyB3b3JkLWJyZWFrOm5vcm1hbDtkaXJlY3Rpb246bHRyOyIgZGlyPWx0cj4NCiAgICAgICAgICAgICBIaSBZbmFiLA0KICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS08IVtlbmRpZl0tLT4NCiAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgIDwhLS1baWYgIW1zb10-PCEtLT4NCiAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICA8dGQgaGVpZ2h0PTE1IHN0eWxlPSJsaW5lLWhlaWdodDogNHB4OyBmb250LXNpemU6IDRweDsiPjwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICA8IS0tPCFbZW5kaWZdLS0-DQogICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJzdWJoZWFkbGluZSBzcGFjZTIiIGFsaWduPWNlbnRlciBzdHlsZT0iY29sb3I6IzNDNDA0MzsgZm9udC1mYW1pbHk6JnF1b3Q7Um9ib3RvJnF1b3Q7LCBPcGVuU2FucywgJnF1b3Q7T3BlbiBTYW5zJnF1b3Q7LCBBcmlhbCwgc2Fucy1zZXJpZjsgZm9udC1zaXplOjE2cHg7IGZvbnQtd2VpZ2h0Om5vcm1hbDsgbGluZS1oZWlnaHQ6MjRweDsgbWFyZ2luOjA7IHBhZGRpbmc6MCA3MHB4IDAgNzBweDsgdGV4dC1hbGlnbjpjZW50ZXI7IHdvcmQtYnJlYWs6bm9ybWFsO2RpcmVjdGlvbjpsdHI7IiBkaXI9bHRyPiBXZWxjb21lIHRvIEdvb2dsZS4gWW91ciBuZXcgYWNjb3VudCBjb21lcyB3aXRoIGFjY2VzcyB0byBHb29nbGUgcHJvZHVjdHMsIGFwcHMsIGFuZCBzZXJ2aWNlcy48L3RkPg0KICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJzdWJoZWFkbGluZSBzcGFjZTYiIGFsaWduPWNlbnRlciBzdHlsZT0iY29sb3I6IzNDNDA0MzsgZm9udC1mYW1pbHk6JnF1b3Q7Um9ib3RvJnF1b3Q7LCBPcGVuU2FucywgJnF1b3Q7T3BlbiBTYW5zJnF1b3Q7LCBBcmlhbCwgc2Fucy1zZXJpZjsgZm9udC1zaXplOjE2cHg7IGZvbnQtd2VpZ2h0Om5vcm1hbDsgbGluZS1oZWlnaHQ6MjRweDsgbWFyZ2luOjA7IHBhZGRpbmc6MCA4MHB4IDAgODBweDsgdGV4dC1hbGlnbjpjZW50ZXI7IHdvcmQtYnJlYWs6bm9ybWFsO2RpcmVjdGlvbjpsdHI7IiBkaXI9bHRyPiBIZXJlIGFyZSBhIGZldyB0aXBzIHRvIGdldCB5b3Ugc3RhcnRlZC48L3RkPg0KICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgPHRyPjx0ZCBoZWlnaHQ9NDU-PC90ZD48L3RyPg0KICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KCQkJCSAgPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICA8L3RhYmxlPg0KCQkgICAgPC90ZD4NCiAgICAgICAgICA8L3RyPg0KICAgICAgICAgIDx0cj48dGQgaGVpZ2h0PTI0PjwvdGQ-PC90cj4NCiAgICAgICAgICA8dHI-DQogICAgICAgICAgICA8dGQgd2lkdGg9NDgwIHN0eWxlPSItd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOyAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgYm9yZGVyOiAycHggc29saWQgI0RGRTFFNTsgYm9yZGVyLXJhZGl1czogOHB4OyI-DQogICAgICAgICAgICAgIDx0YWJsZSByb2xlPXByZXNlbnRhdGlvbiBib3JkZXI9MCBjZWxsc3BhY2luZz0wIGNlbGxwYWRkaW5nPTAgd2lkdGg9MTAwJT4NCiAgICAgICAgICA8dHI-DQo8dGQ-DQo8dGFibGUgcm9sZT1wcmVzZW50YXRpb24gYm9yZGVyPTAgY2VsbHNwYWNpbmc9MCBjZWxscGFkZGluZz0wIHdpZHRoPTEwMCU-DQogICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICA8dGQ-DQogICAgICAgICAgICAgICAgICAgIDx0YWJsZSByb2xlPXByZXNlbnRhdGlvbiBib3JkZXI9MCBjZWxsc3BhY2luZz0wIGNlbGxwYWRkaW5nPTAgYWxpZ249Y2VudGVyIHdpZHRoPTEwMCU-DQogICAgICAgICAgICAgICAgICAgICAgPHRyPjx0ZCBoZWlnaHQ9NTA-PC90ZD48L3RyPg0KICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj1jZW50ZXI-ICA8aW1nIHJvbGU9cHJlc2VudGF0aW9uIGNsYXNzPW1vZHVsZV9tb2JpbGUgd2lkdGg9NDggaGVpZ2h0PTQ4IGJvcmRlcj0wIHNyYz1odHRwczovL3d3dy5nc3RhdGljLmNvbS9pbWFnZXMvYnJhbmRpbmcvcHJvZHVjdC8yeC9lbWFpbF82NGRwLnBuZyBzdHlsZT0id2lkdGg6IDQ4cHg7IGhlaWdodDo0OHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGJvcmRlcjogbm9uZTsgZm9udC1zaXplOjlweDsiPg0KPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgPHRyPjx0ZCBoZWlnaHQ9MTU-PC90ZD48L3RyPg0KICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVtpZiBtc29dPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJjZW50ZXIiIGNsYXNzPSJkZXZpY2VfdHh0IHNwYWNlNiIgc3R5bGU9J2NvbG9yOiMyMDIxMjQ7IGZvbnQtZmFtaWx5Okdvb2dsZSBTYW5zLCBSb2JvdG8sIEFyaWFsOyBmb250LXNpemU6MThweDsgZm9udC13ZWlnaHQ6bm9ybWFsOyBsaW5lLWhlaWdodDozM3B4OyBtYXJnaW46MDsgcGFkZGluZzowIDgwcHggMjBweCA4MHB4OyB0ZXh0LWFsaWduOmNlbnRlcjsgd29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsnIGRpcj0ibHRyIj5HZXQgdGhlIG1vc3Qgb3V0IG9mIHlvdXIgR29vZ2xlIEFjY291bnQ8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPCFbZW5kaWZdLS0-DQogICAgICAgICAgICAgICAgICAgICAgICA8IS0tW2lmICFtc29dPjwhLS0-DQogICAgICAgICAgICAgICAgICAgICAgICA8dGQgYWxpZ249Y2VudGVyIGNsYXNzPSJkZXZpY2VfdHh0IHNwYWNlNiIgc3R5bGU9ImNvbG9yOiMyMDIxMjQ7IGZvbnQtZmFtaWx5Okdvb2dsZSBTYW5zLCBSb2JvdG8sIEFyaWFsOyBmb250LXNpemU6MThweDsgZm9udC13ZWlnaHQ6bm9ybWFsOyBsaW5lLWhlaWdodDozM3B4OyBtYXJnaW46MDsgcGFkZGluZzowIDgwcHggMCA4MHB4OyB0ZXh0LWFsaWduOmNlbnRlcjsgd29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsiIGRpcj1sdHI-R2V0IHRoZSBtb3N0IG91dCBvZiB5b3VyIEdvb2dsZSBBY2NvdW50PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS08IVtlbmRpZl0tLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgPCEtLVtpZiAhbXNvXT48IS0tPg0KICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgIDx0ZCBoZWlnaHQ9MTUgc3R5bGU9ImxpbmUtaGVpZ2h0OiA0cHg7IGZvbnQtc2l6ZTogNHB4OyI-PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgIDwhLS08IVtlbmRpZl0tLT4NCiAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ic3ViaGVhZGxpbmUgc3BhY2U2IiBhbGlnbj1jZW50ZXIgc3R5bGU9ImNvbG9yOiM1RjYzNjg7IGZvbnQtZmFtaWx5OlJvYm90bywgT3BlblNhbnMsIE9wZW4gU2FucywgQXJpYWwsIHNhbnMtc2VyaWY7IGZvbnQtc2l6ZToxNnB4OyBmb250LXdlaWdodDpub3JtYWw7IGxpbmUtaGVpZ2h0OjI0cHg7IG1hcmdpbjowOyBwYWRkaW5nOjAgODBweCAwIDgwcHg7IHRleHQtYWxpZ246Y2VudGVyOyB3b3JkLWJyZWFrOm5vcm1hbDtkaXJlY3Rpb246bHRyOyIgZGlyPWx0cj5XZSYjMzk7bGwgc2VuZCB5b3UgcGVyc29uYWxpemVkIHRpcHMsIG5ld3MgYW5kIHJlY29tbWVuZGF0aW9ucyBmcm9tIEdvb2dsZS48L3RkPg0KICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgIDx0cj48dGQgaGVpZ2h0PTMwPjwvdGQ-PC90cj4NCiAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz1zcGFjZTQgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgcGFkZGluZzogMDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgIAkJCQk8IS0tW2lmIG1zb10-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAk8djpyb3VuZHJlY3QgeG1sbnM6dj0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTp2bWwiIHhtbG5zOnc9InVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206b2ZmaWNlOndvcmQiIGhyZWY9Imh0dHBzOi8vbm90aWZpY2F0aW9ucy5nb29nbGUuY29tL2cvcC9BTmlhbzVveHBoWnNnTkFiaFIybmRUeGpha3BSVVc4d0ZVVEhTWWJLVWhUN3BsYTlUSGZRSWR5U0ZWZmUzWW1Pei1STzFTX1BJQTFhbHhPam1taE5VVVRMZExKRFppRjRmaUttYVYxZzF0akhJSFFCMHl0OG84N2JiTEFJd252UFpNcXZNbXNLTTExUWVwWFZzMWVKcEFvX3RVNFoxUXBrVEt1SnRFUkR0Umh5T1NmVUFjdTJLeE1CRFJHNHgtdFRlMWZJbks5WDl2blFydUxHd0p3aU04UlB0bmFWdmp6cDFiSHdqVlNQaEhJdmNzQ01ybW5URmFIZXZXakRacFRTVy1NblQwQzh1QTVRdnRORzNPTjNkbUR3SHlhbTFVclpiX1JveEt4U2k3QWFVNUpYTzF6R0g0TUtIUXgtaHFzQ0RyTENiTVRkWmxNM1hhSHZrV3QzMGxmeHgwamVFNzdjRTFHbGQ0Tk9MTnhuUTNnaHQ2SlBvaTdkeVlRbkpQalpTRDh0WFYxOE52U1dUaHE0WE5JQUpzTFNoYnNYMERwdk9aSW0wZ3dKQ0pXeTFiTVFZQXFoazFiSjVjZUtMQWhJWldTZGJrVWNHSFpmYmUwU1FPSUxnTWZFU1I2QjVfOWtxYUFZZEhJYm00Z253Q0FtX2l3WWxLenR3SkR5WVpyS1ZWWmFuWXBkQVNDX1k4TnN0ZENzcTNYaWszSERZY1hxaG5mMU1RM0xETEZSUGg2aDc5RlZHTlFFOGJ6bWNBeHRVS2YwX2lKZDJDQm96ZVo2TnBVcXdkUDhkM1BxYkFwZS1IUDJablJYck9JZGlnIiBzdHlsZT0iaGVpZ2h0OjQ4cHg7IHYtdGV4dC1hbmNob3I6bWlkZGxlOyB3aWR0aDoxODBweDsgIiBsaW5lLWhlaWdodDogMjJweDsgYXJjc2l6ZT0iMTAlIiBzdHJva2Vjb2xvcj0iIzFBNzNFOCIgZmlsbGNvbG9yPSIjMUE3M0U4OyI-DQoJCQkJCQkJCQk8dzphbmNob3Jsb2NrLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjZW50ZXIgc3R5bGU9ImNvbG9yOiNmZmZmZmY7Zm9udC1mYW1pbHk6R29vZ2xlIFNhbnMsIFJvYm90bywgQXJpYWw7IGZvbnQtc2l6ZToxNnB4OyBmb250LXdlaWdodDpub3JtYWw7IHdvcmQtYnJlYWs6bm9ybWFsOyBsaW5lLWhlaWdodDogMjJweDsgbXNvLWxpbmUtaGVpZ2h0LXJ1bGU6IGV4YWN0bHk7IGRpcmVjdGlvbjpsdHI7IiBkaXI9Imx0ciI-WWVzLCBrZWVwIG1lIHVwZGF0ZWQ8L2NlbnRlcj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdjpyb3VuZHJlY3Q-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhW2VuZGlmXS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1baWYgIW1zb10-PCEtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPWh0dHBzOi8vbm90aWZpY2F0aW9ucy5nb29nbGUuY29tL2cvcC9BTmlhbzVveHBoWnNnTkFiaFIybmRUeGpha3BSVVc4d0ZVVEhTWWJLVWhUN3BsYTlUSGZRSWR5U0ZWZmUzWW1Pei1STzFTX1BJQTFhbHhPam1taE5VVVRMZExKRFppRjRmaUttYVYxZzF0akhJSFFCMHl0OG84N2JiTEFJd252UFpNcXZNbXNLTTExUWVwWFZzMWVKcEFvX3RVNFoxUXBrVEt1SnRFUkR0Umh5T1NmVUFjdTJLeE1CRFJHNHgtdFRlMWZJbks5WDl2blFydUxHd0p3aU04UlB0bmFWdmp6cDFiSHdqVlNQaEhJdmNzQ01ybW5URmFIZXZXakRacFRTVy1NblQwQzh1QTVRdnRORzNPTjNkbUR3SHlhbTFVclpiX1JveEt4U2k3QWFVNUpYTzF6R0g0TUtIUXgtaHFzQ0RyTENiTVRkWmxNM1hhSHZrV3QzMGxmeHgwamVFNzdjRTFHbGQ0Tk9MTnhuUTNnaHQ2SlBvaTdkeVlRbkpQalpTRDh0WFYxOE52U1dUaHE0WE5JQUpzTFNoYnNYMERwdk9aSW0wZ3dKQ0pXeTFiTVFZQXFoazFiSjVjZUtMQWhJWldTZGJrVWNHSFpmYmUwU1FPSUxnTWZFU1I2QjVfOWtxYUFZZEhJYm00Z253Q0FtX2l3WWxLenR3SkR5WVpyS1ZWWmFuWXBkQVNDX1k4TnN0ZENzcTNYaWszSERZY1hxaG5mMU1RM0xETEZSUGg2aDc5RlZHTlFFOGJ6bWNBeHRVS2YwX2lKZDJDQm96ZVo2TnBVcXdkUDhkM1BxYkFwZS1IUDJablJYck9JZGlnIHRhcmdldD1fYmxhbmsgZGlyPWx0ciBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Ij4NCjx0YWJsZSByb2xlPXByZXNlbnRhdGlvbiBjZWxsc3BhY2luZz0wIGNlbGxwYWRkaW5nPTAgYWxpZ249Y2VudGVyPg0KICAgIDx0ciBzdHlsZT0icGFkZGluZzogMDsgbWFyZ2luOiAwOyBmb250LXNpemU6IDA7IGxpbmUtaGVpZ2h0OiAwOyI-PHRkIHN0eWxlPSJib3JkZXItdG9wOiA0cHg7IGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDRweDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNHB4O2Rpc3BsYXk6aW5saW5lLWJsb2NrOyAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6bm9uZTttc28taGlkZTphbGw7dGV4dC1hbGlnbjogY2VudGVyOyI-PC90ZD48L3RyPg0KICAgICAgICA8dHI-PHRkIGNsYXNzPSJzdWJoZWFkbGluZSBidG5fbW9kMl9tb2JpbGUyIGVud2lkIGVud2lkMyIgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6IzFBNzNFODs7IGJvcmRlcjoxcHggc29saWQgIzFBNzNFODsgYm9yZGVyLXJhZGl1czo0cHg7IGNvbG9yOiNmZmZmZmY7IGRpc3BsYXk6aW5saW5lLWJsb2NrOyBmb250LWZhbWlseTpHb29nbGUgU2FucywgUm9ib3RvLCBBcmlhbDsgZm9udC1zaXplOjE2cHg7IGxpbmUtaGVpZ2h0OjI1cHg7IHRleHQtZGVjb3JhdGlvbjpub25lOyAgcGFkZGluZzo3cHggMjRweCA3cHggMjRweDsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0Om5vbmU7IG1zby1oaWRlOmFsbDsgZm9udC13ZWlnaHQ6NTAwOyB0ZXh0LWFsaWduOiBjZW50ZXI7IHdvcmQtYnJlYWs6bm9ybWFsOyAgZGlyZWN0aW9uOmx0cjsgbWluLXdpZHRoOiAxNTlweDsiPg0KWWVzLCBrZWVwIG1lIHVwZGF0ZWQNCjwvdGQ-PC90cj4NCiAgICA8dHIgc3R5bGU9InBhZGRpbmc6IDA7IG1hcmdpbjogMDsgZm9udC1zaXplOiAwOyBsaW5lLWhlaWdodDogMDsiPjx0ZCBzdHlsZT0iYm9yZGVyLXRvcDogM3B4OyBkaXNwbGF5OmlubGluZS1ibG9jaztib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiA0cHg7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDRweDsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0Om5vbmU7bXNvLWhpZGU6YWxsO3RleHQtYWxpZ246IGNlbnRlcjsiPjwvdGQ-PC90cj4NCjwvdGFibGU-PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS08IVtlbmRpZl0tLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY-DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgPC90cj4NCg0KICAgICAgICAgICAgICAgICA8dHI-PHRkIGhlaWdodD01MD48L3RkPjwvdHI-DQogICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgIDwvdHI-DQoNCjwvdGFibGU-DQo8L3RkPg0KPC90cj4NCiAgICAgICAgICAgICAgPC90YWJsZT4NCgkJICAgIDwvdGQ-DQogICAgICAgICAgPC90cj4NCiAgICAgICAgICA8dHI-PHRkIGhlaWdodD0yND48L3RkPjwvdHI-DQogICAgICAgICAgPHRyPg0KICAgICAgICAgICAgPHRkIHdpZHRoPTQ4MCBzdHlsZT0iLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7IC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTsgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IGJvcmRlcjogMnB4IHNvbGlkICNERkUxRTU7IGJvcmRlci1yYWRpdXM6IDhweDsiPg0KICAgICAgICAgICAgICA8dGFibGUgcm9sZT1wcmVzZW50YXRpb24gYm9yZGVyPTAgY2VsbHNwYWNpbmc9MCBjZWxscGFkZGluZz0wIHdpZHRoPTEwMCU-DQogICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRhYmxlIHJvbGU9cHJlc2VudGF0aW9uIGJvcmRlcj0wIGNlbGxzcGFjaW5nPTAgY2VsbHBhZGRpbmc9MCBhbGlnbj1jZW50ZXIgd2lkdGg9MTAwJT4NCiAgICAgICAgICAgICAgICAgICAgICA8dHI-PHRkIGhlaWdodD01MD48L3RkPjwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPWNlbnRlcj4gICAgPGltZyByb2xlPXByZXNlbnRhdGlvbiBjbGFzcz1tb2R1bGVfbW9iaWxlIHdpZHRoPTQ4IGhlaWdodD00OCBib3JkZXI9MCBzcmM9aHR0cHM6Ly93d3cuZ3N0YXRpYy5jb20vZ3VtZHJvcC9maWxlcy9nb29nbGUtbG9nby5wbmcgc3R5bGU9IndpZHRoOiA0OHB4OyBoZWlnaHQ6NDhweDsgdGV4dC1hbGlnbjogY2VudGVyOyBib3JkZXI6IG5vbmU7IGZvbnQtc2l6ZTo5cHg7Ij4NCjwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgIDx0cj48dGQgaGVpZ2h0PTE1PjwvdGQ-PC90cj4NCiAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1baWYgbXNvXT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIiBjbGFzcz0iZGV2aWNlX3R4dCBzcGFjZTYiIHN0eWxlPSdjb2xvcjojMjAyMTI0OyBmb250LWZhbWlseTpHb29nbGUgU2FucywgIlJvYm90byIsIEFyaWFsOyBmb250LXNpemU6MThweDsgZm9udC13ZWlnaHQ6bm9ybWFsOyBsaW5lLWhlaWdodDozM3B4OyBtYXJnaW46MDsgcGFkZGluZzowIDgwcHggMjBweCA4MHB4OyB0ZXh0LWFsaWduOmNlbnRlcjsgd29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsnIGRpcj0ibHRyIj5TdGF5IGluIHRoZSBrbm93IHdpdGggdGhlIEdvb2dsZSBhcHA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPCFbZW5kaWZdLS0-DQogICAgICAgICAgICAgICAgICAgICAgICA8IS0tW2lmICFtc29dPjwhLS0-DQogICAgICAgICAgICAgICAgICAgICAgICA8dGQgYWxpZ249Y2VudGVyIGNsYXNzPSJkZXZpY2VfdHh0IHNwYWNlNiIgc3R5bGU9ImNvbG9yOiMyMDIxMjQ7IGZvbnQtZmFtaWx5Okdvb2dsZSBTYW5zLCAmcXVvdDtSb2JvdG8mcXVvdDssIEFyaWFsOyBmb250LXNpemU6MThweDsgZm9udC13ZWlnaHQ6bm9ybWFsOyBsaW5lLWhlaWdodDozM3B4OyBtYXJnaW46MDsgcGFkZGluZzowIDgwcHggMCA4MHB4OyB0ZXh0LWFsaWduOmNlbnRlcjsgd29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsiIGRpcj1sdHI-U3RheSBpbiB0aGUga25vdyB3aXRoIHRoZSBHb29nbGUgYXBwPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS08IVtlbmRpZl0tLT4NCiAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgPCEtLVtpZiAhbXNvXT48IS0tPg0KICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBoZWlnaHQ9MTUgc3R5bGU9ImxpbmUtaGVpZ2h0OiA0cHg7IGZvbnQtc2l6ZTogNHB4OyI-PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgIDwhLS08IVtlbmRpZl0tLT4NCiAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ic3ViaGVhZGxpbmUgc3BhY2U2IiBhbGlnbj1jZW50ZXIgc3R5bGU9ImNvbG9yOiM1RjYzNjg7IGZvbnQtZmFtaWx5OiZxdW90O1JvYm90byZxdW90OywgT3BlblNhbnMsICZxdW90O09wZW4gU2FucyZxdW90OywgQXJpYWwsIHNhbnMtc2VyaWY7IGZvbnQtc2l6ZToxNnB4OyBmb250LXdlaWdodDpub3JtYWw7IGxpbmUtaGVpZ2h0OjI0cHg7IG1hcmdpbjowOyBwYWRkaW5nOjAgODBweCAwIDgwcHg7IHRleHQtYWxpZ246Y2VudGVyOyB3b3JkLWJyZWFrOm5vcm1hbDtkaXJlY3Rpb246bHRyOyIgZGlyPWx0cj5GaW5kIHF1aWNrIGFuc3dlcnMsIGV4cGxvcmUgeW91ciBpbnRlcmVzdHMsIGFuZCBzdGF5IHVwIHRvIGRhdGUuPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICA8dHI-PHRkIGhlaWdodD0zMD48L3RkPjwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9c3BhY2U0IHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IHBhZGRpbmc6IDA7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAJCQkJPCEtLVtpZiBtc29dPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAJPHY6cm91bmRyZWN0IHhtbG5zOnY9InVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206dm1sIiB4bWxuczp3PSJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOm9mZmljZTp3b3JkIiBocmVmPSJodHRwczovL25vdGlmaWNhdGlvbnMuZ29vZ2xlLmNvbS9nL3AvQU5pYW81cGxDZEtGbWxUOUllUHNrbFNFbEZfOGhGYThER213cGhWU3R4NjdCdmVNRzNDaUNnS3pkbnVlMTN2bHNhRmlRMFlEWmNVS3JRMVJUQ25tSlRhbzJMT29Bc09vQmxMdGlSb1JsRHdWcDBTRzlTRzZzeGU0amM3Tm55QzQydlFVTjJKUmdjMk1abVUzWHMzS0pqOHJfVC1YNV9jdmxEOUtFU1J4V0xVdFRvaGNmMFVYSHFFY3JqaExod05WWW5zakI1TnVXUkRueFE1OW5qRVlnWWpaTmxTc0c3Rjh4bDdGM3I0V251aVJuMm53RTlkbjV4djdIMWRfYmJUU0s2YURSanFUcmhUcFpFZ3VYUG5RZW5IaGRoN3liRXdNUkJBMXVSRjA2VzBTV0NGYllKYlhWOGFGYVRYd1NYR1NNdU91bEt6N29EcW5DRHJkcXpaWXdJN0pxUlJjYXJfVHdtSWcteklwOXZWV2V6Wng1VXJ0UThSZTVaanciIHN0eWxlPSJoZWlnaHQ6NDhweDsgdi10ZXh0LWFuY2hvcjptaWRkbGU7IHdpZHRoOjE4OHB4OyIgYXJjc2l6ZT0iMTAlIiBzdHJva2Vjb2xvcj0iIzFBNzNFOCIgZmlsbGNvbG9yPSIjMUE3M0U4OyI-DQoJCQkJCQkJCQk8dzphbmNob3Jsb2NrLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjZW50ZXIgc3R5bGU9ImNvbG9yOiNmZmZmZmY7Zm9udC1mYW1pbHk6R29vZ2xlIFNhbnMsIFJvYm90bywgQXJpYWw7IGZvbnQtc2l6ZToxNnB4OyBmb250LXdlaWdodDpub3JtYWw7IHdvcmQtYnJlYWs6bm9ybWFsO2RpcmVjdGlvbjpsdHI7IiBkaXI9Imx0ciI-VHJ5IGl0PC9jZW50ZXI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Y6cm91bmRyZWN0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IVtlbmRpZl0tLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tW2lmICFtc29dPjwhLS0-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1odHRwczovL25vdGlmaWNhdGlvbnMuZ29vZ2xlLmNvbS9nL3AvQU5pYW81cGxDZEtGbWxUOUllUHNrbFNFbEZfOGhGYThER213cGhWU3R4NjdCdmVNRzNDaUNnS3pkbnVlMTN2bHNhRmlRMFlEWmNVS3JRMVJUQ25tSlRhbzJMT29Bc09vQmxMdGlSb1JsRHdWcDBTRzlTRzZzeGU0amM3Tm55QzQydlFVTjJKUmdjMk1abVUzWHMzS0pqOHJfVC1YNV9jdmxEOUtFU1J4V0xVdFRvaGNmMFVYSHFFY3JqaExod05WWW5zakI1TnVXUkRueFE1OW5qRVlnWWpaTmxTc0c3Rjh4bDdGM3I0V251aVJuMm53RTlkbjV4djdIMWRfYmJUU0s2YURSanFUcmhUcFpFZ3VYUG5RZW5IaGRoN3liRXdNUkJBMXVSRjA2VzBTV0NGYllKYlhWOGFGYVRYd1NYR1NNdU91bEt6N29EcW5DRHJkcXpaWXdJN0pxUlJjYXJfVHdtSWcteklwOXZWV2V6Wng1VXJ0UThSZTVaancgdGFyZ2V0PV9ibGFuayBkaXI9bHRyIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IGRpc3BsYXk6IGlubGluZS1ibG9jazsiPg0KPHRhYmxlIHJvbGU9cHJlc2VudGF0aW9uIGNlbGxzcGFjaW5nPTAgY2VsbHBhZGRpbmc9MCBhbGlnbj1jZW50ZXI-DQogICAgPHRyIHN0eWxlPSJwYWRkaW5nOiAwOyBtYXJnaW46IDA7IGZvbnQtc2l6ZTogMDsgbGluZS1oZWlnaHQ6IDA7Ij48dGQgc3R5bGU9ImJvcmRlci10b3A6IDRweDsgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogNHB4O2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA0cHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7IC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDpub25lO21zby1oaWRlOmFsbDt0ZXh0LWFsaWduOiBjZW50ZXI7Ij48L3RkPjwvdHI-DQogICAgICAgIDx0cj48dGQgY2xhc3M9InN1YmhlYWRsaW5lIGJ0bl9tb2QyX21vYmlsZTIgZW53aWQiIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiMxQTczRTg7OyBib3JkZXI6MXB4IHNvbGlkICMxQTczRTg7IGJvcmRlci1yYWRpdXM6NHB4OyBjb2xvcjojZmZmZmZmOyBkaXNwbGF5OmlubGluZS1ibG9jazsgZm9udC1mYW1pbHk6R29vZ2xlIFNhbnMsIFJvYm90bywgQXJpYWw7IGZvbnQtc2l6ZToxNnB4OyBsaW5lLWhlaWdodDoyNXB4OyB0ZXh0LWRlY29yYXRpb246bm9uZTsgIHBhZGRpbmc6N3B4IDI0cHggN3B4IDI0cHg7IC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDpub25lOyBtc28taGlkZTphbGw7IGZvbnQtd2VpZ2h0OjUwMDsgdGV4dC1hbGlnbjogY2VudGVyOyB3b3JkLWJyZWFrOm5vcm1hbDsgIGRpcmVjdGlvbjpsdHI7IG1pbi13aWR0aDogMTU5cHg7Ij4NClRyeSBpdA0KPC90ZD48L3RyPg0KICAgIDx0ciBzdHlsZT0icGFkZGluZzogMDsgbWFyZ2luOiAwOyBmb250LXNpemU6IDA7IGxpbmUtaGVpZ2h0OiAwOyI-PHRkIHN0eWxlPSJib3JkZXItdG9wOiAzcHg7IGRpc3BsYXk6aW5saW5lLWJsb2NrO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDRweDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNHB4OyAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6bm9uZTttc28taGlkZTphbGw7dGV4dC1hbGlnbjogY2VudGVyOyI-PC90ZD48L3RyPg0KPC90YWJsZT48L2E-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLTwhW2VuZGlmXS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KDQogICAgICAgICAgICAgICAgICAgICAgPHRyPjx0ZCBoZWlnaHQ9NTA-PC90ZD48L3RyPg0KICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICA8L3RhYmxlPg0KCQkgICAgIDwvdGQ-DQogICAgICAgICAgPC90cj4NCg0KICAgICAgICAgIDx0cj48dGQgaGVpZ2h0PTI0PjwvdGQ-PC90cj4NCiAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICA8dGQgd2lkdGg9NDgwIHN0eWxlPSItd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOyAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgYm9yZGVyOiAycHggc29saWQgI0RGRTFFNTsgYm9yZGVyLXJhZGl1czogOHB4OyI-DQogICAgICAgICAgICAgICAgICAgIDx0YWJsZSByb2xlPXByZXNlbnRhdGlvbiBib3JkZXI9MCBjZWxsc3BhY2luZz0wIGNlbGxwYWRkaW5nPTAgYWxpZ249Y2VudGVyIHdpZHRoPTEwMCU-DQogICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPWNlbnRlcj4gIAk8aW1nIHJvbGU9cHJlc2VudGF0aW9uIGNsYXNzPXRvcF9pbWcgd2lkdGg9NTE0IGJvcmRlcj0wIHNyYz1odHRwczovL3d3dy5nc3RhdGljLmNvbS9ndW1kcm9wL2ZpbGVzL2FwcHMtaWNvbnMtaW1hZ2UtMngtd2Q5NzJweC1odDM5MHB4LnBuZyBzdHlsZT0id2lkdGg6IDEwMCU7IHRleHQtYWxpZ246IGNlbnRlcjsgYm9yZGVyOiBub25lOyBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA4cHg7IGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA4cHg7Ij4NCg0KCQkJCTwvdGQ-DQogICAgICAgICAgICAgICAgPC90cj4NCg0KICAgICAgICAgICAgICAgICAgICAgIDx0cj48dGQgaGVpZ2h0PTE1PjwvdGQ-PC90cj4NCiAgICAgICAgICAgICAgICAgICAgICA8dHI-DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1baWYgbXNvXT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIiBjbGFzcz0iZGV2aWNlX3R4dCBzcGFjZTYiIHN0eWxlPSdjb2xvcjojMjAyMTI0OyBmb250LWZhbWlseTpHb29nbGUgU2FucywgIlJvYm90byIsIEFyaWFsOyBmb250LXNpemU6MThweDsgZm9udC13ZWlnaHQ6bm9ybWFsOyBsaW5lLWhlaWdodDozM3B4OyBtYXJnaW46MDsgcGFkZGluZzowIDgwcHggMjBweCA4MHB4OyB0ZXh0LWFsaWduOmNlbnRlcjsgd29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsnIGRpcj0ibHRyIj5Nb3JlIGZyb20gR29vZ2xlPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhW2VuZGlmXS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVtpZiAhbXNvXT48IS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPWNlbnRlciBjbGFzcz0iZGV2aWNlX3R4dCBzcGFjZTYiIHN0eWxlPSJjb2xvcjojMjAyMTI0OyBmb250LWZhbWlseTpHb29nbGUgU2FucywgJnF1b3Q7Um9ib3RvJnF1b3Q7LCBBcmlhbDsgZm9udC1zaXplOjE4cHg7IGZvbnQtd2VpZ2h0Om5vcm1hbDsgbGluZS1oZWlnaHQ6MzNweDsgbWFyZ2luOjA7IHBhZGRpbmc6MCA4MHB4IDAgODBweDsgdGV4dC1hbGlnbjpjZW50ZXI7IHdvcmQtYnJlYWs6bm9ybWFsO2RpcmVjdGlvbjpsdHI7IiBkaXI9bHRyPk1vcmUgZnJvbSBHb29nbGU8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLTwhW2VuZGlmXS0tPg0KICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgPCEtLVtpZiAhbXNvXT48IS0tPg0KICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBoZWlnaHQ9MTUgc3R5bGU9ImxpbmUtaGVpZ2h0OiA0cHg7IGZvbnQtc2l6ZTogNHB4OyI-PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgIDwhLS08IVtlbmRpZl0tLT4NCiAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0ic3ViaGVhZGxpbmUgc3BhY2U2IiBhbGlnbj1jZW50ZXIgc3R5bGU9ImNvbG9yOiM1RjYzNjg7IGZvbnQtZmFtaWx5OiZxdW90O1JvYm90byZxdW90OywgT3BlblNhbnMsICZxdW90O09wZW4gU2FucyZxdW90OywgQXJpYWwsIHNhbnMtc2VyaWY7IGZvbnQtc2l6ZToxNnB4OyBmb250LXdlaWdodDpub3JtYWw7IGxpbmUtaGVpZ2h0OjI0cHg7IG1hcmdpbjowOyBwYWRkaW5nOjAgODBweCAwIDgwcHg7IHRleHQtYWxpZ246Y2VudGVyOyB3b3JkLWJyZWFrOm5vcm1hbDtkaXJlY3Rpb246bHRyOyIgZGlyPWx0cj5EaXNjb3ZlciB0aGUgbGF0ZXN0IGFwcHMgZnJvbSBHb29nbGUuPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgIDx0cj48dGQgaGVpZ2h0PTMwPjwvdGQ-PC90cj4NCiAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj1jZW50ZXIgdmFsaWduPXRvcD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSByb2xlPXByZXNlbnRhdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBwYWRkaW5nLXRvcDogMDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVtpZiBtc29dPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2OnJvdW5kcmVjdCB4bWxuczp2PSJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOnZtbCIgeG1sbnM6dz0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTpvZmZpY2U6d29yZCIgaHJlZj0iaHR0cHM6Ly9ub3RpZmljYXRpb25zLmdvb2dsZS5jb20vZy9wL0FOaWFvNXJELTVkakE4QnNpaFhnM3NWV09pN013NXNjTWl6QmZIbkxZN2FHWF9RaXdWNXdlT1MwN3pudnJCS1FOQ29uZG5hcGNzWlJPT0p6TDlVX0t0WGNqVjdGbHVlcXBGYkM0WmRxdFZvVmhTaGI1WlktaFR3MXRQYTJlaExxdzJRZ1JfMFkteGR2QlVkZTNiS29KOXVaYnZQdmhjVEt2b1dkWW40UzhxX2VwS3djaFRLSWlsWVR1TXNMYkdXU0MteFlwMUxVbWJjZ1FuaG5tdE9nS2pzR2RPOEVLQnowNkFXdlQtSDJvYUxjbk5RQzdCLUN1Y0JzZnVmR0x3cVZLN1RqVUJWZTRhVXBPcXRjMy1yWE1IXzUyOXNVTGRDUHhTaS1fdmhkNlVMZmtWbXpSSzZfMkZGQV9EQkxZTDN2QklqbXdSMEFKbTl2WllaZlpSMVRpeWJUQmxIQTliS2R4bnF2djltdi1EcjlWSGFyaWw5aDFiSG15cTlkVGR0R25POE9YUDZwVFlCUW8ycmVxTzljYmNZT2xtUFRjRjVxaEhjaEo5eTVRYVdhWkNaNkNiNUw3bWhSR1lXdFk1S201OVJFTHZlSVZqVGJjYl9DbnRsNnNkWHI5YWE0b0FvdkptaloyMFRFbnJOSUhMcnQyY0g0T1BMZC16UjQxMDRDSVBUX1l5eWNDR2RpY3l5SHFqcFcyYjhkODdQVDJfTGFzaF9KNDFYT093UmRva2dVc3Vrb1NkdkEzbXZQemwwSkg1SGtVZ1VHOWs2Rk9JSTRpZzRfam5oM0VOSmc0bHBwaDU2Q0pCZUk5ajAycFJNaXRxaVJoendsUzlMdnYxVTU4eGxDZjVsbTEtXzhXTEVkSFhCUmUtZzUxTmY0aEEiIHN0eWxlPSJoZWlnaHQ6NDhweDsgdi10ZXh0LWFuY2hvcjptaWRkbGU7IHdpZHRoOjE4ODsiIGFyY3NpemU9IjEwJSIgc3Ryb2tlY29sb3I9IiMxQTczRTgiIGZpbGxjb2xvcj0iIzFBNzNFODsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx3OmFuY2hvcmxvY2svPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxjZW50ZXIgc3R5bGU9ImNvbG9yOiNmZmZmZmY7Zm9udC1mYW1pbHk6R29vZ2xlIFNhbnMsIFJvYm90bywgQXJpYWw7IGZvbnQtc2l6ZToxNnB4OyBmb250LXdlaWdodDpub3JtYWw7IHdvcmQtYnJlYWs6bm9ybWFsO2RpcmVjdGlvbjpsdHI7IiBkaXI9Imx0ciI-Rm9yIEFuZHJvaWQ8L2NlbnRlcj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Y6cm91bmRyZWN0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IVtlbmRpZl0tLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1baWYgIW1zb10-PCEtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPWh0dHBzOi8vbm90aWZpY2F0aW9ucy5nb29nbGUuY29tL2cvcC9BTmlhbzVyRC01ZGpBOEJzaWhYZzNzVldPaTdNdzVzY01pekJmSG5MWTdhR1hfUWl3VjV3ZU9TMDd6bnZyQktRTkNvbmRuYXBjc1pST09Kekw5VV9LdFhjalY3Rmx1ZXFwRmJDNFpkcXRWb1ZoU2hiNVpZLWhUdzF0UGEyZWhMcXcyUWdSXzBZLXhkdkJVZGUzYktvSjl1WmJ2UHZoY1RLdm9XZFluNFM4cV9lcEt3Y2hUS0lpbFlUdU1zTGJHV1NDLXhZcDFMVW1iY2dRbmhubXRPZ0tqc0dkTzhFS0J6MDZBV3ZULUgyb2FMY25OUUM3Qi1DdWNCc2Z1ZkdMd3FWSzdUalVCVmU0YVVwT3F0YzMtclhNSF81MjlzVUxkQ1B4U2ktX3ZoZDZVTGZrVm16Uks2XzJGRkFfREJMWUwzdkJJam13UjBBSm05dlpZWmZaUjFUaXliVEJsSEE5YktkeG5xdnY5bXYtRHI5VkhhcmlsOWgxYkhteXE5ZFRkdEduTzhPWFA2cFRZQlFvMnJlcU85Y2JjWU9sbVBUY0Y1cWhIY2hKOXk1UWFXYVpDWjZDYjVMN21oUkdZV3RZNUttNTlSRUx2ZUlWalRiY2JfQ250bDZzZFhyOWFhNG9Bb3ZKbWpaMjBURW5yTklITHJ0MmNINE9QTGQtelI0MTA0Q0lQVF9ZeXljQ0dkaWN5eUhxanBXMmI4ZDg3UFQyX0xhc2hfSjQxWE9Pd1Jkb2tnVXN1a29TZHZBM212UHpsMEpINUhrVWdVRzlrNkZPSUk0aWc0X2puaDNFTkpnNGxwcGg1NkNKQmVJOWowMnBSTWl0cWlSaHp3bFM5THZ2MVU1OHhsQ2Y1bG0xLV84V0xFZEhYQlJlLWc1MU5mNGhBIHRhcmdldD1fYmxhbmsgZGlyPWx0ciBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Ij4NCjx0YWJsZSByb2xlPXByZXNlbnRhdGlvbiBjZWxsc3BhY2luZz0wIGNlbGxwYWRkaW5nPTAgYWxpZ249Y2VudGVyPg0KICAgIDx0ciBzdHlsZT0icGFkZGluZzogMDsgbWFyZ2luOiAwOyBmb250LXNpemU6IDA7IGxpbmUtaGVpZ2h0OiAwOyI-PHRkIHN0eWxlPSJib3JkZXItdG9wOiA0cHg7IGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDRweDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNHB4O2Rpc3BsYXk6aW5saW5lLWJsb2NrOyAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6bm9uZTttc28taGlkZTphbGw7dGV4dC1hbGlnbjogY2VudGVyOyI-PC90ZD48L3RyPg0KICAgICAgICA8dHI-PHRkIGNsYXNzPSJzdWJoZWFkbGluZSBidG5fbW9kM19tb2JpbGUgZW53aWQyIiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjojMUE3M0U4OzsgYm9yZGVyOjFweCBzb2xpZCAjMUE3M0U4OyBib3JkZXItcmFkaXVzOjRweDsgY29sb3I6I2ZmZmZmZjsgZGlzcGxheTppbmxpbmUtYmxvY2s7IGZvbnQtZmFtaWx5Okdvb2dsZSBTYW5zLCBSb2JvdG8sIEFyaWFsOyBmb250LXNpemU6MTZweDsgbGluZS1oZWlnaHQ6MjVweDsgdGV4dC1kZWNvcmF0aW9uOm5vbmU7ICBwYWRkaW5nOjdweCAyNHB4IDdweCAyNHB4OyAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6bm9uZTsgbXNvLWhpZGU6YWxsOyBmb250LXdlaWdodDo1MDA7IHRleHQtYWxpZ246IGNlbnRlcjsgd29yZC1icmVhazpub3JtYWw7ICBkaXJlY3Rpb246bHRyOyBtaW4td2lkdGg6IDEyOHB4OyI-DQpGb3IgQW5kcm9pZA0KPC90ZD48L3RyPg0KICAgIDx0ciBzdHlsZT0icGFkZGluZzogMDsgbWFyZ2luOiAwOyBmb250LXNpemU6IDA7IGxpbmUtaGVpZ2h0OiAwOyI-PHRkIHN0eWxlPSJib3JkZXItdG9wOiAzcHg7IGRpc3BsYXk6aW5saW5lLWJsb2NrO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDRweDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNHB4OyAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6bm9uZTttc28taGlkZTphbGw7dGV4dC1hbGlnbjogY2VudGVyOyI-PC90ZD48L3RyPg0KPC90YWJsZT48L2E-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLTwhW2VuZGlmXS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB3aWR0aD00MCBzdHlsZT13aWR0aDo0MHB4OyBjbGFzcz13aWRtaW5zcGFjZT7CoMKgPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tW2lmIG1zb10-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHY6cm91bmRyZWN0IHhtbG5zOnY9InVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206dm1sIiB4bWxuczp3PSJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOm9mZmljZTp3b3JkIiBocmVmPSJodHRwczovL25vdGlmaWNhdGlvbnMuZ29vZ2xlLmNvbS9nL3AvQU5pYW81cDN5UHltY013NUtJbndRakNERzVndFFLUjFaaGFuZkJ4NExzSTM2T1ZQV3l2MzZ5SzlWQUNwTUVpTXJfLXNwaDM5LTJpUk1JdGV2WFdFM0V6UHVsaEZrbUtINkx6bUJJeEkxSHE0d3BZY1F3MmxpdkxaaVlTbDJmRzZjbTc5VndPQVlhUHVOUlVoNUdlcXpjTG1YLTNwWVpya3A2aE9YRzBBOW0yM0V1SG1qRHhqQ0JrZjlXY0xLY2xscE11QkJ1SmU1LWRfWWJVYnVDQWE0RkpobXg5b1ZqU3Rncm1Qd1k3c0tFUW1DdFZqUzR2RUo4TGpTRnptMHhWb21fc1ltUkZOalNIMHJRYVRaT1g1VmxOOF9SeGZLUHJlZ0RLNGR0S1RkY04tNDc1UXdRNFdrMVJnM0UtY0dDZ1BBR2dHSHpwSmZDMVl1Mk1wQXRYSjBkeGcxN1ZTd3ZTd1dLQWFWYThlLWpRQWdKQ0ZHZ2JEWlVrZXpZb01jc0stalJ5OG55a1kyS1g4QTZSYyIgc3R5bGU9ImhlaWdodDo0OHB4OyB2LXRleHQtYW5jaG9yOm1pZGRsZTsgd2lkdGg6MTg4OyIgYXJjc2l6ZT0iMTAlIiBzdHJva2Vjb2xvcj0iIzFBNzNFOCIgZmlsbGNvbG9yPSIjMUE3M0U4OyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHc6YW5jaG9ybG9jay8-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNlbnRlciBzdHlsZT0iY29sb3I6I2ZmZmZmZjtmb250LWZhbWlseTpHb29nbGUgU2FucywgUm9ib3RvLCBBcmlhbDsgZm9udC1zaXplOjE2cHg7IGZvbnQtd2VpZ2h0Om5vcm1hbDsgd29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsiIGRpcj0ibHRyIj5Gb3IgaU9TPC9jZW50ZXI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92OnJvdW5kcmVjdD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCFbZW5kaWZdLS0-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tW2lmICFtc29dPjwhLS0-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1odHRwczovL25vdGlmaWNhdGlvbnMuZ29vZ2xlLmNvbS9nL3AvQU5pYW81cDN5UHltY013NUtJbndRakNERzVndFFLUjFaaGFuZkJ4NExzSTM2T1ZQV3l2MzZ5SzlWQUNwTUVpTXJfLXNwaDM5LTJpUk1JdGV2WFdFM0V6UHVsaEZrbUtINkx6bUJJeEkxSHE0d3BZY1F3MmxpdkxaaVlTbDJmRzZjbTc5VndPQVlhUHVOUlVoNUdlcXpjTG1YLTNwWVpya3A2aE9YRzBBOW0yM0V1SG1qRHhqQ0JrZjlXY0xLY2xscE11QkJ1SmU1LWRfWWJVYnVDQWE0RkpobXg5b1ZqU3Rncm1Qd1k3c0tFUW1DdFZqUzR2RUo4TGpTRnptMHhWb21fc1ltUkZOalNIMHJRYVRaT1g1VmxOOF9SeGZLUHJlZ0RLNGR0S1RkY04tNDc1UXdRNFdrMVJnM0UtY0dDZ1BBR2dHSHpwSmZDMVl1Mk1wQXRYSjBkeGcxN1ZTd3ZTd1dLQWFWYThlLWpRQWdKQ0ZHZ2JEWlVrZXpZb01jc0stalJ5OG55a1kyS1g4QTZSYyB0YXJnZXQ9X2JsYW5rIGRpcj1sdHIgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgZGlzcGxheTogaW5saW5lLWJsb2NrOyI-DQo8dGFibGUgcm9sZT1wcmVzZW50YXRpb24gY2VsbHNwYWNpbmc9MCBjZWxscGFkZGluZz0wIGFsaWduPWNlbnRlcj4NCiAgICA8dHIgc3R5bGU9InBhZGRpbmc6IDA7IG1hcmdpbjogMDsgZm9udC1zaXplOiAwOyBsaW5lLWhlaWdodDogMDsiPjx0ZCBzdHlsZT0iYm9yZGVyLXRvcDogNHB4OyBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA0cHg7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDRweDtkaXNwbGF5OmlubGluZS1ibG9jazsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0Om5vbmU7bXNvLWhpZGU6YWxsO3RleHQtYWxpZ246IGNlbnRlcjsiPjwvdGQ-PC90cj4NCiAgICAgICAgPHRyPjx0ZCBjbGFzcz0ic3ViaGVhZGxpbmUgYnRuX21vZDNfbW9iaWxlIGVud2lkMiB3aWRtaW4iIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiMxQTczRTg7OyBib3JkZXI6MXB4IHNvbGlkICMxQTczRTg7IGJvcmRlci1yYWRpdXM6NHB4OyBjb2xvcjojZmZmZmZmOyBkaXNwbGF5OmlubGluZS1ibG9jazsgZm9udC1mYW1pbHk6R29vZ2xlIFNhbnMsIFJvYm90bywgQXJpYWw7IGZvbnQtc2l6ZToxNnB4OyBsaW5lLWhlaWdodDoyNXB4OyB0ZXh0LWRlY29yYXRpb246bm9uZTsgIHBhZGRpbmc6N3B4IDI0cHggN3B4IDI0cHg7IC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDpub25lOyBtc28taGlkZTphbGw7IGZvbnQtd2VpZ2h0OjUwMDsgdGV4dC1hbGlnbjogY2VudGVyOyB3b3JkLWJyZWFrOm5vcm1hbDsgIGRpcmVjdGlvbjpsdHI7IG1pbi13aWR0aDogMTI4cHg7Ij4NCkZvciBpT1MNCjwvdGQ-PC90cj4NCiAgICA8dHIgc3R5bGU9InBhZGRpbmc6IDA7IG1hcmdpbjogMDsgZm9udC1zaXplOiAwOyBsaW5lLWhlaWdodDogMDsiPjx0ZCBzdHlsZT0iYm9yZGVyLXRvcDogM3B4OyBkaXNwbGF5OmlubGluZS1ibG9jaztib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiA0cHg7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDRweDsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0Om5vbmU7bXNvLWhpZGU6YWxsO3RleHQtYWxpZ246IGNlbnRlcjsiPjwvdGQ-PC90cj4NCjwvdGFibGU-PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS08IVtlbmRpZl0tLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgPHRyPjx0ZCBoZWlnaHQ9NTA-PC90ZD48L3RyPg0KICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KDQogICAgICAgICAgICAgIDx0cj48dGQgaGVpZ2h0PTI0PjwvdGQ-PC90cj4NCiAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICA8dGQgd2lkdGg9NDgwIHN0eWxlPSItd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lOyAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgYm9yZGVyOiAycHggc29saWQgI0RGRTFFNTsgYm9yZGVyLXJhZGl1czogOHB4OyI-DQogICAgICAgICAgICAgICAgICAgIDx0YWJsZSByb2xlPXByZXNlbnRhdGlvbiBib3JkZXI9MCBjZWxsc3BhY2luZz0wIGNlbGxwYWRkaW5nPTAgYWxpZ249Y2VudGVyIHdpZHRoPTEwMCU-DQogICAgICAgICAgICAgICAgICAgICAgPHRyPjx0ZCBoZWlnaHQ9NDA-PC90ZD48L3RyPg0KICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj1jZW50ZXI-ICAgIDxpbWcgcm9sZT1wcmVzZW50YXRpb24gY2xhc3M9bW9kdWxlX21vYmlsZSB3aWR0aD00OCBoZWlnaHQ9NDggYm9yZGVyPTAgc3JjPWh0dHBzOi8vd3d3LmdzdGF0aWMuY29tL2d1bWRyb3AvZmlsZXMvc2VjdXJpdHktbG9nby5wbmcgc3R5bGU9IndpZHRoOiA0OHB4OyBoZWlnaHQ6NDhweDsgdGV4dC1hbGlnbjogY2VudGVyOyBib3JkZXI6IG5vbmU7Ij4NCjwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICA8dHI-PHRkIGhlaWdodD0xNT48L3RkPjwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVtpZiBtc29dPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJjZW50ZXIiIGNsYXNzPSJkZXZpY2VfdHh0IHNwYWNlNiIgc3R5bGU9J2NvbG9yOiMyMDIxMjQ7IGZvbnQtZmFtaWx5Okdvb2dsZSBTYW5zLCAiUm9ib3RvIiwgQXJpYWw7IGZvbnQtc2l6ZToxOHB4OyBmb250LXdlaWdodDpub3JtYWw7IGxpbmUtaGVpZ2h0OjMzcHg7IG1hcmdpbjowOyBwYWRkaW5nOjAgODBweCAyMHB4IDgwcHg7IHRleHQtYWxpZ246Y2VudGVyOyB3b3JkLWJyZWFrOm5vcm1hbDtkaXJlY3Rpb246bHRyOycgZGlyPSJsdHIiPkNvbmZpcm0geW91ciBvcHRpb25zIGFyZSByaWdodCA8c3BhbiBzdHlsZT0id2hpdGUtc3BhY2U6bm93cmFwOyAiIGNsYXNzPSIiPmZvciB5b3U8L3NwYW4-PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhW2VuZGlmXS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVtpZiAhbXNvXT48IS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPWNlbnRlciBjbGFzcz0iZGV2aWNlX3R4dCBzcGFjZTYiIHN0eWxlPSJjb2xvcjojMjAyMTI0OyBmb250LWZhbWlseTpHb29nbGUgU2FucywgJnF1b3Q7Um9ib3RvJnF1b3Q7LCBBcmlhbDsgZm9udC1zaXplOjE4cHg7IGZvbnQtd2VpZ2h0Om5vcm1hbDsgbGluZS1oZWlnaHQ6MzNweDsgbWFyZ2luOjA7IHBhZGRpbmc6MCA4MHB4IDAgODBweDsgdGV4dC1hbGlnbjpjZW50ZXI7IHdvcmQtYnJlYWs6bm9ybWFsO2RpcmVjdGlvbjpsdHI7IiBkaXI9bHRyPkNvbmZpcm0geW91ciBvcHRpb25zIGFyZSByaWdodCA8c3BhbiBzdHlsZT0id2hpdGUtc3BhY2U6bm93cmFwOyAiIGNsYXNzPSIiPmZvciB5b3U8L3NwYW4-PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS08IVtlbmRpZl0tLT4NCiAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgIDwhLS1baWYgIW1zb10-PCEtLT4NCiAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICA8dGQgaGVpZ2h0PTE1IHN0eWxlPSJsaW5lLWhlaWdodDogNHB4OyBmb250LXNpemU6IDRweDsiPjwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICA8IS0tPCFbZW5kaWZdLS0-DQogICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJzdWJoZWFkbGluZSBzcGFjZTYiIGFsaWduPWNlbnRlciBzdHlsZT0iY29sb3I6IzVGNjM2ODsgZm9udC1mYW1pbHk6JnF1b3Q7Um9ib3RvJnF1b3Q7LCBPcGVuU2FucywgJnF1b3Q7T3BlbiBTYW5zJnF1b3Q7LCBBcmlhbCwgc2Fucy1zZXJpZjsgZm9udC1zaXplOjE2cHg7IGZvbnQtd2VpZ2h0Om5vcm1hbDsgbGluZS1oZWlnaHQ6MjRweDsgbWFyZ2luOjA7IHBhZGRpbmc6MCA4MHB4IDAgODBweDsgdGV4dC1hbGlnbjpjZW50ZXI7IHdvcmQtYnJlYWs6bm9ybWFsO2RpcmVjdGlvbjpsdHI7IiBkaXI9bHRyPlJldmlldyBhbmQgY2hhbmdlIHlvdXIgcHJpdmFjeSBhbmQgc2VjdXJpdHkgb3B0aW9ucyB0byBtYWtlIDxzcGFuIHN0eWxlPSJ3aGl0ZS1zcGFjZTpub3dyYXA7ICIgY2xhc3M9IiI-R29vZ2xlPC9zcGFuPiB3b3JrIGJldHRlciA8c3BhbiBzdHlsZT0id2hpdGUtc3BhY2U6bm93cmFwOyAiIGNsYXNzPSIiPmZvciB5b3UuPC9zcGFuPjwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICA8dHI-PHRkIGhlaWdodD0zMD48L3RkPjwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgYWxpZ249Y2VudGVyIHZhbGlnbj10b3A-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgcm9sZT1wcmVzZW50YXRpb24-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgcGFkZGluZy10b3A6IDA7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVtpZiBtc29dPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHY6cm91bmRyZWN0IHhtbG5zOnY9InVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206dm1sIiB4bWxuczp3PSJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOm9mZmljZTp3b3JkIiBocmVmPSJodHRwczovL25vdGlmaWNhdGlvbnMuZ29vZ2xlLmNvbS9nL3AvQU5pYW81cm04Qk5aam9fd05wQXhwUU1lMG5lSjkzSzdRRXY4V1RSN25ScG9WM0FmWWVHYXNRcXVNZlRpbzdheHh3TnJCbmxQYnEtUW5NbEZ4ME5PV3VGVUhVeFZWdVNQaGtPY2RUWk1sVUdPM29NVUxZemVvcGd0UllheUtlWWFXZFdYbV9XNEg0SDlRM25MdnBhR1IwanF6Unotd0s1MHhKd3lFUS0xb25nQllRNnEtM0NmYmprYzdaa1ZTdFVyNnRJdHBydUh6blhJeTlEbkNCcG1kVUpkVGw0bFd4bUYtR0lYUW9WbEQ0VnlpZ3p1WjhNbFVtQzlUaFY1VTkzU0JwTlFMcmFpUkY3RG5NUFU2WF9DZWRIckdhMXhuNERqcmJpWlJLWXBFQ0hWT01fOU5ZUnZsMV92bXhaeUZLbXpXRVBiaXdVYS16Yk5HR2dMYnRoLWpyOCIgc3R5bGU9ImhlaWdodDo0OHB4OyB2LXRleHQtYW5jaG9yOm1pZGRsZTsgd2lkdGg6MTg4cHg7IiBhcmNzaXplPSIxMCUiIHN0cm9rZWNvbG9yPSIjMUE3M0U4IiBmaWxsY29sb3I9IiMxQTczRTg7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx3OmFuY2hvcmxvY2svPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGNlbnRlciBzdHlsZT0iY29sb3I6I2ZmZmZmZjtmb250LWZhbWlseTpHb29nbGUgU2FucywgUm9ib3RvLCBBcmlhbDsgZm9udC1zaXplOjE2cHg7IGZvbnQtd2VpZ2h0Om5vcm1hbDsgd29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsiIGRpcj0ibHRyIj5Db25maXJtPC9jZW50ZXI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Y6cm91bmRyZWN0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhW2VuZGlmXS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tW2lmICFtc29dPjwhLS0-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1odHRwczovL25vdGlmaWNhdGlvbnMuZ29vZ2xlLmNvbS9nL3AvQU5pYW81cm04Qk5aam9fd05wQXhwUU1lMG5lSjkzSzdRRXY4V1RSN25ScG9WM0FmWWVHYXNRcXVNZlRpbzdheHh3TnJCbmxQYnEtUW5NbEZ4ME5PV3VGVUhVeFZWdVNQaGtPY2RUWk1sVUdPM29NVUxZemVvcGd0UllheUtlWWFXZFdYbV9XNEg0SDlRM25MdnBhR1IwanF6Unotd0s1MHhKd3lFUS0xb25nQllRNnEtM0NmYmprYzdaa1ZTdFVyNnRJdHBydUh6blhJeTlEbkNCcG1kVUpkVGw0bFd4bUYtR0lYUW9WbEQ0VnlpZ3p1WjhNbFVtQzlUaFY1VTkzU0JwTlFMcmFpUkY3RG5NUFU2WF9DZWRIckdhMXhuNERqcmJpWlJLWXBFQ0hWT01fOU5ZUnZsMV92bXhaeUZLbXpXRVBiaXdVYS16Yk5HR2dMYnRoLWpyOCB0YXJnZXQ9X2JsYW5rIGRpcj1sdHIgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgZGlzcGxheTogaW5saW5lLWJsb2NrOyI-DQo8dGFibGUgcm9sZT1wcmVzZW50YXRpb24gY2VsbHNwYWNpbmc9MCBjZWxscGFkZGluZz0wIGFsaWduPWNlbnRlcj4NCiAgICA8dHIgc3R5bGU9InBhZGRpbmc6IDA7IG1hcmdpbjogMDsgZm9udC1zaXplOiAwOyBsaW5lLWhlaWdodDogMDsiPjx0ZCBzdHlsZT0iYm9yZGVyLXRvcDogNHB4OyBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA0cHg7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDRweDtkaXNwbGF5OmlubGluZS1ibG9jazsgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0Om5vbmU7bXNvLWhpZGU6YWxsO3RleHQtYWxpZ246IGNlbnRlcjsiPjwvdGQ-PC90cj4NCiAgICAgICAgPHRyPg0KICAgICAgICAgICAgPHRkIGNsYXNzPSJzdWJoZWFkbGluZSBidG5fbW9kNF9tb2JpbGUgZW53aWQiIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiMxQTczRTg7OyBib3JkZXI6MXB4IHNvbGlkICMxQTczRTg7IGJvcmRlci1yYWRpdXM6NHB4OyBjb2xvcjojZmZmZmZmOyBkaXNwbGF5OmlubGluZS1ibG9jazsgZm9udC1mYW1pbHk6R29vZ2xlIFNhbnMsIFJvYm90bywgQXJpYWw7IGZvbnQtc2l6ZToxNnB4OyBsaW5lLWhlaWdodDoyNXB4OyB0ZXh0LWRlY29yYXRpb246bm9uZTsgIHBhZGRpbmc6N3B4IDI0cHggN3B4IDI0cHg7IC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDpub25lOyBtc28taGlkZTphbGw7IGZvbnQtd2VpZ2h0OjUwMDsgdGV4dC1hbGlnbjogY2VudGVyOyB3b3JkLWJyZWFrOm5vcm1hbDsgIGRpcmVjdGlvbjpsdHI7IG1pbi13aWR0aDogMTU5cHg7Ij4NCkNvbmZpcm0NCjwvdGQ-DQogICAgICAgICAgICA8L3RyPg0KICAgIDx0ciBzdHlsZT0icGFkZGluZzogMDsgbWFyZ2luOiAwOyBmb250LXNpemU6IDA7IGxpbmUtaGVpZ2h0OiAwOyI-PHRkIHN0eWxlPSJib3JkZXItdG9wOiAzcHg7IGRpc3BsYXk6aW5saW5lLWJsb2NrO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDRweDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNHB4OyAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6bm9uZTttc28taGlkZTphbGw7dGV4dC1hbGlnbjogY2VudGVyOyI-PC90ZD48L3RyPg0KPC90YWJsZT48L2E-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLTwhW2VuZGlmXS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgIDx0cj48dGQgaGVpZ2h0PTUwPjwvdGQ-PC90cj4NCiAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgPC90cj4NCg0KDQogICAgICAgICAgPHRyPjx0ZCBoZWlnaHQ9MjQ-PC90ZD48L3RyPg0KICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgPHRkIHdpZHRoPTQ4MCBzdHlsZT0iLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7IC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTsgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IGJvcmRlcjogMnB4IHNvbGlkICNERkUxRTU7IGJvcmRlci1yYWRpdXM6IDhweDsiPg0KICAgICAgICAgICAgICAgICAgICA8dGFibGUgcm9sZT1wcmVzZW50YXRpb24gYm9yZGVyPTAgY2VsbHNwYWNpbmc9MCBjZWxscGFkZGluZz0wIHdpZHRoPTEwMCU-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImZvbnQtc2l6ZTowcHQ7IGxpbmUtaGVpZ2h0OjBwdDsgcGFkZGluZzowOyBtYXJnaW46MDsiIHdpZHRoPTI0PjwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1baWYgbXNvXT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJtYXJnaW4tYm90dG9tOjY3cHg7IHBhZGRpbmc6IDIxcHggMTBweCAzNXB4IDIwcHg7Ij4gICAgPGltZyByb2xlPSJwcmVzZW50YXRpb24iIGNsYXNzPSJmYV9tb2JpbGUiIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgYm9yZGVyPSIwIiBzcmM9Imh0dHBzOi8vd3d3LmdzdGF0aWMuY29tL2d1bWRyb3AvZmlsZXMvaGVscC1vdXRsaW5lLnBuZyIgc3R5bGU9IndpZHRoOiAyNHB4OyBoZWlnaHQ6MjRweDsgdGV4dC1hbGlnbjogY2VudGVyOyBib3JkZXI6IG5vbmU7IGZvbnQtc2l6ZTozcHg7Ij4NCjwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhW2VuZGlmXS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tW2lmICFtc29dPjwhLS0-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0icGFkZGluZzogNDdweCAxMHB4IDQwcHggMjBweDsiIHZhbGlnbj10b3A-ICAgIDxpbWcgcm9sZT1wcmVzZW50YXRpb24gY2xhc3M9ZmFfbW9iaWxlIHdpZHRoPTI0IGhlaWdodD0yNCBib3JkZXI9MCBzcmM9aHR0cHM6Ly93d3cuZ3N0YXRpYy5jb20vZ3VtZHJvcC9maWxlcy9oZWxwLW91dGxpbmUucG5nIHN0eWxlPSJ3aWR0aDogMjRweDsgaGVpZ2h0OjI0cHg7IHRleHQtYWxpZ246IGNlbnRlcjsgYm9yZGVyOiBub25lOyBmb250LXNpemU6M3B4OyI-DQo8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tPCFbZW5kaWZdLS0-DQoJDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCB2YWxpZ249dG9wPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVtpZiBtc29dPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGV2aWNlX3R4dCIgc3R5bGU9Im1hcmdpbi1ib3R0b206MTVweDsgcGFkZGluZy1sZWZ0OiAyMHB4OyBjb2xvcjojMjAyMTI0OyBmb250LWZhbWlseTpHb29nbGUgU2FucywgUm9ib3RvLCBBcmlhbDsgZm9udC1zaXplOjE4cHg7IGxpbmUtaGVpZ2h0OjI4cHg7IHRleHQtYWxpZ246bGVmdDsgcGFkZGluZy10b3A6MThweDsgcGFkZGluZy1ib3R0b206MTJweDsgd29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsiIGRpcj0ibHRyIiB2YWxpZ249InRvcCI-RmluZCBhbnN3ZXJzPC9kaXY-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IVtlbmRpZl0tLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1baWYgIW1zb10-PCEtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ZGV2aWNlX3R4dCBzdHlsZT0icGFkZGluZy1sZWZ0OiAyMHB4OyBjb2xvcjojMjAyMTI0OyBmb250LWZhbWlseTpHb29nbGUgU2FucywgUm9ib3RvLCBBcmlhbDsgZm9udC1zaXplOjE4cHg7IGxpbmUtaGVpZ2h0OjI4cHg7IHRleHQtYWxpZ246bGVmdDsgcGFkZGluZy10b3A6NDVweDsgcGFkZGluZy1ib3R0b206MTJweDsgd29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsiIGRpcj1sdHIgdmFsaWduPXRvcD5GaW5kIGFuc3dlcnM8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS08IVtlbmRpZl0tLT4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVtpZiBtc29dPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3ViaGVhZGxpbmUgc3BhY2U3IiBzdHlsZT0ibWFyZ2luLWJvdHRvbToyMHB4OyBwYWRkaW5nLWxlZnQ6IDIwcHg7IHBhZGRpbmctcmlnaHQ6IDIwcHg7IGNvbG9yOiM1RjYzNjg7IGZvbnQtZmFtaWx5OlJvYm90bywgT3BlblNhbnMsIE9wZW4gU2FucywgQXJpYWwsIHNhbnMtc2VyaWY7IGZvbnQtd2VpZ2h0OiBub3JtYWw7IGZvbnQtc2l6ZToxNnB4OyBsaW5lLWhlaWdodDoyNHB4OyB0ZXh0LWFsaWduOmxlZnQ7IHBhZGRpbmctYm90dG9tOjUwcHg7IHdvcmQtYnJlYWs6bm9ybWFsO2RpcmVjdGlvbjpsdHI7IiBkaXI9Imx0ciIgdmFsaWduPSJ0b3AiPlZpc2l0IHRoZSA8YSBjbGFzcz0idHN0dCIgaHJlZj0iaHR0cHM6Ly9ub3RpZmljYXRpb25zLmdvb2dsZS5jb20vZy9wL0FOaWFvNXJ0dUJLbWY1NUxRcXRzQ04wdVp6eklMVUxUaWtQY05FTDl5NHd1UDliRFU0Q2Y5V2t1YkpTTk40TjdjQklDS240N0NWeHVSVkxFYzlHd0RzQlVJdENHMDcwbXdsUEFoalVKWUNSclVfdWR1czlmVDhZSlNiS0FIWjNrM3RqU1VPYV92MXUybXBBWEZfTXRiVFptOFdxYlBrZlpnMWhTSG5ZbHhCOUY5SW9JNTRyek9GR2UtS05oc1hEbzFqTEt4WlR2Y2VCOXVIUVl1aThlV29scmZ1bk5lSEwyY2FxSlZhUmt5LWNNbDZhNDk0Y3Fvem05emFlb0pGenJzSkcydmY3Z1BnT0VMcU83OVFWSHpGdDFuODc2QjJkSExyRUdTRi1fY0lwejlRS1c4N1EiIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6IzFBNzNFODsgdGV4dC1kZWNvcmF0aW9uOm5vbmU7IGZvbnQtd2VpZ2h0Om5vcm1hbDsgYm9yZGVyOjA7IDsgd2hpdGUtc3BhY2U6IG5vcm1hbDsgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7Ij4gSGVscCBDZW50ZXI8L2E-IHRvIGxlYXJuIGFsbCBhYm91dCB5b3VyIG5ldyBHb29nbGUgQWNjb3VudC48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhW2VuZGlmXS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLVtpZiAhbXNvXT48IS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3ViaGVhZGxpbmUgc3BhY2U3IHRzdDQiIHN0eWxlPSJwYWRkaW5nLWxlZnQ6IDIwcHg7IHBhZGRpbmctcmlnaHQ6IDIwcHg7IGNvbG9yOiM1RjYzNjg7IGZvbnQtZmFtaWx5OlJvYm90bywgT3BlblNhbnMsIE9wZW4gU2FucywgQXJpYWwsIHNhbnMtc2VyaWY7IGZvbnQtd2VpZ2h0OiBub3JtYWw7IGZvbnQtc2l6ZToxNnB4OyBsaW5lLWhlaWdodDoyNHB4OyB0ZXh0LWFsaWduOmxlZnQ7IHBhZGRpbmctYm90dG9tOjUwcHg7IHdvcmQtYnJlYWs6bm9ybWFsO2RpcmVjdGlvbjpsdHI7IiBkaXI9bHRyIHZhbGlnbj10b3A-VmlzaXQgdGhlIDxhIGNsYXNzPXRzdHQgaHJlZj1odHRwczovL25vdGlmaWNhdGlvbnMuZ29vZ2xlLmNvbS9nL3AvQU5pYW81cnR1QkttZjU1TFFxdHNDTjB1Wnp6SUxVTFRpa1BjTkVMOXk0d3VQOWJEVTRDZjlXa3ViSlNOTjRON2NCSUNLbjQ3Q1Z4dVJWTEVjOUd3RHNCVUl0Q0cwNzBtd2xQQWhqVUpZQ1JyVV91ZHVzOWZUOFlKU2JLQUhaM2szdGpTVU9hX3YxdTJtcEFYRl9NdGJUWm04V3FiUGtmWmcxaFNIbllseEI5RjlJb0k1NHJ6T0ZHZS1LTmhzWERvMWpMS3haVHZjZUI5dUhRWXVpOGVXb2xyZnVuTmVITDJjYXFKVmFSa3ktY01sNmE0OTRjcW96bTl6YWVvSkZ6cnNKRzJ2ZjdnUGdPRUxxTzc5UVZIekZ0MW44NzZCMmRITHJFR1NGLV9jSXB6OVFLVzg3USB0YXJnZXQ9X2JsYW5rIHN0eWxlPSJjb2xvcjojMUE3M0U4OyB0ZXh0LWRlY29yYXRpb246bm9uZTsgZm9udC13ZWlnaHQ6bm9ybWFsOyBib3JkZXI6MDsgOyB3aGl0ZS1zcGFjZTogbm9ybWFsOyB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiPiBIZWxwIENlbnRlcjwvYT4gdG8gbGVhcm4gYWxsIGFib3V0IHlvdXIgbmV3IEdvb2dsZSBBY2NvdW50LjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLTwhW2VuZGlmXS0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImZvbnQtc2l6ZTowcHQ7IGxpbmUtaGVpZ2h0OjBwdDsgcGFkZGluZzowOyBtYXJnaW46MDsiIHdpZHRoPTI0PjwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7IC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTsgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSByb2xlPXByZXNlbnRhdGlvbiBib3JkZXI9MCBjZWxsc3BhY2luZz0wIGNlbGxwYWRkaW5nPTAgYWxpZ249Y2VudGVyIHdpZHRoPTEwMCU-DQogICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj48dGQgaGVpZ2h0PTMwPjwvdGQ-PC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCB3aWR0aD0xMzQgaGVpZ2h0PTQ2IGFsaWduPWNlbnRlciBzdHlsZT0iZm9udC1zaXplOjhweDsgd29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsiIGRpcj1sdHI-ICAgIDxpbWcgcm9sZT1wcmVzZW50YXRpb24gY2xhc3M9Z29vZ2xlX21vYmlsZSB3aWR0aD04MiBoZWlnaHQ9MjYgYm9yZGVyPTAgc3JjPWh0dHBzOi8vd3d3LmdzdGF0aWMuY29tL2d1bWRyb3AvZmlsZXMvZ29vZ2xlLWxvZ28tZm9vdGVyLnBuZyBzdHlsZT0id2lkdGg6IDgycHg7IGhlaWdodDoyNnB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGJvcmRlcjogbm9uZTsiPg0KPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPjx0ZCBoZWlnaHQ9MTk-PC90ZD48L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPXNwYWNlNiBhbGlnbj1jZW50ZXIgc3R5bGU9ImNvbG9yOiM1RjYzNjg7IGZvbnQtZmFtaWx5OiZxdW90O1JvYm90byZxdW90OywgT3BlblNhbnMsICZxdW90O09wZW4gU2FucyZxdW90OywgQXJpYWwsIHNhbnMtc2VyaWY7IGZvbnQtc2l6ZToxMnB4OyBsaW5lLWhlaWdodDoxOHB4OyBtYXJnaW46MDsgcGFkZGluZzowIDgwcHggMCA4MHB4OyB0ZXh0LWFsaWduOmNlbnRlcjsgd29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsiIGRpcj1sdHI-UmVwbGllcyB0byB0aGlzIGVtYWlsIGFyZW4mIzM5O3QgbW9uaXRvcmVkLiBJZiB5b3UgaGF2ZSBhIHF1ZXN0aW9uIGFib3V0IHlvdXIgbmV3IGFjY291bnQsIHRoZSA8YSBjbGFzcz10c3R0IGhyZWY9aHR0cHM6Ly9ub3RpZmljYXRpb25zLmdvb2dsZS5jb20vZy9wL0FOaWFvNXJ2T1VBWFFsbElYYmctUzhIMkNVMFk0MWpURjFZaWhFaENPQllHWUducGlYaDFEN042cUxYQU9RSUJock9lR0dtWnhaNXZkS055cU1Qdm51ZVdseTZJT3pzNDNBdElfUHc5TGNaRC1tbVdSd3Z2MHh0V2lJRzBkTENYVVFEMnRCeWpUSkdrNkxJTmNpU0hkN2M3TVVIMEVkclEyeHFsdURkU3RFaGN4LWRiaVZQcnlwVWxpSlRyQWJkeUk2OWtGU1p4bUdxMWRXQzZjZEdTcWtvYTFQajhSaHo4YjlidWx1a2xSWm14VHFqMmp4QnBLYUs5V19Ha3JQeTV0cXd6Szg4WFFEX21IU2stM1ozRFdEYnlGSExvUWNHbEpPczFJWnZPRk10VzBfN295dUZwS3NZN0t2OCB0YXJnZXQ9X2JsYW5rIHN0eWxlPSJjb2xvcjojMUE3M0U4OyB0ZXh0LWRlY29yYXRpb246bm9uZTsgZm9udC13ZWlnaHQ6bm9ybWFsOyBib3JkZXI6MDsgOyB3aGl0ZS1zcGFjZTogbm9ybWFsOyB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsiPiBIZWxwIENlbnRlcjwvYT4gbGlrZWx5IGhhcyB0aGUgYW5zd2VyIHlvdSYjMzk7cmUgbG9va2luZyBmb3IuPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPjx0ZCBoZWlnaHQ9MTk-PC90ZD48L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPXNwYWNlNiB2YWxpZ249bWlkZGxlIHN0eWxlPSJjb2xvcjojNUY2MzY4OyBmb250LWZhbWlseTomcXVvdDtSb2JvdG8mcXVvdDssIE9wZW5TYW5zLCAmcXVvdDtPcGVuIFNhbnMmcXVvdDssIEFyaWFsLCBzYW5zLXNlcmlmOyBmb250LXNpemU6MTBweDsgbGluZS1oZWlnaHQ6MTVweDsgbWFyZ2luOjA7IHBhZGRpbmc6MCAzMHB4IDAgMzBweDsgdGV4dC1hbGlnbjpjZW50ZXIiIGFsaWduPWNlbnRlcj4NCiANCg0KICAgICAgPHNwYW4gc3R5bGU9ImZvbnQtc2l6ZTppbmhlcml0OyBjb2xvcjppbmhlcml0OyBmb250LXdlaWdodDppbmhlcml0OyBsaW5lLWhlaWdodDppbmhlcml0OyBmb250LWZhbWlseTppbmhlcml0OyI-R29vZ2xlIExMQzxicj4xNjAwIEFtcGhpdGhlYXRyZSBQYXJrd2F5LDxicj5Nb3VudGFpbiBWaWV3LCBDQSA5NDA0Mzwvc3Bhbj4NCiAgIA0KICAgDQoNCjxicj48YnI-PHNwYW4gc3R5bGU9d29yZC1icmVhazpub3JtYWw7ZGlyZWN0aW9uOmx0cjsgZGlyPWx0cj5UaGlzIGVtYWlsIHdhcyBzZW50IHRvIHlvdSBiZWNhdXNlIHlvdSBjcmVhdGVkIGEgR29vZ2xlIEFjY291bnQuPC9zcGFuPjwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgPHRyPjx0ZCBoZWlnaHQ9MTg-PC90ZD48L3RyPg0KICAgICAgICA8L3RhYmxlPg0KICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5Om5vbmU7IHdoaXRlLXNwYWNlOm5vd3JhcDsgZm9udDoxNXB4IGNvdXJpZXI7IGxpbmUtaGVpZ2h0OjA7Ij4NCiAgICAgICAgwqAgwqAgwqAgwqAgwqAgwqDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoA0KICAgICAgICDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoCDCoA0KICAgICAgICA8L2Rpdj4NCiAgICAgIDwvY2VudGVyPg0KICAgIDxpbWcgYWx0PSIiIGhlaWdodD0xIHdpZHRoPTMgc3JjPWh0dHBzOi8vbm90aWZpY2F0aW9ucy5nb29nbGUuY29tL2cvaW1nL0FOaWFvNXFlaEtHUkJGSS1iUGVDLTMxZnpwX3pnV3ViaGVFbl9TcGFPc19aNTQ2Z1poZTF1NGUtNVNyQ0QzTWlsVUxyYnRkemlrb01qWTBublRMbkt6ZEh4VzlrS3BLOWdaSGhwRHYwdVBXVkdxaTY2bmQ1TEE5LVdRSE8zdjBTaFdWU1R5Ujl3SmFqclJHenZtYWNpSXBJMmU2TWtBTUVsOEZPUGhZLmdpZj48L2JvZHk-DQogIDwvaHRtbD4NCg=="
        }
      }
    ]
  },
  "sizeEstimate": 98050,
  "historyId": "1424",
  "internalDate": "1703302265000"
}
